From: <Saved by Blink>
Snapshot-Content-Location: https://smiartist.my.canva.site/school-planner
Subject: School planner
Date: Fri, 29 Aug 2025 09:07:36 -0400
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----"


------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/html
Content-ID: <frame-FF6A6F54C1CDD1432E9AEF58CDF95415@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://smiartist.my.canva.site/school-planner

<!DOCTYPE html><html dir=3D"ltr" lang=3D"en" class=3D"theme light EHoceA"><=
head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3DUTF-=
8"><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-0f08c5db-4789=
-4c33-b78c-655bd1d79326@mhtml.blink" /><link rel=3D"stylesheet" type=3D"tex=
t/css" href=3D"cid:css-6ef5312e-a4d0-4833-85ce-68a64f0115fc@mhtml.blink" />=
<link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-3cdf9572-de10-4a=
a7-b6a3-d15fbd66205e@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/c=
ss" href=3D"cid:css-c81f04d0-5b01-47cd-a27d-b9f48da0596c@mhtml.blink" /><li=
nk rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-56c864ac-bbe4-4938-=
b84a-496cdf1a7bfe@mhtml.blink" /><base href=3D"https://smiartist.my.canva.s=
ite/school-planner/"><title>School planner</title><meta name=3D"app-name" c=
ontent=3D"export_website"><meta name=3D"viewport" content=3D"width=3Ddevice=
-width, initial-scale=3D1"><link href=3D"https://smiartist.my.canva.site/sc=
hool-planner/_assets/a0684b0780c739e9.vendor.ltr.css" rel=3D"stylesheet" cr=
ossorigin=3D"anonymous"><link href=3D"https://smiartist.my.canva.site/schoo=
l-planner/_assets/289adb905fac282c.ltr.css" rel=3D"stylesheet" crossorigin=
=3D"anonymous"><link href=3D"https://smiartist.my.canva.site/school-planner=
/_assets/static_font_4.ltr.css" rel=3D"stylesheet"><link href=3D"https://sm=
iartist.my.canva.site/school-planner/_assets/3149e4ccf19fc22e.runtime.js" r=
el=3D"preload" as=3D"script" crossorigin=3D"anonymous" integrity=3D"sha512-=
JQSIG5SBKjyirCRRbT9vqr2tEYPVqtKyOKcOnoaolJv/ciEiBpfAQ4BR8jDt3z5hK8oHjjzA6wh=
KXvAWjAWTfg=3D=3D" nonce=3D""><link href=3D"https://smiartist.my.canva.site=
/school-planner/_assets/e633f538fad2b752.s4le6a.vendor.js" rel=3D"preload" =
as=3D"script" crossorigin=3D"anonymous" integrity=3D"sha512-bZiEERMDe++SiQC=
ZbF/5Ly/YWka9ZvcIElJL1y5HitvWD/TT16drN6IIN5HT0xL8tzy4qoGabJD7XCOGTM+xBQ=3D=
=3D" nonce=3D""><link href=3D"https://smiartist.my.canva.site/school-planne=
r/_assets/6dfedd5eb1e03f64.vendor.js" rel=3D"preload" as=3D"script" crossor=
igin=3D"anonymous" integrity=3D"sha512-2uR6jKOJQbtiI4rLh4sFZ/Yv3a6yX2hFFwgf=
LvRnow/bCWNKRxfQYk08/kh1gEcG74Y4A4ihbfMoSe9dNxHhoA=3D=3D" nonce=3D""><link =
href=3D"https://smiartist.my.canva.site/school-planner/_assets/1699aa8480dd=
c861.strings.js" rel=3D"preload" as=3D"script" crossorigin=3D"anonymous" in=
tegrity=3D"sha512-OTxbbgjy0EpUqlNsKP4GEwK7qIQBPTHdFZYvUe6BQmzhe0OR9ngek8Oab=
a2R8aVT2AK2K8irpYcvG+fFtGiMAg=3D=3D" nonce=3D""><link href=3D"https://smiar=
tist.my.canva.site/school-planner/_assets/9a9d2935a08d2ba3.en.js" rel=3D"pr=
eload" as=3D"script" crossorigin=3D"anonymous" integrity=3D"sha512-/33uJLYK=
Zdbo/mW4bzKuekUqiZaY/12vOiDe8FMOuQWjNnTk1ydBQPI2QxTAy+Uijph+gXT6hKRj3hWKDjG=
ITg=3D=3D" nonce=3D""><link href=3D"https://smiartist.my.canva.site/school-=
planner/_assets/7510e74269168702.js" rel=3D"preload" as=3D"script" crossori=
gin=3D"anonymous" integrity=3D"sha512-wRK0NqN3DQyoQ2q9NEtpuIUi86Zc+d17r6hM3=
H2ixCcxuqBgXq15nVamOqz+h7iLwlCX8zCmUVe3SaPvM53Otw=3D=3D" nonce=3D""><meta n=
ame=3D"referrer" content=3D"strict-origin-when-cross-origin"><meta property=
=3D"og:title" content=3D"School planner"><meta property=3D"og:type" content=
=3D"website"><link rel=3D"shortcut icon" href=3D"https://smiartist.my.canva=
.site/school-planner/_assets/images/2d0b56e7e51cf11036ad8734bdb67e2d.png"><=
link rel=3D"icon" href=3D"https://smiartist.my.canva.site/school-planner/_a=
ssets/images/e53c4bd8da5e491d9ab09e7cf0daf874.png" sizes=3D"192x192"><link =
rel=3D"apple-touch-icon" href=3D"https://smiartist.my.canva.site/school-pla=
nner/_assets/images/725b756a69a7d4c235070e51acd85560.png" sizes=3D"180x180"=
><link rel=3D"stylesheet" type=3D"text/css" href=3D"https://smiartist.my.ca=
nva.site/school-planner/_assets/b5de2817a09dae0e.ltr.css"><link rel=3D"styl=
esheet" type=3D"text/css" href=3D"https://smiartist.my.canva.site/school-pl=
anner/_assets/48f7024d7de3a1d6.ltr.css"></head><body><div id=3D"root"><div =
class=3D"yIDCqA"><main class=3D"_8OlyIw"><div class=3D"_4KoDHA"><div class=
=3D"ZRRuDw"><div style=3D"height: 100%; width: 100%;"><div class=3D"KYQZFA"=
><section id=3D"PB3RlNJptZ2rfJ3V" class=3D"rGeu6w" data-scroll-ready=3D"tru=
e" style=3D"background-color: rgb(255, 255, 255);"><div><div class=3D"onhyO=
Q" style=3D"width: 1517px; height: 768px; align-items: center;"><div class=
=3D"twbtjQ"><div class=3D"GDnEHQ" style=3D"width: 1517px; height: 768px; ba=
ckground-color: rgb(255, 255, 255);"><div class=3D"o2Yl2g"><div class=3D"_m=
XnjA" lang=3D"en" style=3D"width: 1517px; height: 768px;"><div class=3D"_6t=
4CHA"><div class=3D"a26Xuw"><div class=3D"fbzKiw" style=3D"background: rgb(=
255, 255, 255);"></div></div></div><div style=3D"position: absolute; top: 7=
6.8px; left: 76.8px; width: 1363.4px; height: 614.4px;"></div><div class=3D=
"DF_utQ _682gpw _0xkaeQ" style=3D"touch-action: pan-x pan-y pinch-zoom; wid=
th: 1517px; height: 768px; transform: translate(0px, 0px);"><div style=3D"w=
idth: 1517px; height: 768px; transform: scale(1, 1); transform-origin: 0px =
0px;"><div class=3D"hVT_uA PgAXEw"><div class=3D"Rt1H_w"><div class=3D"IwXX=
kw _qImYg JbJFjg _CObZw"></div><div class=3D"_5sVuA"><span aria-hidden=3D"t=
rue" class=3D"NA_Img dkWypw _6ti9_A"><svg xmlns=3D"http://www.w3.org/2000/s=
vg" xmlns:xlink=3D"http://www.w3.org/1999/xlink" width=3D"24" height=3D"24"=
 viewBox=3D"0 0 24 24"><defs><path id=3D"_265464792__a" d=3D"M4 21A9 9 0 0 =
0 4 3a1 1 0 1 0 0 2 7 7 0 1 1 0 14 1 1 0 0 0 0 2z"></path></defs><use fill=
=3D"currentColor" fill-rule=3D"nonzero" transform=3D"matrix(-1 0 0 1 16 0)"=
 xlink:href=3D"#_265464792__a"></use></svg></span></div></div></div><div cl=
ass=3D"S3wQqg lKZixA _8YzbFQ"><div class=3D"uqhtBg"><iframe src=3D"cid:fram=
e-F660A1E656C5069C729A4E052AAC2B21@mhtml.blink" width=3D"1366" height=3D"76=
8" frameborder=3D"0" sandbox=3D"allow-same-origin allow-scripts allow-popup=
s allow-forms allow-popups-to-escape-sandbox" style=3D"width:100%;height:10=
0%;border:0" title=3D"Embedded content"></iframe></div></div></div></div></=
div></div></div><div class=3D"QhExXw pKfnlA" style=3D"width: 1517px; height=
: 768px; margin: 0px;"></div></div></div></div></section></div><div><div cl=
ass=3D"footer-overflow-container" lang=3D"en">
  <div class=3D"footer-container">
    <button id=3D"report_button" class=3D"footer-pill footer-pill-secondary=
" type=3D"button">
      Terms &amp; Support
    </button>
    <a class=3D"footer-pill footer-pill-primary footer-pill-link" target=3D=
"_blank" href=3D"https://www.canva.com/" aria-label=3D"Designed with Canva"=
>
      <div class=3D"footer-pill-primary-background">
        <svg viewBox=3D"20 20 55 55" xmlns=3D"http://www.w3.org/2000/svg">
          <defs>
            <radialGradient id=3D"cyanSpotLarge" cx=3D"0.5" cy=3D"0.5" r=3D=
"0.5" fx=3D"0.8" fy=3D"0.8" spreadMethod=3D"pad">
              <stop offset=3D"0%" stop-color=3D"rgb(0, 196, 204)" stop-opac=
ity=3D"1"></stop>
              <stop offset=3D"100%" stop-color=3D"rgb(0, 196, 204)" stop-op=
acity=3D"0"></stop>
            </radialGradient>
            <radialGradient id=3D"cyanSpot" cx=3D"0.5" cy=3D"0.5" r=3D"0.5"=
 fx=3D"0.2" fy=3D"0.2" spreadMethod=3D"pad">
              <stop offset=3D"0%" stop-color=3D"rgb(0, 196, 204)" stop-opac=
ity=3D"0.75"></stop>
              <stop offset=3D"100%" stop-color=3D"rgb(0, 196, 204)" stop-op=
acity=3D"0"></stop>
            </radialGradient>
            <radialGradient id=3D"purpleSpotLarge" cx=3D"0.5" cy=3D"0.5" r=
=3D"0.5" fx=3D"0.8" fy=3D"0.8" spreadMethod=3D"pad">
              <stop offset=3D"0%" stop-color=3D"rgb(125, 42, 232)" stop-opa=
city=3D"1"></stop>
              <stop offset=3D"100%" stop-color=3D"rgb(125, 42, 232)" stop-o=
pacity=3D"0"></stop>
            </radialGradient>
            <radialGradient id=3D"purpleSpot" cx=3D"0.5" cy=3D"0.5" r=3D"0.=
5" fx=3D"0.2" fy=3D"0.2" spreadMethod=3D"pad">
              <stop offset=3D"0%" stop-color=3D"rgb(125, 42, 232)" stop-opa=
city=3D"0.85"></stop>
              <stop offset=3D"100%" stop-color=3D"rgb(125, 42, 232)" stop-o=
pacity=3D"0"></stop>
            </radialGradient>
          </defs>
          <!-- Average the RGB values of the Cyan & Purple brand colors -> =
Blue rect background -->
          <rect x=3D"0" y=3D"0" width=3D"100" height=3D"100" fill=3D"rgb(62=
.5, 119, 218)"></rect>
          <g class=3D"animation-container">
            <!-- Initial Rotation -->
            <g transform=3D"rotate(25)">
              <!-- Large Spots -->
              <g transform=3D"rotate(0) scale(2) translate(-40, -40)">
                <rect x=3D"0" y=3D"0" width=3D"100" height=3D"100" fill=3D"=
url(#cyanSpotLarge)"></rect>
              </g>
              <g transform=3D"rotate(180) scale(2) translate(-40, -40)">
                <rect x=3D"0" y=3D"0" width=3D"100" height=3D"100" fill=3D"=
url(#cyanSpotLarge)"></rect>
              </g>
              <g transform=3D"rotate(90) scale(1.5) translate(-25, -25)">
                <rect x=3D"0" y=3D"0" width=3D"100" height=3D"100" fill=3D"=
url(#purpleSpotLarge)"></rect>
              </g>
              <g transform=3D"rotate(270) scale(1.5) translate(-25, -25)">
                <rect x=3D"0" y=3D"0" width=3D"100" height=3D"100" fill=3D"=
url(#purpleSpotLarge)"></rect>
              </g>
              <!-- Small spots -->
              <g transform=3D"rotate(0) translate(-10, -10)">
                <rect x=3D"0" y=3D"0" width=3D"66" height=3D"66" fill=3D"ur=
l(#purpleSpot"></rect>
              </g>
              <g transform=3D"rotate(180) translate(-10, -10)">
                <rect x=3D"0" y=3D"0" width=3D"66" height=3D"66" fill=3D"ur=
l(#purpleSpot"></rect>
              </g>
              <g transform=3D"rotate(90) scale(1.2) translate(-10, -10)">
                <rect x=3D"0" y=3D"0" width=3D"66" height=3D"66" fill=3D"ur=
l(#cyanSpot)"></rect>
              </g>
              <g transform=3D"rotate(270) scale(1.2) translate(-10, -10)">
                <rect x=3D"0" y=3D"0" width=3D"66" height=3D"66" fill=3D"ur=
l(#cyanSpot)"></rect>
              </g>
            </g>
          </g>
        </svg>
      </div>
      Designed with=20
      <span class=3D"inline-icon-logo">
        <svg viewBox=3D"0 0 80 30" fill=3D"none" xmlns=3D"http://www.w3.org=
/2000/svg">
          <path d=3D"M79.444 18.096c-.136 0-.26.088-.324.272-.82 2.34-1.928=
 3.732-2.84 3.732-.524 0-.736-.584-.736-1.5 0-2.292 1.372-7.152 2.064-9.368=
.08-.268.132-.508.132-.712 0-.644-.352-.96-1.224-.96-.94 0-1.952.368-2.936 =
2.092-.34-1.52-1.368-2.184-2.804-2.184-1.66 0-3.264 1.068-4.584 2.8-1.32 1.=
732-2.872 2.3-4.04 2.02.84-2.056 1.152-3.592 1.152-4.732 0-1.788-.884-2.868=
-2.312-2.868-2.172 0-3.424 2.072-3.424 4.252 0 1.684.764 3.416 2.444 4.256-=
1.408 3.184-3.464 6.064-4.244 6.064-1.008 0-1.304-4.932-1.248-8.46.036-2.02=
4.204-2.128.204-2.74 0-.352-.228-.592-1.144-.592-2.136 0-2.796 1.808-2.896 =
3.884a10.233 10.233 0 01-.368 2.332c-.892 3.184-2.732 5.6-3.932 5.6-.556 0-=
.708-.556-.708-1.284 0-2.292 1.284-5.156 1.284-7.6 0-1.796-.788-2.932-2.272=
-2.932-1.748 0-4.06 2.08-6.248 5.976.72-2.984 1.016-5.872-1.116-5.872A2.886=
 2.886 0 0036 9.916a.752.752 0 00-.432.728c.204 3.176-2.56 11.312-5.18 11.3=
12-.476 0-.708-.516-.708-1.348 0-2.296 1.368-7.144 2.056-9.364.088-.288.136=
-.536.136-.752 0-.608-.376-.92-1.228-.92-.936 0-1.952.356-2.932 2.08-.344-1=
.52-1.372-2.184-2.808-2.184-2.356 0-4.988 2.492-6.144 5.74-1.548 4.336-4.66=
8 8.524-8.868 8.524-3.812 0-5.824-3.172-5.824-8.184C4.068 8.312 9.38 2.4 13=
.32 2.4c1.884 0 2.784 1.2 2.784 3.04 0 2.228-1.244 3.264-1.244 4.112 0 .26.=
216.516.644.516 1.712 0 3.728-2.012 3.728-4.756S17.004.56 13.064.56C6.552.5=
6 0 7.112 0 15.508c0 6.68 3.296 10.708 8.996 10.708 3.888 0 7.284-3.024 9.1=
16-6.552.208 2.924 1.536 4.452 3.56 4.452 1.8 0 3.256-1.072 4.368-2.956.428=
 1.972 1.564 2.936 3.04 2.936 1.692 0 3.108-1.072 4.456-3.064-.02 1.564.336=
 3.036 1.692 3.036.64 0 1.404-.148 1.54-.708 1.428-5.904 4.956-10.724 6.036=
-10.724.32 0 .408.308.408.672 0 1.604-1.132 4.892-1.132 6.992 0 2.268.964 3=
.768 2.956 3.768 2.208 0 4.452-2.704 5.948-6.656.468 3.692 1.48 6.672 3.064=
 6.672 1.944 0 5.396-4.092 7.488-8.424.82.104 2.052.076 3.236-.76-.504 1.27=
6-.8 2.672-.8 4.068 0 4.02 1.92 5.148 3.572 5.148 1.796 0 3.252-1.072 4.368=
-2.956.368 1.7 1.308 2.932 3.036 2.932 2.704 0 5.052-2.764 5.052-5.032 0-.6=
-.256-.964-.556-.964zM23.32 21.888c-1.092 0-1.52-1.1-1.52-2.74 0-2.848 1.94=
8-7.604 4.008-7.604.9 0 1.24 1.06 1.24 2.356 0 2.892-1.852 7.988-3.728 7.98=
8zm37.404-8.5c-.652-.776-.888-1.832-.888-2.772 0-1.16.424-2.14.932-2.14s.66=
4.5.664 1.196c0 1.164-.416 2.864-.708 3.716zm8.468 8.5c-1.092 0-1.52-1.264-=
1.52-2.74 0-2.748 1.948-7.604 4.024-7.604.9 0 1.22 1.052 1.22 2.356 0 2.892=
-1.82 7.988-3.724 7.988z" fill=3D"#fff"></path>
        </svg>
      </span>
     =20
    </a>
  </div>
  <div id=3D"modal_backdrop" class=3D"modal-backdrop"></div>
  <div id=3D"modal" class=3D"report-form-modal" role=3D"dialog">
    <div class=3D"form-content" id=3D"form_step_terms" style=3D"display: no=
ne;" aria-labelledby=3D"termsTitle" aria-describedby=3D"termsDesc" tabindex=
=3D"0">
      <h2 id=3D"termsTitle" class=3D"form-title">Terms &amp; Support</h2>
      <p id=3D"termsDesc" class=3D"form-body">This website has been created=
 with Canva, but the content is User Content that is subject to our <a clas=
s=3D"a-link" href=3D"https://www.canva.com/policies/terms-of-use/" target=
=3D"_blank">Terms of Use</a>. If you see anything that breaches our <a clas=
s=3D"a-link" href=3D"https://www.canva.com/policies/acceptable-use-policy/"=
 target=3D"_blank">acceptable use policy</a>, please report it to our conte=
nt review team.</p>
      <div class=3D"form-buttons">
        <button id=3D"form_close_initial" type=3D"button" class=3D"tertiary=
-button">
          <span class=3D"button-text">
            Close
          </span>
        </button>
        <button id=3D"form_report" data-report-url=3D"https://www.canva.com=
/help/report-content/?source=3Ddesign&amp;link=3D" type=3D"button" class=3D=
"button">
          <span class=3D"button-text">
            Report
          </span>
        </button>
      </div>
    </div>
    <div class=3D"form-content" id=3D"form_step_report_reason" style=3D"dis=
play: none;" aria-labelledby=3D"reportTitle" aria-describedby=3D"reportDesc=
" tabindex=3D"0">
      <h2 id=3D"reportTitle" class=3D"form-title">Report</h2>
      <p id=3D"reportDesc" class=3D"form-body">Reporting helps Canva ensure=
 its content is appropriate and correctly
labelled.</p>
      <p class=3D"form-body-bold">Why are you reporting this content?</p>
      <label class=3D"form-radio-input" for=3D"report_reason_0">
        <input id=3D"report_reason_0" class=3D"radio-button-input" type=3D"=
radio" name=3D"report_reason" value=3D"0" autocomplete=3D"off" checked=3D""=
>
        <span class=3D"radio-button"></span>
        <span class=3D"form-radio-label">
          Inappropriate content
        </span>
      </label>
      <label class=3D"form-radio-input" for=3D"report_reason_1">
        <input id=3D"report_reason_1" class=3D"radio-button-input" type=3D"=
radio" name=3D"report_reason" value=3D"1" autocomplete=3D"off">
        <span class=3D"radio-button"></span>
        <span class=3D"form-radio-label">
          Hateful speech, activities or discrimination
        </span>
      </label>
      <label class=3D"form-radio-input" for=3D"report_reason_2">
        <input id=3D"report_reason_2" class=3D"radio-button-input" type=3D"=
radio" name=3D"report_reason" value=3D"2" autocomplete=3D"off">
        <span class=3D"radio-button"></span>
        <span class=3D"form-radio-label">
          Illegal content
        </span>
      </label>
      <label class=3D"form-radio-input" for=3D"report_reason_3">
        <input id=3D"report_reason_3" class=3D"radio-button-input" type=3D"=
radio" name=3D"report_reason" value=3D"3" autocomplete=3D"off">
        <span class=3D"radio-button"></span>
        <span class=3D"form-radio-label">
          Defamation or harassment
        </span>
      </label>
      <label class=3D"form-radio-input" for=3D"report_reason_4">
        <input id=3D"report_reason_4" class=3D"radio-button-input" type=3D"=
radio" name=3D"report_reason" value=3D"4" autocomplete=3D"off">
        <span class=3D"radio-button"></span>
        <span class=3D"form-radio-label">
          Intellectual Property infringement
        </span>
      </label>
      <label class=3D"form-radio-input" for=3D"report_reason_5">
        <input id=3D"report_reason_5" class=3D"radio-button-input" type=3D"=
radio" name=3D"report_reason" value=3D"5" autocomplete=3D"off">
        <span class=3D"radio-button"></span>
        <span class=3D"form-radio-label">
          Misinformation
        </span>
      </label>
      <label class=3D"form-radio-input" for=3D"report_reason_6">
        <input id=3D"report_reason_6" class=3D"radio-button-input" type=3D"=
radio" name=3D"report_reason" value=3D"6" autocomplete=3D"off">
        <span class=3D"radio-button"></span>
        <span class=3D"form-radio-label">
          Phishing
        </span>
      </label>
      <label class=3D"form-radio-input" for=3D"report_reason_other">
        <input id=3D"report_reason_other" class=3D"radio-button-input" type=
=3D"radio" name=3D"report_reason" value=3D"7" autocomplete=3D"off">
        <span class=3D"radio-button"></span>
        <span class=3D"form-radio-label">
          Something else
        </span>
      </label>
      <div class=3D"form-buttons">
        <button id=3D"form_cancel" type=3D"button" class=3D"button">
          <span class=3D"button-text">Cancel</span>
        </button>
        <button id=3D"form_submit_reason" type=3D"button" class=3D"submit-b=
utton">
          <span class=3D"button-text">Next</span>
        </button>
      </div>
    </div>
    <div class=3D"form-content" id=3D"form_step_report_ip" style=3D"display=
: none;" aria-labelledby=3D"ipTitle" aria-describedby=3D"ipDesc" tabindex=
=3D"0">
      <h2 id=3D"ipTitle" class=3D"form-title">Intellectual Property infring=
ement</h2>
      <p id=3D"ipDesc" class=3D"form-body">Please submit an infringement no=
tice to Canva by following the steps in our <a class=3D"a-link" href=3D"htt=
ps://www.canva.com/policies/intellectual-property-policy/" target=3D"_blank=
">Intellectual Property Policy</a>.</p>
      <div class=3D"form-buttons">
        <button id=3D"form_go_back_ip" type=3D"button" class=3D"button">
          <span class=3D"button-text">Back</span>
        </button>
        <button id=3D"form_close_ip" type=3D"button" class=3D"submit-button=
">
          <span class=3D"button-text">Close</span>
        </button>
      </div>
    </div>
    <div class=3D"form-content" id=3D"form_step_report_other" style=3D"disp=
lay: none;" aria-labelledby=3D"otherTitle" aria-describedby=3D"otherDesc" t=
abindex=3D"0">
      <h2 id=3D"otherTitle" class=3D"form-title">Something else</h2>
      <p id=3D"otherDesc" class=3D"form-body">Please contact Canva at <a cl=
ass=3D"a-link" href=3D"mailto:privacy@canva.com" target=3D"_blank">privacy@=
canva.com</a> and include the website URL to report other concerns.</p>
      <div class=3D"form-buttons">
        <button id=3D"form_go_back_other" type=3D"button" class=3D"button">
          <span class=3D"button-text">Back</span>
        </button>
        <button id=3D"form_close_other" type=3D"button" class=3D"submit-but=
ton">
          <span class=3D"button-text">Close</span>
        </button>
      </div>
    </div>
    <div class=3D"form-content" id=3D"form_step_success" style=3D"display: =
none;" aria-labelledby=3D"thanksTitle" aria-describedby=3D"thanksDesc" tabi=
ndex=3D"0">
      <h2 id=3D"thanksTitle" class=3D"form-title">Thank you</h2>
      <p id=3D"thanksDesc" class=3D"form-body">Thanks for flagging this con=
tent as inappropriate. Our content review team is on it and will review as =
soon as possible.</p>
      <div class=3D"form-buttons">
        <button id=3D"form_close" type=3D"button" class=3D"submit-button">
          <span class=3D"button-text">
            Close
          </span>
        </button>
      </div>
    </div>
  </div>
</div></div></div></div></div></main></div></div><div class=3D"g6DZMw"><div=
 class=3D"_2UyCZQ"></div></div><div class=3D"_3jkTAA"></div><div class=3D"B=
ghEng"><div></div><div></div></div><div class=3D"_6vHSyg"></div><div class=
=3D"_6vHSyg"></div></body></html>
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-0f08c5db-4789-4c33-b78c-655bd1d79326@mhtml.blink

@charset "utf-8";
=0A
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-6ef5312e-a4d0-4833-85ce-68a64f0115fc@mhtml.blink

@charset "utf-8";
=0A
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-3cdf9572-de10-4aa7-b6a3-d15fbd66205e@mhtml.blink

@charset "utf-8";

:root { --transparent: rgba(255, 255, 255, 0); --white: hsl(0, 0%, 100%); -=
-th-white: hsl(0, 0%, 100%); --black: hsl(0, 0%, 0%); --th-black: hsl(0, 0%=
, 0%); --lightGrey: hsl(0, 0%, 94%); --th-grey-white: hsl(210, 10%, 97%); -=
-th-grey-light: hsl(210, 10%, 94.8%); --th-grey-medium: hsl(212, 10%, 94%);=
 --th-grey: hsl(216, 22%, 91%); --th-grey-dark: hsl(221, 20%, 78%); --th-sl=
ate: hsl(221, 20%, 33%); --th-slate-light: hsl(222, 20%, 45%); --th-slate-d=
ark: hsl(222, 22%, 18%); --th-slate-alt: #333F57; --th-slate-hover: #3E4A62=
; --th-slate-dark-hover800: hsl(220, 22%, 24%); --th-slate-dark-active800: =
hsl(219, 24%, 26%); --th-slate-dark-hover600: hsl(222, 22%, 21%); --th-slat=
e-dark-active600: hsl(221, 24%, 23%); --th-cool-grey-600: hsl(203, 16%, 44%=
); --th-cool-grey-700: hsl(204, 18%, 30%); --th-cool-grey-750: hsl(203, 18%=
, 32%); --th-cool-grey-800: hsl(209, 20%, 25%); --th-cool-grey-850: hsl(209=
, 20%, 21%); --th-cool-grey-900: hsl(210, 24%, 16%); --fontColorDark: var( =
--th-slate-dark); --fontColorWhite: hsl(0, 0%, 100%); --list-item-hover: hs=
l(225, 20%, 96%); --list-item-light-hover: hsl(210, 20%, 98%); --list-item-=
hover-dark: hsla(222, 22%, 18%, 0.50); --list-item-light-hover-dark: hsla(2=
22, 20%, 33%, 0.50); --greyTransparent: hsla(222, 22%, 18%, 0.12); --whiteT=
ransparent: hsla(0, 0%, 100%, 0.12); --defaultColor: hsl(220, 20%, 91%); --=
defaultColorHover: hsl(220, 19%, 78%); --defaultColorActive: hsl(220, 19%, =
68%); --defaultColorSelected: hsl(221, 20%, 75%); --buttonBorderColor: 2px =
solid hsl(220, 20%, 91%); --buttonBorderColorHover: 2px solid hsl(220, 19%,=
 78%); --buttonBorderColorActive: 2px solid hsl(220, 19%, 68%); --buttonBor=
derColorSelected: 2px solid hsl(221, 20%, 75%); --iconFillColor: var( --th-=
slate-dark ); --primaryColor: hsl(211, 100%, 45%); --primaryColorHover: hsl=
(211, 100%, 35%); --primaryColorActive: hsl(211, 100%, 25%); --primaryButto=
nBorder: 2px solid hsl(211, 100%, 45%); --primaryButtonBorderHover: 2px sol=
id hsl(211, 100%, 35%); --primaryButtonBorderActive: 2px solid hsl(211, 100=
%, 25%); --secondaryColor: var(--th-slate); --secondaryColorHover: hsl(221,=
 20%, 23%); --secondaryColorActive: hsl(221, 20%, 13%); --secondaryButtonBo=
rderColor: 2px solid var(--th-slate); --secondaryButtonBorderColorHover: 2p=
x solid hsl(221, 20%, 23%); --secondaryButtonBorderColorActive: 2px solid h=
sl(221, 20%, 13%); --disabledColor: hsl(0, 0%, 50%); --disabledBackgroundCo=
lor: hsl(0, 0%, 95%); --brandColorGreen: hsl(76, 60%, 52%); --brandColorGre=
enActive: hsl(76, 62%, 40%); --primaryColorGreen: hsl(79, 100%, 24%); --pri=
maryColorGreenHover: hsl(79, 100%, 14%); --primaryColorGreenActive: hsl(79,=
 100%, 4%); --buttonBorderGreen: 2px solid hsl(79, 100%, 24%); --buttonBord=
erGreenHover: 2px solid hsl(79, 100%, 14%); --buttonBorderGreenActive: 2px =
solid hsl(79, 100%, 4%); --brandColorPink: hsl(344, 98%, 59%); --primaryCol=
orPink: #e12362; --primaryColorPinkHover: hsl(340, 76%, 41%); --primaryColo=
rPinkActive: hsl(340, 76%, 31%); --buttonBorderPink: 2px solid hsl(340, 76%=
, 51%); --buttonBorderPinkHover: 2px solid hsl(340, 76%, 41%); --buttonBord=
erPinkActive: 2px solid hsl(340, 76%, 31%); --brandColorTeal: hsl(180, 85%,=
 34%); --primaryColorTeal: hsl(184, 50%, 35%); --primaryColorTealHover: hsl=
(184, 50%, 25%); --primaryColorTealActive: hsl(184, 50%, 15%); --buttonBord=
erTeal: 2px solid hsl(184, 50%, 35%); --buttonBorderTealHover: 2px solid hs=
l(184, 50%, 25%); --buttonBorderTealActive: 2px solid hsl(184, 50%, 15%); -=
-brandColorPurple: hsl(264, 100%, 68%); --primaryColorPurple: hsl(264, 83%,=
 62%); --primaryColorPurpleHover: hsl(264, 83%, 52%); --primaryColorPurpleA=
ctive: hsl(264, 83%, 42%); --buttonBorderPurple: 2px solid hsl(264, 83%, 62=
%); --buttonBorderPurpleHover: 2px solid hsl(264, 83%, 52%); --buttonBorder=
PurpleActive: 2px solid hsl(264, 83%, 42%); --brandColorOrange: hsl(33, 94%=
, 48%); --primaryColorOrange: hsl(15, 79%, 45%); --primaryColorOrangeHover:=
 hsl(15, 80%, 35%); --primaryColorOrangeActive: hsl(15, 80%, 25%); --button=
BorderOrange: 2px solid hsl(15, 79%, 45%); --buttonBorderOrangeHover: 2px s=
olid hsl(15, 80%, 35%); --buttonBorderOrangeActive: 2px solid hsl(15, 80%, =
25%); --brandColorBlue: hsl(197, 100%, 50%); --brandColorBlueActive: hsl(19=
7, 100%, 39%); --brandColorBlueWCAG: hsl(197, 100%, 42%); --primaryColorBlu=
e: hsl(201, 100%, 37%); --primaryColorBlueHover: hsl(201, 100%, 27%); --pri=
maryColorBlueActive: hsl(201, 100%, 17%); --buttonBorderBlue: 2px solid hsl=
(201, 100%, 37%); --buttonBorderBlueHover: 2px solid hsl(201, 100%, 27%); -=
-buttonBorderBlueActive: 2px solid hsl(201, 100%, 17%); --BrandcolorYellow:=
 hsl(41, 90%, 61%); --primaryColorReachDeck: hsl(209, 100%, 39%); --primary=
ColorReachDeckHover: hsl(209, 100%, 29%); --primaryColorReachDeckActive: hs=
l(209, 100%, 19%); --buttonBorderReachDeck: 2px solid hsl(209, 100%, 39%); =
--buttonBorderReachDeckHover: 2px solid hsl(209, 100%, 29%); --buttonBorder=
ReachDeckActive: 2px solid hsl(209, 100%, 19%); --reachDeckEditorColor: hsl=
(112, 100%, 26%); --launchpadButtonLight: hsl(210, 10%, 96%); --launchpadBu=
ttonLightHover: hsl(220, 8%, 92%); --launchpadButtonLightActive: hsl(0, 0%,=
 90%); --ContrastPinkOrbitNoteHover: hsl(343, 81%, 48%); --ContrastPinkOrbi=
tNoteActive: hsl(345, 96%, 42%); --ContrastButtonBorderPink: hsl(345, 96%, =
42%); --primaryColorClaroNavy: hsl(207, 74%, 27%); --primaryColorClaroNavyH=
over: hsl(206, 83%, 21%); --primaryColorClaroNavyActive: hsl(206, 89%, 17%)=
; --buttonBorderClaro: 2px solid hsl(207, 74%, 27%); --buttonBorderClaroHov=
er: 2px solid hsl(206, 83%, 21%); --buttonBorderClaroActive: 2px solid hsl(=
206, 89%, 17%); --primaryColorClaroBlue: hsl(201, 100%, 37%); --primaryColo=
rClaroBlueHover: hsl(201, 100%, 31%); --primaryColorClaroBlueActive: hsl(20=
1, 100%, 27%); --claroDark: hsl(218, 54%, 20%); --claroGrey: hsl(217, 31%, =
68%); --claroBlue: hsl(191, 88%, 40%); --claroBlueAlt: hsl(188, 78%, 50%); =
--claroGreen: hsl(75, 63%, 51%); --altColor: var(--claroGreen); --altColorH=
over: hsl(75, 70%, 40%); --altColorActive: hsl(75, 77%, 33%); --altButtonBo=
rderColor: 2px solid var(--claroGreen); --altButtonBorderColorHover: 2px so=
lid hsl(75, 70%, 40%); --altButtonBorderColorActive: 2px solid hsl(75, 77%,=
 33%); --brandColorLingdys: hsl(0, 82%, 49%); --primaryColorLingdys: hsl(21=
7, 34%, 38%); --primaryColorLingdysHover: hsl(217, 37%, 24%); --primaryColo=
rLingdysActive: hsl(217, 39%, 18%); --buttonBorderLingdys: 2px solid hsl(21=
7, 34%, 38%); --buttonBorderLingdysHover: 2px solid hsl(217, 37%, 24%); --b=
uttonBorderLingdysActive: 2px solid hsl(217, 39%, 18%); --brandColorAppWrit=
er: #F70790; --primaryColorAppWriter: #D8087F; --primaryColorAppWriterHover=
: #B40669; --primaryColorAppWriterActive: #9F055C; --buttonBorderAppwriter:=
 2px solid #D8087F; --buttonBorderAppwriterHover: 2px solid #B40669; --butt=
onBorderAppWriterActive: 2px solid #9F055C; --iconToggleFillOrbitNote: hsl(=
196, 99%, 50%); --textColor: var( --th-slate-dark ); --textColorLight: var(=
 --th-white ); --border: 1px solid var( --th-grey ); --borderDark: 1px soli=
d var( --th-grey-dark ); --infoColor: hsl(194, 77%, 24%); --successColor: h=
sla(134, 71%, 43%, 0.584); --errorColor: hsl(0, 71%, 51%); --warningColor: =
hsl(45, 97%, 51%); --infoBackgroundColor: hsl(180, 100%, 99%); --successBac=
kgroundColor: hsl(78, 100%, 98%); --errorBackgroundColor: hsl(0, 100%, 98%)=
; --warningBackgroundColor: hsl(35, 100%, 98%); --notificationDarkModeBackg=
round: hsl(218, 22%, 37%); --infoBorderColor: hsl(191, 44%, 82%); --success=
BorderColor: hsl(100, 28%, 69%); --errorBorderColor: hsl(0, 37%, 73%); --wa=
rningBorderColor: hsl(41, 30%, 71%); --notificationDarkModeBorder: hsl(217,=
 19%, 41%); --infoTitleColor: hsl(194, 77%, 24%); --successTitleColor: hsl(=
121, 48%, 23%); --errorTitleColor: hsl(1, 47%, 40%); --warningTitleColor: h=
sl(37, 92%, 25%); --infoWarningColor: hsl(194, 77%, 24%); --successWarningC=
olor: hsla(121, 48%, 23%, 0.8); --errorWarningColor: hsla(1, 47%, 40%, 0.8)=
; --warningWarningColor: hsla(37, 92%, 25%, 0.8); --buttonBorderRadius: 30p=
x; --buttonRoundness: 30px; --buttonNoBackgroundTextColor: var( --th-slate-=
dark); --buttonNoBackgroundIconColor: var( --th-slate-dark); --buttonNoBack=
groundColor: transparent; --buttonNoBackgroundColorHover: var(--icon-button=
-background-hover-color); --buttonNoBackgroundColorActive: var(--icon-butto=
n-background-active-color); --buttonNoBackgroundBorder: 2px solid transpare=
nt; --buttonNoBackgroundBorderHover: 2px solid transparent; --buttonNoBackg=
roundBorderActive: 2px solid transparent; --activeDotColor: inherit; --them=
eColorDefault: var(--defaultColor); --themeColorGroundworks: var(--primaryC=
olor); --themeColorReadWrite: var(--primaryColorPurple); --themeColorEquati=
o: var(--primaryColorBlue); --themeColorBrowsealoud: var(--primaryColorOran=
ge); --themeColorWriq: var(--primaryColorTeal); --themeColorFluencyTutor: v=
ar(--primaryColorGreen); --themeColorSnapVerter: var(--primaryColorGreen); =
--themeColorSpeechStream: var(--primaryColorPink); --themeColorTexthelp: va=
r(--primaryColorTeal); --themeColorReachDeck: var(--primaryColorReachDeck);=
 --themeColorPdfReader: var(--primaryColorBlue); --uniloginBackgroundColor:=
 #F7F7F7; --uniloginWindowBackgroundColor: var(--primaryColorBlue); --line-=
height-base: 1.5; --zindex-modal: 1050; --modal-dialog-margin: 2em; --modal=
-content-border-radius: 1px; --modal-inner-padding: 1.5em; --modal-title-pa=
dding: 1.5em; --modal-title-line-height: var(--line-height-base); --modal-c=
ontent-bg: #fff; --modal-content-border-color: rgba(0, 0, 0, .2); --modal-c=
ontent-fallback-border-color: #999; --modal-backdrop-bg: #000; --modal-back=
drop-opacity: .5; --modal-header-border-color: #e5e5e5; --modal-footer-bord=
er-color: var(--modal-header-border-color); --modal-header-background-color=
: #f5f5f5; --select-border: 1px solid #DADADA; --select-background: hsl(0, =
0%, 100%); --select-background-color: #efefef; --select-background-color-ho=
ver: hsl(0, 0%, 97%); --input-border: 1px solid #DADADA; --input-background=
-color: #ffffff; --settings-title-color: var(--primaryColor); --settings-it=
em-background-color: var(--th-white); --settings-item-background-hover-colo=
r: var(--th-grey-medium); --settings-item-background-active-color: var(--th=
-grey); --list-group-background-color: transparent; --list-group-item-backg=
round-color: var(--th-white); --list-group-item-background-hover-color: var=
(--th-grey-light); --list-group-item-background-active-color: var(--th-grey=
); --list-group-item-icon-color: var(--th-slate-dark); --ListGroupSearchIte=
mColor: var(--th-white); --ListGroupSearchItemColorHover: #f9fafb; --ListGr=
oupSearchItemTextColor: var(--th-slate); --ListGroupSearchItemBorderColor: =
hsla(0, 0%, 0%, 0.15); --ListGroupSearchItemAsideColor: hsl(0, 0%, 95%); --=
ListGroupSearchItemAsideTextColor: #000; --toolbar-button-disabled: hsl(0, =
0%, 96.1%); --toolbar-button-background: hsl(0, 0%, 96.1%); --toolbar-butto=
n-hover-background: hsl(0, 0%, 80%); --toolbar-button-color: hsl(0, 0%, 0%)=
; --toolbar-button-hover-active-background: hsl(0, 0%, 70.2%); --toolbar-bu=
tton-default-size: 43px; --toolbar-button-focus-color: hsl(213, 71.3%, 60.4=
%); --toolbar-button-svg-color: hsl(0, 0%, 29%); --toolbar-button-toggle-co=
lor: hsl(264, 100%, 68%); --panel-inner-padding: .7em; --icon-button-backgr=
ound-default-color: hsla(0, 0%, 0%, 0.077); --icon-button-background-hover-=
color: hsla(0, 0%, 0%, 0.125); --icon-button-background-active-color: hsla(=
0, 0%, 0%, 0.187); --icon-button-background-default-color-dark: rgba(255, 2=
55, 255, 0.077); --icon-button-background-hover-color-dark: rgba(255, 255, =
255, 0.146); --icon-button-background-active-color-dark: rgba(255, 255, 255=
, 0.221); --icon-button-border-color: solid 2px transparent; --menuIconFill=
Color: var(--th-slate); --cardIconFillColor: var(--th-slate); --default-men=
u-notify-background-colour: hsl(264, 100%, 68%); --toolbarButtonBackgroundC=
olor: var( --defaultColor); --toolbarButtonBackgroundHoverColor: var( --ico=
n-button-background-hover-color); --toolbarButtonBackgroundActiveColor: var=
( --icon-button-background-active-color); --toolbarIconHoverFill: var( --th=
-slate); --toolbarIconToggleFill: var( --primaryColor); --dashboardContentB=
ackgroundColor: #fff; --dashboardHeaderBackgroundColor: #fff; --dashboardSi=
debarBorderTopColor: var( --lightGrey); --dashboardTextColor: var(--th-slat=
e); --dashboardTitleTextColor: var(--fontColorDark); --dashboardSubTitleTex=
tColor: var(--th-slate-light); --dashboardCardBackgroundColor: var(--white)=
; --dashboardCardBackgroundHoverColor: var(--th-grey-light); --dashboardCar=
dBackgroundActiveColor: var(--lightGrey); --dashboardCardHighlightColor: va=
r(--primaryColor); --dashboardCardBorderColor: var(--lightGrey); --dashboar=
dCardFooterLinkColor: var(--primaryColor); --dashboardCardAuditorColor: hsl=
(208, 100%, 43%); --dashboardCardAuditorLabelColor: hsl(208, 100%, 43%); --=
dashboardCardEditorLabelColor: var(--reachDeckEditorColor); --dashboardCard=
ToolbarColor: var(--primaryColorOrange); --dashboardCardToolbarLabelColor: =
var(--primaryColorOrange); --dashboardPaneBackgroundColor: #fcfcfc; --dashb=
oardPaneBorderColor: rgba(92, 106, 138, 0.4); --dashboardPaneDashedBorderCo=
lor: var(--dashboardDashedBorderLight); --dashboardDashedBorderLight: url("=
data:image/svg+xml,%3csvg width=3D'100%25' height=3D'100%25' xmlns=3D'http:=
//www.w3.org/2000/svg'%3e%3crect width=3D'100%25' height=3D'100%25' fill=3D=
'none' stroke=3D'%235C6A8ACC' stroke-width=3D'2' stroke-dasharray=3D'4%2c 8=
' stroke-dashoffset=3D'0' stroke-linecap=3D'square'/%3e%3c/svg%3e"); --dash=
boardDashedBorderDark: url("data:image/svg+xml,%3csvg width=3D'100%25' heig=
ht=3D'100%25' xmlns=3D'http://www.w3.org/2000/svg'%3e%3crect width=3D'100%2=
5' height=3D'100%25' fill=3D'none' stroke=3D'%23323E52FF' stroke-width=3D'2=
' stroke-dasharray=3D'4%2c 8' stroke-dashoffset=3D'0' stroke-linecap=3D'squ=
are'/%3e%3c/svg%3e"); --icon-opacity: 1; --accordionBackgroundColor: #fff; =
--accordionTextColor: #484848; --accordionTextBottomColor: #484848; --accor=
dionIconColor: var(--toolbarWhite); --accordionBackgroundColorHover: #f9faf=
b; --tableBackgroundColor: none; --tableBackgroundHeaderColor: #F9FAFB; --t=
ableBackgroundAltColor: #f7f7f7; --tableBackgroundHoverColor: hsl(210, 20%,=
 98%); --tableBorderColor: #E2E2E3; --tableTextColor: #484848; --buttonLink=
TextColor: var( --primaryColor) !important; --buttonLinkIconColor: var( --p=
rimaryColor) !important; }

.th-wq, .th-th { --toolbarBackgroundColor: var(--defaultColor); --themeColo=
rDefault: var(--defaultColor); --themeColorPrimary: var(--themeColorWriq); =
--themeColorSecondary: var(--secondaryColor); --dashboardTopColor: var(--br=
andColorTeal); --dashboardTitleColor: var(--themeColorWriq); --iconFillColo=
r: var(--white); --buttonBackgroundColor: var(--defaultColor); --buttonBack=
groundHoverColor: var(--defaultColorHover); --buttonBackgroundActiveColor: =
var(--defaultColorActive); --buttonTextColor: var(--fontColorDark); --butto=
nTextHoverColor: var(--fontColorDark); --buttonTextActiveColor: var(--fontC=
olorDark); --buttonTextVisitedColor: var(--fontColorDark); --buttonBorder: =
var(--buttonBorder); --buttonBorderHover: var(--buttonBorderColorHover); --=
buttonBorderRadius: var(--buttonRoundness); --buttonIconFillColor: var(--bl=
ack); --primaryButtonBackgroundColor: var(--primaryColorTeal); --primaryBut=
tonBackgroundHoverColor: var(--primaryColorTealHover); --primaryButtonBackg=
roundActiveColor: var(--primaryColorTealActive); --primaryButtonBorderActiv=
e: var(--buttonBorderTealActive); --primaryButtonTextColor: var(--fontColor=
White); --primaryButtonTextHoverColor: var(--fontColorWhite); --primaryButt=
onTextActiveColor: var(--fontColorWhite); --primaryButtonTextVisitedColor: =
var(--fontColorWhite); --primaryButtonBorder: var(--buttonBorderTeal); --pr=
imaryButtonBorderHover: var(--buttonBorderTealHover); --primaryButtonBorder=
Radius: var(--buttonRoundness); --primaryButtonIconFillColor: var(--white);=
 --secondaryButtonBackgroundColor: var(--secondaryColor); --secondaryButton=
BackgroundHoverColor: var(--secondaryColorHover); --secondaryButtonBackgrou=
ndActiveColor: var(--secondaryColorActive); --secondaryButtonTextColor: var=
(--fontColorWhite); --secondaryButtonTextHoverColor: var(--fontColorWhite);=
 --secondaryButtonTextActiveColor: var(--fontColorWhite); --secondaryButton=
TextVisitedColor: var(--fontColorWhite); --secondaryButtonBorder: var(--sec=
ondaryButtonBorder); --secondaryButtonBorderHover: var(--secondaryButtonBor=
derColorHover); --secondaryButtonBorderRadius: var(--buttonRoundness); --se=
condaryButtonIconFillColor: var(--white); --table-hover-item: var(--list-it=
em-light-hover); --settingsTitleColor: var(--themeColorPrimary); }

.th-rw, .th-wa { --themeColorDefault: var(--defaultColor); --themeColorPrim=
ary: var(--themeColorReadWrite); --themeColorSecondary: var(--secondaryColo=
r); --toolbarBackgroundColor: var(--defaultColor); --toolbarIconFill: var(-=
-th-slate); --toolbarIconHoverFill: var(--th-slate); --toolbarIconActiveFil=
l: var(--th-slate); --toolbarIconToggledHoverFill: var(--primaryColorPurple=
); --toolbarIconToggleFill: var(--primaryColorPurple); --toolbarIconToggleH=
overFill: var(--primaryColorPurple); --dashboardTopColor: var(--brandColorP=
urple); --dashboardTitleColor: var(--themeColorReadWrite); --iconFillColor:=
 var(--th-slate-dark); --buttonBackgroundColor: var(--defaultColor); --butt=
onBackgroundHoverColor: var(--defaultColorHover); --buttonBackgroundActiveC=
olor: var(--defaultColorActive); --buttonTextColor: var(--fontColorDark); -=
-buttonTextHoverColor: var(--fontColorDark); --buttonTextActiveColor: var(-=
-fontColorDark); --buttonTextVisitedColor: var(--fontColorDark); --buttonBo=
rder: var(--buttonBorder); --buttonBorderHover: var(--buttonBorderColorHove=
r); --buttonBorderActive: var(--buttonBorderColorActive); --buttonBorderRad=
ius: var(--buttonRoundness); --buttonIconFillColor: var(--black); --primary=
ButtonBackgroundColor: var(--primaryColorPurple); --primaryButtonBackground=
HoverColor: var(--primaryColorPurpleHover); --primaryButtonBackgroundActive=
Color: var(--primaryColorPurpleActive); --primaryButtonBorderActive: var(--=
buttonBorderPurpleActive); --primaryButtonTextColor: var(--fontColorWhite);=
 --primaryButtonTextHoverColor: var(--fontColorWhite); --primaryButtonTextA=
ctiveColor: var(--fontColorWhite); --primaryButtonTextVisitedColor: var(--f=
ontColorWhite); --primaryButtonBorder: var(--buttonBorderPurple); --primary=
ButtonBorderHover: var(--buttonBorderPurpleHover); --primaryButtonBorderRad=
ius: var(--buttonRoundness); --primaryButtonIconFillColor: var(--white); --=
secondaryButtonBackgroundColor: var(--secondaryColor); --secondaryButtonBac=
kgroundHoverColor: var(--secondaryColorHover); --secondaryButtonBackgroundA=
ctiveColor: var(--secondaryColorActive); --secondaryButtonTextColor: var(--=
fontColorWhite); --secondaryButtonTextHoverColor: var(--fontColorWhite); --=
secondaryButtonTextActiveColor: var(--fontColorWhite); --secondaryButtonTex=
tVisitedColor: var(--fontColorWhite); --secondaryButtonBorder: var(--second=
aryButtonBorder); --secondaryButtonBorderHover: var(--secondaryButtonBorder=
ColorHover); --secondaryButtonBorderRadius: var(--buttonRoundness); --secon=
daryButtonIconFillColor: var(--white); --table-hover-item: var(--list-item-=
light-hover); --settingsTitleColor: var(--themeColorPrimary); --menuNotifyB=
ackgroundColour: var(--brandColorPurple); --uniloginBackgroundColor: #FAF7F=
F; --uniloginWindowBackgroundColor: var(--primaryColorPurple); }

.th-pr { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--themeColorPdfReader); --themeColorSecondary: var(--secondaryColor); --pr=
imaryButtonBackgroundColor: var(--primaryColorBlue); --primaryButtonBackgro=
undHoverColor: var(--primaryColorBlueHover); --primaryButtonBackgroundActiv=
eColor: var(--primaryColorBlueActive); --primaryButtonBorderActive: var(--b=
uttonBorderBlueActive); --primaryButtonTextColor: var(--fontColorWhite); --=
primaryButtonTextHoverColor: var(--fontColorWhite); --primaryButtonTextActi=
veColor: var(--fontColorWhite); --primaryButtonTextVisitedColor: var(--font=
ColorWhite); --primaryButtonBorder: var(--buttonBorderBlue); --primaryButto=
nBorderHover: var(--buttonBorderBlueHover); --primaryButtonBorderRadius: va=
r(--buttonRoundness); --primaryButtonIconFillColor: var(--white); --toolbar=
BackgroundColor: var(--th-grey); --toolbarButtonBackgroundColor: var(--th-g=
rey); --toolbarButtonBackgroundHoverColor: var(--ContrastPinkOrbitNoteHover=
); --toolbarButtonBackgroundActiveColor: var(--ContrastPinkOrbitNoteActive)=
; --toolbarButtonBorderActive: var(--ContrastButtonBorderPink); --toolbarIc=
onFill: var(--th-slate); --toolbarIconHoverFill: var(--white); --toolbarIco=
nActiveFill: var(--white); --toolbarIconToggleFill: var(--ContrastPinkOrbit=
NoteActive); --toolbarIconToggleHoverFill: var(--white); --toolbarIconToggl=
edHoverFill: var(--white); --iconButtonBackgroundDefaultColor: var(--icon-b=
utton-background-default-color); --iconButtonBackgroundHoverColor: var(--ic=
on-button-background-hover-color); --iconButtonBackgroundActiveColor: var(-=
-icon-button-background-active-color); --iconButtonBorderColor: 2px solid t=
ransparent; --iconFillColor: var(--th-slate); --panelBackgroundColor: var(-=
-th-grey-light); --panelBackgroundColorLight: var(--white); --panelBackgrou=
ndColorDark: var(--th-grey); --fontColor: var(--th-slate-dark); --borderCol=
or: 1px solid var(--th-grey-dark); --settingsTitleColor: var(--themeColorPr=
imary); --menuNotifyBackgroundColour: var(--brandColorPink); --dashboardTop=
Color: var(--primaryColorBlue); --dashboardTitleColor: var(--themeColorEqua=
tio); --cardIconFillColor: var(--primaryColorBlue); }

.th-eq { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--themeColorEquatio); --themeColorSecondary: var(--secondaryColor); --dash=
boardTopColor: var(--brandColorBlue); --dashboardTitleColor: var(--themeCol=
orEquatio); --iconFillColor: var(--th-slate-dark); --buttonBackgroundColor:=
 var(--defaultColor); --buttonBackgroundHoverColor: var(--defaultColorHover=
); --buttonBackgroundActiveColor: var(--defaultColorActive); --buttonTextCo=
lor: var(--fontColorDark); --buttonTextHoverColor: var(--fontColorDark); --=
buttonTextActiveColor: var(--fontColorDark); --buttonTextVisitedColor: var(=
--fontColorDark); --buttonBorder: var(--buttonBorder); --buttonBorderHover:=
 var(--buttonBorderColorHover); --buttonBorderRadius: var(--buttonRoundness=
); --buttonIconFillColor: var(--black); --primaryButtonBackgroundColor: var=
(--primaryColorBlue); --primaryButtonBackgroundHoverColor: var(--primaryCol=
orBlueHover); --primaryButtonBackgroundActiveColor: var(--primaryColorBlueA=
ctive); --primaryButtonBorderActive: var(--buttonBorderBlueActive); --prima=
ryButtonTextColor: var(--fontColorWhite); --primaryButtonTextHoverColor: va=
r(--fontColorWhite); --primaryButtonTextActiveColor: var(--fontColorWhite);=
 --primaryButtonTextVisitedColor: var(--fontColorWhite); --primaryButtonBor=
der: var(--buttonBorderBlue); --primaryButtonBorderHover: var(--buttonBorde=
rBlueHover); --primaryButtonBorderRadius: var(--buttonRoundness); --primary=
ButtonIconFillColor: var(--white); --secondaryButtonBackgroundColor: var(--=
secondaryColor); --secondaryButtonBackgroundHoverColor: var(--secondaryColo=
rHover); --secondaryButtonBackgroundActiveColor: var(--secondaryColorActive=
); --secondaryButtonTextColor: var(--fontColorWhite); --secondaryButtonText=
HoverColor: var(--fontColorWhite); --secondaryButtonTextActiveColor: var(--=
fontColorWhite); --secondaryButtonTextVisitedColor: var(--fontColorWhite); =
--secondaryButtonBorder: var(--secondaryButtonBorder); --secondaryButtonBor=
derHover: var(--secondaryButtonBorderColorHover); --secondaryButtonBorderRa=
dius: var(--buttonRoundness); --secondaryButtonIconFillColor: var(--white);=
 --table-hover-item: var(--list-item-light-hover); --settingsTitleColor: va=
r(--themeColorPrimary); --uniloginBackgroundColor: #F2F9FF; --uniloginWindo=
wBackgroundColor: var(--brandColorBlueWCAG); }

.th-ba { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--themeColorBrowsealoud); --themeColorSecondary: var(--secondaryColor); --=
toolbarBackgroundColor: var(--th-grey); --toolbarIconButtonFillColor: var(-=
-th-slate); --toolbarButtonBackgroundColor: var(--th-grey); --toolbarButton=
BackgroundHoverColor: var(--primaryColorOrangeHover); --toolbarButtonBackgr=
oundActiveColor: var(--primaryColorOrangeActive); --toolbarButtonBorderActi=
ve: var(--buttonBorderOrange); --toolbarIconFill: var(--th-slate); --toolba=
rIconHoverFill: var(--th-slate); --toolbarIconActiveFill: var(--primaryColo=
rBlue); --toolbarIconToggleFill: var(--primaryColorBlue); --toolbarIconTogg=
leHoverFill: var(--white); --dashboardTopColor: var(--brandColorOrange); --=
dashboardTitleColor: var(--themeColorBrowsealoud); --iconFillColor: var(--w=
hite); --buttonBackgroundColor: var(--defaultColor); --buttonBackgroundHove=
rColor: var(--defaultColorHover); --buttonBackgroundActiveColor: var(--defa=
ultColorActive); --buttonTextColor: var(--fontColorDark); --buttonTextHover=
Color: var(--fontColorDark); --buttonTextActiveColor: var(--fontColorDark);=
 --buttonTextVisitedColor: var(--fontColorDark); --buttonBorder: var(--butt=
onBorder); --buttonBorderHover: var(--buttonBorderColorHover); --buttonBord=
erRadius: var(--buttonRoundness); --buttonBorderIconFillColor: var(--black)=
; --primaryButtonBackgroundColor: var(--primaryColorOrange); --primaryButto=
nBackgroundHoverColor: var(--primaryColorOrangeHover); --primaryButtonBackg=
roundActiveColor: var(--primaryColorOrangeActive); --primaryButtonBorderAct=
ive: var(--buttonBorderOrangeActive); --primaryButtonTextColor: var(--fontC=
olorWhite); --primaryButtonTextHoverColor: var(--fontColorWhite); --primary=
ButtonTextActiveColor: var(--fontColorWhite); --primaryButtonTextVisitedCol=
or: var(--fontColorWhite); --primaryButtonBorder: var(--buttonBorderOrange)=
; --primaryButtonBorderHover: var(--buttonBorderOrangeHover); --primaryButt=
onBorderRadius: var(--buttonRoundness); --primaryButtonIconFillColor: var(-=
-white); --secondaryButtonBackgroundColor: var(--secondaryColor); --seconda=
ryButtonBackgroundHoverColor: var(--secondaryColorHover); --secondaryButton=
BackgroundActiveColor: var(--secondaryColorActive); --secondaryButtonTextCo=
lor: var(--fontColorWhite); --secondaryButtonTextHoverColor: var(--fontColo=
rWhite); --secondaryButtonTextActiveColor: var(--fontColorWhite); --seconda=
ryButtonTextVisitedColor: var(--fontColorWhite); --secondaryButtonBorder: v=
ar(--secondaryButtonBorder); --secondaryButtonBorderHover: var(--secondaryB=
uttonBorderColorHover); --secondaryButtonBorderRadius: var(--buttonRoundnes=
s); --secondaryButtonIconFillColor: var(--white); --table-hover-item: var(-=
-list-item-light-hover); --settingsTitleColor: var(--themeColorPrimary); --=
menuNotifyBackgroundColour: var(--white); }

.th-ba .gw-menu-notification--inline { --menuNotifyBackgroundColour: var(--=
themeColorBrowsealoud); }

.th-at { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--themeColorReachDeck); --themeColorSecondary: var(--secondaryColor); --to=
olbarBackgroundColor: var(--defaultColor); --toolbarIconFill: var(--th-slat=
e); --toolbarIconHoverFill: var(--th-slate); --toolbarIconActiveFill: var(-=
-th-slate); --toolbarIconToggledHoverFill: var(--primaryColorBlue); --toolb=
arIconToggleFill: var(--primaryColorBlue); --toolbarIconToggleHoverFill: va=
r(--primaryColorBlue); --dashboardTitleColor: var(--th-slate-dark); --iconF=
illColor: var(--th-slate-dark); --buttonBackgroundColor: var(--defaultColor=
); --buttonBackgroundHoverColor: var(--defaultColorHover); --buttonBackgrou=
ndActiveColor: var(--defaultColorActive); --buttonTextColor: var(--fontColo=
rDark); --buttonTextHoverColor: var(--fontColorDark); --buttonTextActiveCol=
or: var(--fontColorDark); --buttonTextVisitedColor: var(--fontColorDark); -=
-buttonBorder: var(--buttonBorder); --buttonBorderHover: var(--buttonBorder=
ColorHover); --buttonBorderRadius: var(--buttonRoundness); --buttonBorderIc=
onFillColor: var(--black); --primaryButtonBackgroundColor: var(--primaryCol=
orReachDeck); --primaryButtonBackgroundHoverColor: var(--primaryColorReachD=
eckHover); --primaryButtonBackgroundActiveColor: var(--primaryColorReachDec=
kActive); --primaryButtonBorderActive: var(--buttonBorderReachDeckActive); =
--primaryButtonTextColor: var(--fontColorWhite); --primaryButtonTextHoverCo=
lor: var(--fontColorWhite); --primaryButtonTextActiveColor: var(--fontColor=
White); --primaryButtonTextVisitedColor: var(--fontColorWhite); --primaryBu=
ttonBorder: var(--buttonBorderReachDeck); --primaryButtonBorderHover: var(-=
-buttonBorderReachDeckHover); --primaryButtonBorderRadius: var(--buttonRoun=
dness); --primaryButtonIconFillColor: var(--white); --secondaryButtonBackgr=
oundColor: var(--secondaryColor); --secondaryButtonBackgroundHoverColor: va=
r(--secondaryColorHover); --secondaryButtonBackgroundActiveColor: var(--sec=
ondaryColorActive); --secondaryButtonTextColor: var(--fontColorWhite); --se=
condaryButtonTextHoverColor: var(--fontColorWhite); --secondaryButtonTextAc=
tiveColor: var(--fontColorWhite); --secondaryButtonTextVisitedColor: var(--=
fontColorWhite); --secondaryButtonBorder: var(--secondaryButtonBorder); --s=
econdaryButtonBorderHover: var(--secondaryButtonBorderColorHover); --second=
aryButtonBorderRadius: var(--buttonRoundness); --secondaryButtonIconFillCol=
or: var(--white); --dashboardTopColor: #E12362; --dashboardContentBackgroun=
dColor: #F2F5F9; --tableBackgroundHeaderColor: #DFE1E5; --table-hover-item:=
 var(--list-item-light-hover); --settingsTitleColor: var(--themeColorPrimar=
y); }

.th-rd { font-size: 10px; --themeColorDefault: var(--defaultColor); --theme=
ColorPrimary: var(--themeColorReachDeck); --themeColorSecondary: var(--seco=
ndaryColor); --toolbarBackgroundColor: var(--defaultColor); --toolbarIconFi=
ll: var(--th-slate); --toolbarIconHoverFill: var(--th-slate); --toolbarIcon=
ActiveFill: var(--th-slate); --toolbarIconToggledHoverFill: var(--primaryCo=
lorBlue); --toolbarIconToggleFill: var(--primaryColorBlue); --toolbarIconTo=
ggleHoverFill: var(--primaryColorBlue); --dashboardTopColor: var(--th-grey)=
; --dashboardTitleColor: var(--th-slate-dark); --iconFillColor: var(--th-sl=
ate-dark); --buttonBackgroundColor: var(--defaultColor); --buttonBackground=
HoverColor: var(--defaultColorHover); --buttonBackgroundActiveColor: var(--=
defaultColorActive); --buttonTextColor: var(--fontColorDark); --buttonTextH=
overColor: var(--fontColorDark); --buttonTextActiveColor: var(--fontColorDa=
rk); --buttonTextVisitedColor: var(--fontColorDark); --buttonBorder: var(--=
buttonBorder); --buttonBorderHover: var(--buttonBorderColorHover); --button=
BorderRadius: var(--buttonRoundness); --buttonBorderIconFillColor: var(--bl=
ack); --primaryButtonBackgroundColor: var(--primaryColorReachDeck); --prima=
ryButtonBackgroundHoverColor: var(--primaryColorReachDeckHover); --primaryB=
uttonBackgroundActiveColor: var(--primaryColorReachDeckActive); --primaryBu=
ttonBorderActive: var(--buttonBorderReachDeckActive); --primaryButtonTextCo=
lor: var(--fontColorWhite); --primaryButtonTextHoverColor: var(--fontColorW=
hite); --primaryButtonTextActiveColor: var(--fontColorWhite); --primaryButt=
onTextVisitedColor: var(--fontColorWhite); --primaryButtonBorder: var(--but=
tonBorderReachDeck); --primaryButtonBorderHover: var(--buttonBorderReachDec=
kHover); --primaryButtonBorderRadius: var(--buttonRoundness); --primaryButt=
onIconFillColor: var(--white); --secondaryButtonBackgroundColor: var(--seco=
ndaryColor); --secondaryButtonBackgroundHoverColor: var(--secondaryColorHov=
er); --secondaryButtonBackgroundActiveColor: var(--secondaryColorActive); -=
-secondaryButtonTextColor: var(--fontColorWhite); --secondaryButtonTextHove=
rColor: var(--fontColorWhite); --secondaryButtonTextActiveColor: var(--font=
ColorWhite); --secondaryButtonTextVisitedColor: var(--fontColorWhite); --se=
condaryButtonBorder: var(--secondaryButtonBorder); --secondaryButtonBorderH=
over: var(--secondaryButtonBorderColorHover); --secondaryButtonBorderRadius=
: var(--buttonRoundness); --secondaryButtonIconFillColor: var(--white); --t=
able-hover-item: var(--list-item-light-hover); --settingsTitleColor: var(--=
themeColorPrimary); }

.th-ss { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--themeColorSpeechStream); --themeColorSecondary: var(--secondaryColor); -=
-dashboardTopColor: var(--brandColorPink); --dashboardTitleColor: var(--the=
meColorSpeechStream); --iconFillColor: var(--th-slate-dark); --buttonBackgr=
oundColor: var(--defaultColor); --buttonBackgroundHoverColor: var(--default=
ColorHover); --buttonBackgroundActiveColor: var(--defaultColorActive); --bu=
ttonTextColor: var(--fontColorDark); --buttonTextHoverColor: var(--fontColo=
rDark); --buttonTextActiveColor: var(--fontColorDark); --buttonTextVisitedC=
olor: var(--fontColorDark); --buttonBorder: var(--buttonBorder); --buttonBo=
rderHover: var(--buttonBorderColorHover); --buttonBorderRadius: var(--butto=
nRoundness); --buttonBorderIconFillColor: var(--black); --primaryButtonBack=
groundColor: var(--themeColorSpeechStream); --primaryButtonBackgroundHoverC=
olor: var(--primaryColorPinkHover); --primaryButtonBackgroundActiveColor: v=
ar(--primaryColorPinkActive); --primaryButtonBorderActive: var(--buttonBord=
erPinkActive); --primaryButtonTextColor: var(--fontColorWhite); --primaryBu=
ttonTextHoverColor: var(--fontColorWhite); --primaryButtonTextActiveColor: =
var(--fontColorWhite); --primaryButtonTextVisitedColor: var(--fontColorWhit=
e); --primaryButtonBorder: var(--buttonBorderPink); --primaryButtonBorderHo=
ver: var(--buttonBorderPinkHover); --primaryButtonBorderRadius: var(--butto=
nRoundness); --primaryButtonIconFillColor: var(--white); --secondaryButtonB=
ackgroundColor: var(--secondaryColor); --secondaryButtonBackgroundHoverColo=
r: var(--secondaryColorHover); --secondaryButtonBackgroundActiveColor: var(=
--secondaryColorActive); --secondaryButtonTextColor: var(--fontColorWhite);=
 --secondaryButtonTextHoverColor: var(--fontColorWhite); --secondaryButtonT=
extActiveColor: var(--fontColorWhite); --secondaryButtonTextVisitedColor: v=
ar(--fontColorWhite); --secondaryButtonBorder: var(--secondaryButtonBorder)=
; --secondaryButtonBorderHover: var(--secondaryButtonBorderColorHover); --s=
econdaryButtonBorderRadius: var(--buttonRoundness); --secondaryButtonIconFi=
llColor: var(--white); --table-hover-item: var(--list-item-light-hover); --=
settingsTitleColor: var(--themeColorPrimary); }

.th-st { --uniloginBackgroundColor: #F2F9FF; --uniloginWindowBackgroundColo=
r: #2A3953; }

.th-sv, .th-ft { --themeColorDefault: var(--defaultColor); --themeColorPrim=
ary: var(--themeColorFluencyTutor); --themeColorSecondary: var(--secondaryC=
olor); --dashboardTopColor: var(--brandColorGreen); --dashboardTitleColor: =
var(--themeColorFluencyTutor); --iconFillColor: var(--th-slate-dark); --but=
tonBackgroundColor: var(--defaultColor); --buttonBackgroundHoverColor: var(=
--defaultColorHover); --buttonBackgroundActiveColor: var(--defaultColorActi=
ve); --buttonTextColor: var(--fontColorDark); --buttonTextHoverColor: var(-=
-fontColorDark); --buttonTextActiveColor: var(--fontColorDark); --buttonTex=
tVisitedColor: var(--fontColorDark); --buttonBorder: var(--buttonBorder); -=
-buttonBorderHover: var(--buttonBorderColorHover); --buttonBorderRadius: va=
r(--buttonRoundness); --buttonBorderIconFillColor: var(--black); --primaryB=
uttonBackgroundColor: var(--themeColorFluencyTutor); --primaryButtonBackgro=
undHoverColor: var(--primaryColorGreenHover); --primaryButtonBackgroundActi=
veColor: var(--primaryColorGreenActive); --primaryButtonBorderActive: var(-=
-buttonBorderGreenActive); --primaryButtonTextColor: var(--fontColorWhite);=
 --primaryButtonTextHoverColor: var(--fontColorWhite); --primaryButtonTextA=
ctiveColor: var(--fontColorWhite); --primaryButtonTextVisitedColor: var(--f=
ontColorWhite); --primaryButtonBorder: var(--buttonBorderGreen); --primaryB=
uttonBorderHover: var(--buttonBorderGreenHover); --primaryButtonBorderRadiu=
s: var(--buttonRoundness); --primaryButtonIconFillColor: var(--white); --se=
condaryButtonBackgroundColor: var(--secondaryColor); --secondaryButtonBackg=
roundHoverColor: var(--secondaryColorHover); --secondaryButtonBackgroundAct=
iveColor: var(--secondaryColorActive); --secondaryButtonTextColor: var(--fo=
ntColorWhite); --secondaryButtonTextHoverColor: var(--fontColorWhite); --se=
condaryButtonTextActiveColor: var(--fontColorWhite); --secondaryButtonTextV=
isitedColor: var(--fontColorWhite); --secondaryButtonBorder: var(--secondar=
yButtonBorder); --secondaryButtonBorderHover: var(--secondaryButtonBorderCo=
lorHover); --secondaryButtonBorderRadius: var(--buttonRoundness); --seconda=
ryButtonIconFillColor: var(--white); --table-hover-item: var(--list-item-li=
ght-hover); --settingsTitleColor: var(--themeColorPrimary); }

.th-cr { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--primaryColorClaroNavy); --themeColorSecondary: var(--secondaryColor); --=
buttonBackgroundColor: var(--defaultColor); --buttonBackgroundHoverColor: v=
ar(--defaultColorHover); --buttonBackgroundActiveColor: var(--defaultColorA=
ctive); --buttonTextColor: var(--fontColorDark); --buttonTextHoverColor: va=
r(--fontColorDark); --buttonTextActiveColor: var(--fontColorDark); --button=
TextVisitedColor: var(--fontColorDark); --buttonBorder: var(--buttonBorder)=
; --buttonBorderHover: var(--buttonBorderColorHover); --buttonBorderRadius:=
 var(--buttonRoundness); --buttonBorderIconFillColor: var(--black); --prima=
ryButtonBackgroundColor: var(--primaryColorClaroNavy); --primaryButtonBackg=
roundHoverColor: var(--primaryColorClaroNavyHover); --primaryButtonBackgrou=
ndActiveColor: var(--primaryColorClaroNavyActive); --primaryButtonBorderAct=
ive: var(--buttonBorderClaroActive); --primaryButtonTextColor: var(--fontCo=
lorWhite); --primaryButtonTextHoverColor: var(--fontColorWhite); --primaryB=
uttonTextActiveColor: var(--fontColorWhite); --primaryButtonTextVisitedColo=
r: var(--fontColorWhite); --primaryButtonBorder: var(--buttonBorderClaro); =
--primaryButtonBorderHover: var(--buttonBorderClaroHover); --primaryButtonB=
orderRadius: var(--buttonRoundness); --primaryButtonIconFillColor: var(--wh=
ite); --altButtonBackgroundColor: var(--altColor); --altButtonBackgroundHov=
erColor: var(--altColorHover); --altButtonBackgroundActiveColor: var(--altC=
olorActive); --altButtonTextColor: var(--fontColorWhite); --altButtonTextHo=
verColor: var(--fontColorWhite); --altButtonTextActiveColor: var(--fontColo=
rWhite); --altButtonTextVisitedColor: var(--fontColorWhite); --altButtonBor=
der: var(--altButtonBorder); --altButtonBorderHover: var(--altButtonBorderC=
olorHover); --altButtonBorderRadius: var(--buttonRoundness); --altButtonIco=
nFillColor: var(--white); --uniloginBackgroundColor: #F2F9FF; --uniloginWin=
dowBackgroundColor: var(--themeColorPrimary); }

.th-wh { background: rgb(246, 246, 246); --themeColorDefault: var(--default=
Color); --themeColorPrimary: var(--primaryColorClaroNavy); --themeColorSeco=
ndary: var(--secondaryColor); --buttonBackgroundColor: var(--defaultColor);=
 --buttonBackgroundHoverColor: var(--defaultColorHover); --buttonBackground=
ActiveColor: var(--defaultColorActive); --buttonTextColor: var(--fontColorD=
ark); --buttonTextHoverColor: var(--fontColorDark); --buttonTextActiveColor=
: var(--fontColorDark); --buttonTextVisitedColor: var(--fontColorDark); --b=
uttonBorder: var(--buttonBorder); --buttonBorderHover: var(--buttonBorderCo=
lorHover); --buttonBorderRadius: var(--buttonRoundness); --buttonBorderIcon=
FillColor: var(--black); --primaryButtonBackgroundColor: var(--primaryColor=
ClaroBlue); --primaryButtonBackgroundHoverColor: var(--primaryColorClaroBlu=
eHover); --primaryButtonBackgroundActiveColor: var(--primaryColorClaroBlueA=
ctive); --primaryButtonBorderActive: var(--buttonBorderClaroActive); --prim=
aryButtonTextColor: var(--fontColorWhite); --primaryButtonTextHoverColor: v=
ar(--fontColorWhite); --primaryButtonTextActiveColor: var(--fontColorWhite)=
; --primaryButtonTextVisitedColor: var(--fontColorWhite); --primaryButtonBo=
rder: var(--primaryColorClaroBlue); --primaryButtonBorderHover: var(--prima=
ryColorClaroBlueHover); --primaryButtonBorderRadius: var(--buttonRoundness)=
; --primaryButtonIconFillColor: var(--white); --altButtonBackgroundColor: v=
ar(--altColor); --altButtonBackgroundHoverColor: var(--altColorHover); --al=
tButtonBackgroundActiveColor: var(--altColorActive); --altButtonTextColor: =
var(--fontColorWhite); --altButtonTextHoverColor: var(--fontColorWhite); --=
altButtonTextActiveColor: var(--fontColorWhite); --altButtonTextVisitedColo=
r: var(--fontColorWhite); --altButtonBorder: var(--altButtonBorder); --altB=
uttonBorderHover: var(--altButtonBorderColorHover); --altButtonBorderRadius=
: var(--buttonRoundness); --altButtonIconFillColor: var(--white); --unilogi=
nBackgroundColor: #F2F9FF; --uniloginWindowBackgroundColor: var(--primaryCo=
lorClaroNavy); }

.th-lds { --themeColorDefault: var(--defaultColor); --themeColorPrimary: va=
r(--primaryColorLingdys); --themeColorSecondary: var(--secondaryColor); --b=
uttonBackgroundColor: var(--defaultColor); --buttonBackgroundHoverColor: va=
r(--defaultColorHover); --buttonBackgroundActiveColor: var(--defaultColorAc=
tive); --buttonTextColor: var(--fontColorDark); --buttonTextHoverColor: var=
(--fontColorDark); --buttonTextActiveColor: var(--fontColorDark); --buttonT=
extVisitedColor: var(--fontColorDark); --buttonBorder: var(--buttonBorder);=
 --buttonBorderHover: var(--buttonBorderColorHover); --buttonBorderRadius: =
var(--buttonRoundness); --buttonBorderIconFillColor: var(--black); --primar=
yButtonBackgroundColor: var(--primaryColorLingdys); --primaryButtonBackgrou=
ndHoverColor: var(--primaryColorLingdysHover); --primaryButtonBackgroundAct=
iveColor: var(--primaryColorLingdysActive); --primaryButtonBorderActive: va=
r(--buttonBorderLingdysActive); --primaryButtonTextColor: var(--fontColorWh=
ite); --primaryButtonTextHoverColor: var(--fontColorWhite); --primaryButton=
TextActiveColor: var(--fontColorWhite); --primaryButtonTextVisitedColor: va=
r(--fontColorWhite); --primaryButtonBorder: var(--buttonBorderLingdys); --p=
rimaryButtonBorderHover: var(--buttonBorderLingdysHover); --primaryButtonBo=
rderRadius: var(--buttonRoundness); --primaryButtonIconFillColor: var(--whi=
te); --altButtonBackgroundColor: var(--altColor); --altButtonBackgroundHove=
rColor: var(--altColorHover); --altButtonBackgroundActiveColor: var(--altCo=
lorActive); --altButtonTextColor: var(--fontColorWhite); --altButtonTextHov=
erColor: var(--fontColorWhite); --altButtonTextActiveColor: var(--fontColor=
White); --altButtonTextVisitedColor: var(--fontColorWhite); --altButtonBord=
er: var(--altButtonBorder); --altButtonBorderHover: var(--altButtonBorderCo=
lorHover); --altButtonBorderRadius: var(--buttonRoundness); --altButtonIcon=
FillColor: var(--white); --uniloginBackgroundColor: #F2F9FF; --uniloginWind=
owBackgroundColor: var(--themeColorPrimary); }

.th-aw { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--primaryColorClaroNavy); --themeColorSecondary: var(--secondaryColor); --=
buttonBackgroundColor: var(--defaultColor); --buttonBackgroundHoverColor: v=
ar(--defaultColorHover); --buttonBackgroundActiveColor: var(--defaultColorA=
ctive); --buttonTextColor: var(--fontColorDark); --buttonTextHoverColor: va=
r(--fontColorDark); --buttonTextActiveColor: var(--fontColorDark); --button=
TextVisitedColor: var(--fontColorDark); --buttonBorder: var(--buttonBorder)=
; --buttonBorderHover: var(--buttonBorderColorHover); --buttonBorderRadius:=
 var(--buttonRoundness); --buttonBorderIconFillColor: var(--black); --prima=
ryButtonBackgroundColor: var(--primaryColorAppWriter); --primaryButtonBackg=
roundHoverColor: var(--primaryColorAppWriterHover); --primaryButtonBackgrou=
ndActiveColor: var(--primaryColorAppWriterActive); --primaryButtonBorderAct=
ive: var(--buttonBorderAppWriterActive); --primaryButtonTextColor: var(--fo=
ntColorWhite); --primaryButtonTextHoverColor: var(--fontColorWhite); --prim=
aryButtonTextActiveColor: var(--fontColorWhite); --primaryButtonTextVisited=
Color: var(--fontColorWhite); --primaryButtonBorder: var(--buttonBorderAppW=
riter); --primaryButtonBorderHover: var(--buttonBorderAppWriterHover); --pr=
imaryButtonBorderRadius: var(--buttonRoundness); --primaryButtonIconFillCol=
or: var(--white); --altButtonBackgroundColor: var(--altColor); --altButtonB=
ackgroundHoverColor: var(--altColorHover); --altButtonBackgroundActiveColor=
: var(--altColorActive); --altButtonTextColor: var(--fontColorWhite); --alt=
ButtonTextHoverColor: var(--fontColorWhite); --altButtonTextActiveColor: va=
r(--fontColorWhite); --altButtonTextVisitedColor: var(--fontColorWhite); --=
altButtonBorder: var(--altButtonBorder); --altButtonBorderHover: var(--altB=
uttonBorderColorHover); --altButtonBorderRadius: var(--buttonRoundness); --=
altButtonIconFillColor: var(--white); --uniloginBackgroundColor: #F7F7F7; -=
-uniloginWindowBackgroundColor: var(--primaryColorAppWriter); }

.dark-mode { --toolbarBackgroundColor: var(--th-slate-dark); --toolbarButto=
nBackgroundColor: var(--th-slate-dark); --toolbarButtonBackgroundHoverColor=
: var(--icon-button-background-hover-color-dark); --toolbarButtonBackground=
ActiveColor: var(--icon-button-background-active-color-dark); --toolbarButt=
onBorderActive: var(--buttonBorderPink); --toolbarIconFill: var(--white); -=
-toolbarIconHoverFill: var(--white); --toolbarIconActiveFill: var(--white);=
 --dashboardHeaderBackgroundColor: var(--th-slate-dark); --dashboardSidebar=
BorderTopColor: var(--th-slate); --dashboardSidebarBackgroundColor: var(--t=
h-slate-dark); --dashboardContentBackgroundColor: var(--th-slate); --dashbo=
ardCardBackgroundColor: var(--th-slate-dark); --dashboardCardBackgroundHove=
rColor: var(--th-slate-dark-hover600); --dashboardCardBackgroundActiveColor=
: var(--th-slate-dark-active600); --dashboardCardHighlightColor: var(--bran=
dColorBlue); --dashboardTextColor: var(--th-white); --dashboardTitleTextCol=
or: var(--th-white); --dashboardSubTitleTextColor: var(--th-white); --menuI=
conFillColor: var(--white); --iconButtonBackgroundDefaultColor: var(--icon-=
button-background-default-color-dark); --iconButtonBackgroundHoverColor: va=
r(--icon-button-background-hover-color-dark); --iconButtonBackgroundActiveC=
olor: var(--icon-button-background-active-color-dark); --iconButtonBorderCo=
lor: 2px solid transparent; --iconFillColor: var(--white); --buttonLinkText=
Color: var(--white); --buttonLinkIconColor: var(--white); --buttonNoBackgro=
undTextColor: var(--white); --buttonNoBackgroundIconColor: var(--white); --=
buttonNoBackgroundColor: transparent; --buttonNoBackgroundColorHover: var(-=
-icon-button-background-hover-color-dark); --buttonNoBackgroundColorActive:=
 var(--icon-button-background-active-color-dark); --buttonNoBackgroundBorde=
r: 2px solid transparent; --buttonNoBackgroundBorderHover: 2px solid transp=
arent; --buttonNoBackgroundBorderActive: 2px solid transparent; --panelBack=
groundColor: var(--th-slate); --panelBackgroundColorLight: var(--th-slate-l=
ight); --panelBackgroundColorDark: var(--th-slate-dark); --fontColor: var(-=
-textColorLight); --borderColor: 1px solid var(--th-slate-light); --infoBac=
kgroundColor: var(--notificationDarkModeBackground); --successBackgroundCol=
or: var(--notificationDarkModeBackground); --errorBackgroundColor: var(--no=
tificationDarkModeBackground); --warningBackgroundColor: var(--notification=
DarkModeBackground); --infoBorderColor: var(--notificationDarkModeBorder); =
--successBorderColor: var(--notificationDarkModeBorder); --errorBorderColor=
: var(--notificationDarkModeBorder); --warningBorderColor: var(--notificati=
onDarkModeBorder); --infoWarningColor: #fff; --successWarningColor: #fff; -=
-errorWarningColor: #fff; --warningWarningColor: #fff; --infoTitleColor: #f=
ff; --successTitleColor: #fff; --errorTitleColor: #fff; --warningTitleColor=
: #fff; --accordionBackgroundColor: var(--th-slate-dark); --accordionTextCo=
lor: #fff; --accordionTextBottomColor: #f5f5f5; --accordionIconColor: var(-=
-toolbarWhite); --accordionBackgroundColorHover: var(--th-slate-dark-hover6=
00); --tableBackgroundColor: var(--th-slate); --tableBackgroundHeaderColor:=
 var(--th-slate-alt); --tableBackgroundAltColor: var(--th-slate-alt); --tab=
leBackgroundHoverColor: var(--th-slate-hover); --tableBorderColor: var(--th=
-slate-dark); --tableTextColor: #fff; --ListGroupSearchItemColor: var(--th-=
slate-dark); --ListGroupSearchItemColorHover: var(--th-slate-dark-hover800)=
; --ListGroupSearchItemTextColor: var(--th-white); --ListGroupSearchItemBor=
derColor: rgba(0, 0, 0, 0.225); --ListGroupSearchItemAsideColor: var(--th-s=
late-dark); --ListGroupSearchItemAsideTextColor: #fff; --inputBorder: 1px s=
olid var(--th-slate); --inputTextColor: var( --th-white); --inputBackground=
Color: var(--th-cool-grey-800); --modalHeaderBackgroundColor: var(--th-cool=
-grey-800); --modalContentBackgroundColor: var(--th-cool-grey-700); --modal=
ContentBorderColorHeader: var(--th-cool-grey-700); --modalContentBorderColo=
rFooter: var(--th-cool-grey-700); --modalTextColor: var(--th-white); --sett=
ingsDialogBackgroundColor: var(--th-cool-grey-700); --settingsDialogMenuBac=
kgroundColor: var(--th-cool-grey-800); --settingsDialogItemSelectedBackgrou=
ndColor: var(--th-slate-dark); --settingsDialogItemBackgroundColorHover: va=
r(--th-cool-grey-700); --settingsDialogItemBackgroundColorActive: var(--th-=
cool-grey-600); --settingsTitleColor: #fff; --selectBorder: 1px solid var( =
--slate-light); --selectBackgroundColor: var( --th-slate); --selectBackgrou=
ndColorHover: rgba(255, 255, 255, 0.146); --selectBackgroundColorActive: rg=
ba(255, 255, 255, 0.221); --listGroupBackgroundColor: transparent; --listGr=
oupItemTextColor: var(--th-white); --listGroupItemBackgroundColor: var(--th=
-cool-grey-800); --listGroupItemActionsBackgroundColor: var(--th-cool-grey-=
850); --listGroupItemBackgroundColorHover: var(--th-cool-grey-700); --listG=
roupItemBackgroundColorActive: var(--th-cool-grey-600); --listGroupItemIcon=
Color: var(--th-white); --listGroupItemArrowColor: var(--th-cool-grey-800);=
 }

.dark-mode.th-rw { --toolbarIconActiveFill: var(--white); --toolbarIconTogg=
ledHoverFill: var(--brandColorPurple); --toolbarIconToggleFill: var(--brand=
ColorPurple); --toolbarIconToggleHoverFill: var(--brandColorPurple); }

.dark-mode.th-pr { --toolbarButtonBackgroundHoverColor: var(--primaryColorB=
lue); --toolbarButtonBackgroundActiveColor: var(--primaryColorBlueHover); -=
-toolbarButtonBorderActive: var(--buttonBorderBlueActive); --toolbarIconTog=
gleFill: var(--iconToggleFillOrbitNote); --textColor: var(--textColorLight)=
; --cardIconFillColor: var(--brandColorBlue); --primaryButtonBackgroundColo=
r: var(--primaryColor); --primaryButtonBackgroundHoverColor: var(--primaryC=
olorHover); --primaryButtonBackgroundActiveColor: var(--primaryColorActive)=
; --primaryButtonBorderActive: var(--primaryButtonBorderActive); --primaryB=
uttonBorder: var(--primaryButtonBorder); --primaryButtonBorderHover: var(--=
primaryButtonBorderHover); --dashboardTopColor: var(--primaryColorBlue); --=
dashboardTitleColor: var(--themeColorEquatio); --dashboardPaneBackgroundCol=
or: var(--th-slate-dark); --dashboardPaneBorderColor: var(--th-slate-dark);=
 --dashboardPaneDashedBorderColor: var(--dashboardDashedBorderDark); --list=
GroupItemBackgroundColor: var(--th-slate-dark); --listGroupItemBackgroundCo=
lorHover: var(--th-slate-dark-hover800); --listGroupItemBackgroundColorActi=
ve: var(--th-slate-dark-active800); --listGroupTileBackgroundColorActive: v=
ar(--th-slate-dark-active800); --list-item-hover: var(--listGroupItemBackgr=
oundColorHover); }

.dark-mode.th-rd { --toolbarIconToggledHoverFill: var(--brandColorBlue); --=
toolbarIconToggleFill: var(--brandColorBlue); --toolbarIconToggleHoverFill:=
 var(--brandColorBlue); --dashboardTopColor: var(--th-slate); --dashboardCa=
rdAuditorColor: var(--primaryColorBlue); --dashboardCardAuditorLabelColor: =
var(--th-grey); --dashboardCardEditorColor: var(--reachDeckEditorColor); --=
dashboardCardEditorLabelColor: var(--th-grey); --dashboardCardToolbarColor:=
 var(--primaryColorOrange); --dashboardCardToolbarLabelColor: var(--th-grey=
); --dashboardCardBorderColor: var(--th-slate-light); --dashboardCardFooter=
LinkColor: hsl(197, 100%, 50%); --icon-opacity: .9; --cardIconFillColor: va=
r(--th-white); --listGroupItemBackgroundColor: var(--th-slate-dark); --list=
GroupItemBackgroundColorHover: var(--th-slate-dark-hover800); --listGroupIt=
emBackgroundColorActive: var(--th-slate-dark-active800); --listGroupTileBac=
kgroundColorActive: var(--th-slate-dark-active800); --list-item-hover: var(=
--listGroupItemBackgroundColorHover); }

.dark-mode .gw-select { background: url("data:image/svg+xml,<svg xmlns=3D'h=
ttp://www.w3.org/2000/svg' xmlns:xlink=3D'http://www.w3.org/1999/xlink' hei=
ght=3D'22px' width=3D'22px' viewBox=3D'0 0 18 18'>%3Cpath d=3D'M7.41 7.84L1=
2 12.42l4.59-4.58L18 9.25l-6 6-6-6z' fill=3D'%23fff'/%3E%3Cpath d=3D'M0-.75=
h24v24H0z' fill=3D'none'/%3E</svg>") right 0.9em top 40% / 1.3em no-repeat,=
 0px 0px / 100% repeat transparent; border: 1px solid rgb(255, 255, 255); c=
olor: rgb(255, 255, 255); }

.dark-mode .gw-select > option { background: rgb(67, 78, 101); }

@media (prefers-color-scheme: dark) {
  :root .day.dark-scheme { background: rgb(51, 51, 51); color: white; }
  :root .night.dark-scheme { background: black; color: rgb(221, 221, 221); =
}
}

@media (prefers-color-scheme: light) {
  :root .day.light-scheme { background: white; color: rgb(85, 85, 85); }
  :root .night.light-scheme { background: rgb(238, 238, 238); color: black;=
 }
}

.th-rw { --listGroupItemBackgroundColorActive: white; --squareButtonBackgro=
undHover: #f5f5f5; --squareButtonIconFillColor: rgb(36, 42, 56); --squareBu=
ttonActiveBackGroundColor: #EFEFEF; --squareButtonIconTickColor: #506C7E; }

.dark-mode { --listGroupItemBackgroundColorFocus: rgb(63, 79, 90); --modalT=
extColorFocus: white; --listGroupItemBackgroundColorActive: rgb(36, 45, 51)=
; --modalTextColorActive: white; --squareButtonBackgroundHover: rgb(56, 71,=
 81); --squareButtonIconFillColor: white; --squareButtonActiveBackGroundCol=
or: #24323E; --squareButtonIconTickColor: #FFF; }

.dark-mode.th-rw { --toolbarIconButtonFillColor: var(--white); }

.gw-toolbar--s1 { --fontSize: 5px; }

.gw-toolbar--s2 { --fontSize: 10px; }

.gw-toolbar--s3 { --fontSize: 15px; }

.gw-toolbar--s4 { --fontSize: 20px; }

.gw-listitem-fontsize-s10 { --gw-listitem-fontsize: 10px !important; }

.gw-listitem-fontsize-s11 { --gw-listitem-fontsize: 11px !important; }

.gw-listitem-fontsize-s12 { --gw-listitem-fontsize: 12px !important; }

.gw-listitem-fontsize-s13 { --gw-listitem-fontsize: 13px !important; }

.gw-listitem-fontsize-s14 { --gw-listitem-fontsize: 14px !important; }

.gw-listitem-fontsize-s15 { --gw-listitem-fontsize: 15px !important; }

.gw-listitem-fontsize-s16 { --gw-listitem-fontsize: 16px !important; }

.gw-listitem-fontsize-s17 { --gw-listitem-fontsize: 17px !important; }

.gw-listitem-fontsize-s18 { --gw-listitem-fontsize: 18px !important; }

.gw-listitem-fontsize-s19 { --gw-listitem-fontsize: 19px !important; }

.gw-listitem-fontsize-s20 { --gw-listitem-fontsize: 20px !important; }

.gw-listitem-fontsize-s21 { --gw-listitem-fontsize: 21px !important; }

.gw-listitem-fontsize-s22 { --gw-listitem-fontsize: 22px !important; }

.gw-listitem-fontsize-s23 { --gw-listitem-fontsize: 23px !important; }

.gw-listitem-fontsize-s24 { --gw-listitem-fontsize: 24px !important; }

:root { --fontSize: 10px; }

.gw-info { --notification-bg-color: var(--infoBackgroundColor); --notificat=
ion-border-color: var(--infoBorderColor); --notification-color: var(--infoT=
itleColor); }

.gw-success { --notification-bg-color: var(--successBackgroundColor); --not=
ification-border-color: var(--successBorderColor); --notification-color: va=
r(--successTitleColor); }

.gw-error { --notification-bg-color: var(--errorBackgroundColor); --notific=
ation-border-color: var(--errorBorderColor); --notification-color: var(--er=
rorTitleColor); }

.gw-warning { --notification-bg-color: var(--warningBackgroundColor); --not=
ification-border-color: var(--warningBorderColor); --notification-color: va=
r(--warningTitleColor); }

.th-rw { --toolbarIconToggleFill: var(--primaryColorPurple); --toolbarIconT=
oggleHoverFill: var(--primaryColorPurple); }

.gw-toolbar--undocked { --toolbarWidth: fit-content; --toolbarDisplay: bloc=
k; --toolbarPosition: fixed; }

.gw-ul--small { --liWidth: 150px; }

.gw-ul--medium { --liWidth: 300px; }

.gw-ul--large { --liWidth: 450px; }
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-c81f04d0-5b01-47cd-a27d-b9f48da0596c@mhtml.blink

@charset "utf-8";
=0A
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-56c864ac-bbe4-4938-b84a-496cdf1a7bfe@mhtml.blink

@charset "utf-8";

.footer-overflow-container { display: flex; background-color: rgb(0, 0, 0);=
 position: relative; }

.footer-container { flex-grow: 1; position: relative; display: flex; flex-d=
irection: row; justify-content: space-between; padding: 6px; }

.footer-pill-link { appearance: none; text-decoration: none; }

.footer-pill { display: flex; flex-direction: row; justify-content: center;=
 align-items: center; border-radius: 1000px; border: none; background: none=
; padding: 4px 8px; font-family: -apple-system, BlinkMacSystemFont, "Segoe =
UI", Helvetica, Arial, sans-serif; white-space: nowrap; text-decoration: no=
ne; font-weight: 600; font-style: normal; font-size: calc(12px * var(--rfso=
, var(--bfso, 1))); color: rgb(255, 255, 255); transition: background-color=
 0.2s ease 0s; }

.footer-pill:hover { cursor: pointer; }

.footer-pill + .footer-pill { margin-left: 8px; }

.footer-pill-primary { position: relative; z-index: 1; background-color: rg=
ba(255, 255, 255, 0.1); }

.footer-pill-primary:hover > .footer-pill-primary-background { opacity: 1; =
}

.footer-pill-primary-background { position: absolute; z-index: -1; border-r=
adius: 1000px; top: 0px; left: 0px; width: 100%; height: 100%; background: =
linear-gradient(90deg, rgb(0, 196, 204) 0%, rgb(125, 42, 232) 100%); opacit=
y: 0; overflow: hidden; transition: opacity 0.2s ease 0s; }

.footer-pill-primary-background::after { content: ""; position: absolute; w=
idth: 100%; height: 100%; left: 0px; top: 0px; background: linear-gradient(=
to right, rgba(125, 42, 232, 0) 0%, rgb(26, 26, 26) calc(20% + 50px), rgb(2=
6, 26, 26) 100%); transform: translateX(0px); transition: transform 0.7s ea=
se 0s; }

.footer-pill-primary:hover > .footer-pill-primary-background::after { trans=
form: translateX(110%); }

.footer-pill-primary-background > svg { position: absolute; top: 50%; left:=
 0px; right: 0px; transform-origin: center center; transform: translateY(-5=
0%); width: 100%; }

.animation-container { animation: 12s linear 0s infinite normal none paused=
 spin; }

.footer-pill-primary:hover > .footer-pill-primary-background .animation-con=
tainer { animation-play-state: running; }

.footer-pill-secondary { background-color: rgba(255, 255, 255, 0); }

.footer-pill-secondary:hover { background-color: rgba(255, 255, 255, 0.1); =
}

.footer-pill-secondary:active, .footer-pill-secondary.active { background-c=
olor: rgba(255, 255, 255, 0.15); }

.inline-icon { display: inline-block; width: 16px; height: 16px; margin-rig=
ht: 5px; }

.inline-icon > svg { fill: rgb(218, 218, 218); }

.inline-icon-logo { display: inline-block; height: 15px; margin-left: 5px; =
}

.inline-icon-logo > svg { height: 100%; }

.modal-backdrop { position: fixed; inset: 0px; width: 100%; height: 100%; z=
-index: 9999; transition: opacity 0.35s ease 0s, visibility 0.35s ease 0s; =
opacity: 0; visibility: hidden; pointer-events: none; }

.modal-backdrop.active { opacity: 1; visibility: visible; pointer-events: a=
ll; }

.report-form-modal { display: block; box-sizing: border-box; position: abso=
lute; top: 0px; left: 6px; width: 367px; transform: translate3d(0px, calc(-=
100% + 24px), 0px); z-index: 10000; font-family: -apple-system, BlinkMacSys=
temFont, "Segoe UI", Helvetica, Arial, sans-serif; background-color: rgb(25=
5, 255, 255); border-radius: 8px; margin: 0px; box-shadow: rgba(14, 19, 24,=
 0.25) 0px 2px 18px 0px, rgba(14, 19, 24, 0.02) 0px 0px 1px 0px; transition=
-duration: 0.35s; transition-property: opacity, transform, visibility; opac=
ity: 0; visibility: hidden; pointer-events: none; }

.report-form-modal.active { transform: translate3d(0px, calc(-100% + 8px), =
0px); opacity: 1; visibility: visible; pointer-events: all; }

.form-content { margin: 32px; outline-offset: 34px; }

.form-content > * { margin: 16px 0px; }

.form-title { font-size: calc(24px * var(--rfso, var(--bfso, 1))); font-wei=
ght: 700; }

.form-body { font-size: calc(14px * var(--rfso, var(--bfso, 1))); font-weig=
ht: 400; color: rgba(14, 19, 24, 0.7); }

.form-body-bold { font-size: calc(14px * var(--rfso, var(--bfso, 1))); font=
-weight: 600; line-height: 22.4px; color: rgb(14, 19, 24); }

.form-radio-input { display: grid; grid-template: "radio-button radio-label=
" ". radio-description" / 24px auto; }

.form-radio-input:hover { cursor: pointer; }

.radio-button-input { opacity: 0; margin: 0px; width: 0px; height: 0px; }

.radio-button { align-self: flex-start; grid-area: radio-button; display: i=
nline-block; width: 16px; height: 16px; margin: 4px 8px 0px 0px; vertical-a=
lign: middle; border-radius: 50%; box-shadow: rgba(53, 71, 90, 0.2) 0px 0px=
 0px 1px inset; outline: none; background-color: rgb(255, 255, 255); flex-s=
hrink: 0; }

.radio-button-input:checked + .radio-button { background: rgb(255, 255, 255=
); box-shadow: rgb(139, 61, 255) 0px 0px 0px 5px inset; transition: box-sha=
dow 0.1s ease-in-out 0s, background-color 0.1s ease-in-out 0s; }

.form-radio-input:hover .radio-button-input:not(:checked) + .radio-button {=
 box-shadow: rgba(30, 41, 51, 0.45) 0px 0px 0px 1px inset; }

.radio-button-input + .radio-button::after { content: ""; width: 6px; heigh=
t: 6px; background-color: transparent; display: block; margin: 5px; border-=
radius: 50%; }

.radio-button-input:checked + .radio-button::after { background-color: rgb(=
255, 255, 255); transition: background-color 0.1s ease-in-out 0s; }

.form-radio-label { grid-area: radio-label; font-size: calc(14px * var(--rf=
so, var(--bfso, 1))); font-weight: 600; line-height: 22.4px; color: rgb(14,=
 19, 24); }

.form-radio-desc { grid-area: radio-description; font-size: calc(12px * var=
(--rfso, var(--bfso, 1))); font-weight: 400; color: rgba(14, 19, 24, 0.7); =
margin: 0px; }

.form-buttons { margin-top: 32px; display: grid; gap: 8px; grid-template-co=
lumns: auto auto; justify-content: flex-end; }

.tertiary-button { border: 2px solid transparent; box-sizing: border-box; b=
ackground-color: rgba(13, 18, 22, 0); border-radius: 4px; color: rgb(13, 18=
, 22); cursor: pointer; display: inline-flex; height: 40px; margin: 0px; ma=
x-width: 100%; min-width: 80px; width: 100%; padding: 0px 6px; vertical-ali=
gn: middle; align-items: center; justify-content: center; font-family: -app=
le-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif; fo=
nt-weight: 400; line-height: 1.6; outline-offset: 2px; transition: backgrou=
nd-color 0.2s ease 0s; }

.tertiary-button:hover { background-color: rgba(64, 87, 109, 0.07); }

.tertiary-button:active { background-color: rgba(57, 76, 96, 0.15); }

.button { border: 2px solid transparent; box-sizing: border-box; background=
-color: rgba(64, 87, 109, 0.07); border-radius: 4px; color: rgb(14, 19, 24)=
; cursor: pointer; display: inline-flex; height: 40px; margin: 0px; max-wid=
th: 100%; min-width: 80px; width: 100%; padding: 0px 6px; vertical-align: m=
iddle; align-items: center; justify-content: center; font-family: -apple-sy=
stem, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif; font-we=
ight: 400; line-height: 1.6; outline-offset: 2px; transition: background-co=
lor 0.2s ease 0s; }

.button:hover { background-color: rgba(57, 76, 96, 0.15); }

.button:active { background-color: rgba(53, 71, 90, 0.2); }

.submit-button { border: 2px solid transparent; box-sizing: border-box; bac=
kground-color: rgb(125, 42, 232); border-radius: 4px; color: rgb(255, 255, =
255); cursor: pointer; display: inline-flex; height: 40px; margin: 0px; max=
-width: 100%; min-width: 80px; width: 100%; padding: 0px 6px; vertical-alig=
n: middle; align-items: center; justify-content: center; font-family: -appl=
e-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif; fon=
t-weight: 400; line-height: 1.6; outline-offset: 4px; transition: backgroun=
d-color 0.2s ease 0s; }

.submit-button:hover { background-color: rgb(141, 57, 250); }

.submit-button:active { background-color: rgb(103, 24, 207); }

.button-text { font-size: calc(14px * var(--rfso, var(--bfso, 1))); display=
: inline-block; max-width: 100%; overflow: hidden; padding: 0px 8px; text-o=
verflow: ellipsis; white-space: nowrap; font-weight: 600; transition: all 0=
.2s ease 0s; }

.a-link:visited { color: rgba(14, 19, 24, 0.7); }

.a-link { text-decoration: underline; color: rgba(14, 19, 24, 0.7); }

.a-link:hover { color: rgb(125, 42, 232); }

@keyframes spin {=20
  0% { transform: rotate(0turn); }
  100% { transform: rotate(1turn); }
}

@supports selector(:focus-visible) {
  .radio-button-input:focus-visible + .radio-button { outline: auto; }
  .footer-pill-primary:focus-visible > .footer-pill-primary-background::aft=
er { transform: translateX(110%); }
  .footer-pill-primary:focus-visible > .footer-pill-primary-background { op=
acity: 1; }
  .footer-pill-primary:focus-visible > .footer-pill-primary-background .ani=
mation-container { animation-play-state: running; }
}

@supports not selector(:focus-visible) {
  .radio-button-input:focus + .radio-button { outline: auto; }
  .footer-pill-primary:focus > .footer-pill-primary-background::after { tra=
nsform: translateX(110%); }
  .footer-pill-primary:focus > .footer-pill-primary-background { opacity: 1=
; }
  .footer-pill-primary:focus > .footer-pill-primary-background .animation-c=
ontainer { animation-play-state: running; }
}

@media only screen and (max-width: 600px) {
  .modal-backdrop { background-color: rgba(14, 19, 24, 0.45); backdrop-filt=
er: blur(4px); }
  .report-form-modal { width: 100%; position: fixed; left: 0px; right: 0px;=
 bottom: 0px; border-radius: 8px 8px 0px 0px; transform: translate3d(0px, 3=
3%, 0px); }
  .report-form-modal.active { transform: translate3d(0px, 0px, 0px); }
  .form-content { margin: 16px; }
  .form-buttons { display: grid; gap: 8px; grid-template-columns: 1fr; }
  .submit-button { order: -1; }
  @supports (padding: env(safe-area-inset-bottom)) {
  .footer-container { padding: 6px 6px calc(6px + env(safe-area-inset-botto=
m)) 6px; }
  .form-content { margin: 16px 16px calc(16px + env(safe-area-inset-bottom)=
) 16px; }
}
}

@media (prefers-reduced-motion) {
  .report-form-modal, .report-form-modal.active { transition-property: opac=
ity, visibility; transform: translate3d(0px, calc(-100% + 8px), 0px); }
  @media only screen and (max-width: 600px) {
  .report-form-modal, .report-form-modal.active { transform: translate3d(0p=
x, 0px, 0px); }
}
  .animation-container { animation-play-state: paused !important; }
  .footer-pill-primary-background::after { transform: translateX(0px); opac=
ity: 0; transition: opacity 0.7s ease 0s; }
  .footer-pill-primary-background > svg { display: none; }
}
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://smiartist.my.canva.site/school-planner/_assets/a0684b0780c739e9.vendor.ltr.css

@charset "utf-8";

.ql-container { box-sizing: border-box; font-family: Helvetica, Arial, sans=
-serif; font-size: 13px; height: 100%; margin: 0px; position: relative; }

.ql-container.ql-disabled .ql-tooltip { visibility: hidden; }

.ql-container:not(.ql-disabled) li[data-list=3D"checked"] > .ql-ui, .ql-con=
tainer:not(.ql-disabled) li[data-list=3D"unchecked"] > .ql-ui { cursor: poi=
nter; }

.ql-clipboard { height: 1px; left: -100000px; overflow-y: hidden; position:=
 absolute; top: 50%; }

.ql-clipboard p { margin: 0px; padding: 0px; }

.ql-editor { overflow-wrap: break-word; box-sizing: border-box; counter-res=
et: list-0 0 list-1 0 list-2 0 list-3 0 list-4 0 list-5 0 list-6 0 list-7 0=
 list-8 0 list-9 0; height: 100%; line-height: 1.42; outline: none; overflo=
w-y: auto; padding: 12px 15px; tab-size: 4; text-align: left; white-space: =
pre-wrap; }

.ql-editor > * { cursor: text; }

.ql-editor blockquote, .ql-editor h1, .ql-editor h2, .ql-editor h3, .ql-edi=
tor h4, .ql-editor h5, .ql-editor h6, .ql-editor ol, .ql-editor p, .ql-edit=
or pre { margin: 0px; padding: 0px; }

@supports (counter-set:none) {
  .ql-editor h1, .ql-editor h2, .ql-editor h3, .ql-editor h4, .ql-editor h5=
, .ql-editor h6, .ql-editor p { counter-set: list-0 0 list-1 0 list-2 0 lis=
t-3 0 list-4 0 list-5 0 list-6 0 list-7 0 list-8 0 list-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor h1, .ql-editor h2, .ql-editor h3, .ql-editor h4, .ql-editor h5=
, .ql-editor h6, .ql-editor p { counter-reset: list-0 0 list-1 0 list-2 0 l=
ist-3 0 list-4 0 list-5 0 list-6 0 list-7 0 list-8 0 list-9 0; }
}

.ql-editor table { border-collapse: collapse; }

.ql-editor td { border: 1px solid rgb(0, 0, 0); padding: 2px 5px; }

.ql-editor li, .ql-editor ol { padding-left: 1.5em; }

.ql-editor li { list-style-type: none; position: relative; }

.ql-editor li > .ql-ui::before { display: inline-block; margin-left: -1.5em=
; margin-right: 0.3em; text-align: right; white-space: nowrap; width: 1.2em=
; }

@supports (display:contents) {
  .ql-editor li[data-list=3D"bullet"] > .ql-ui, .ql-editor li[data-list=3D"=
ordered"] > .ql-ui { display: contents; }
}

.ql-editor li[data-list=3D"checked"] > .ql-ui, .ql-editor li[data-list=3D"u=
nchecked"] > .ql-ui { color: rgb(119, 119, 119); }

.ql-editor li[data-list=3D"bullet"] > .ql-ui::before { content: "=E2=80=A2"=
; }

.ql-editor li[data-list=3D"checked"] > .ql-ui::before { content: "=E2=98=91=
"; }

.ql-editor li[data-list=3D"unchecked"] > .ql-ui::before { content: "=E2=98=
=90"; }

@supports (counter-set:none) {
  .ql-editor li[data-list] { counter-set: list-1 0 list-2 0 list-3 0 list-4=
 0 list-5 0 list-6 0 list-7 0 list-8 0 list-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor li[data-list] { counter-reset: list-1 0 list-2 0 list-3 0 list=
-4 0 list-5 0 list-6 0 list-7 0 list-8 0 list-9 0; }
}

.ql-editor li[data-list=3D"ordered"] { counter-increment: list-0 1; }

.ql-editor li[data-list=3D"ordered"] > .ql-ui::before { content: counter(li=
st-0) ". "; }

.ql-editor li[data-list=3D"ordered"].ql-indent-1 { counter-increment: list-=
1 1; }

.ql-editor li[data-list=3D"ordered"].ql-indent-1 > .ql-ui::before { content=
: counter(list-1, lower-alpha) ". "; }

@supports (counter-set:none) {
  .ql-editor li[data-list].ql-indent-1 { counter-set: list-2 0 list-3 0 lis=
t-4 0 list-5 0 list-6 0 list-7 0 list-8 0 list-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor li[data-list].ql-indent-1 { counter-reset: list-2 0 list-3 0 l=
ist-4 0 list-5 0 list-6 0 list-7 0 list-8 0 list-9 0; }
}

.ql-editor li[data-list=3D"ordered"].ql-indent-2 { counter-increment: list-=
2 1; }

.ql-editor li[data-list=3D"ordered"].ql-indent-2 > .ql-ui::before { content=
: counter(list-2, lower-roman) ". "; }

@supports (counter-set:none) {
  .ql-editor li[data-list].ql-indent-2 { counter-set: list-3 0 list-4 0 lis=
t-5 0 list-6 0 list-7 0 list-8 0 list-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor li[data-list].ql-indent-2 { counter-reset: list-3 0 list-4 0 l=
ist-5 0 list-6 0 list-7 0 list-8 0 list-9 0; }
}

.ql-editor li[data-list=3D"ordered"].ql-indent-3 { counter-increment: list-=
3 1; }

.ql-editor li[data-list=3D"ordered"].ql-indent-3 > .ql-ui::before { content=
: counter(list-3) ". "; }

@supports (counter-set:none) {
  .ql-editor li[data-list].ql-indent-3 { counter-set: list-4 0 list-5 0 lis=
t-6 0 list-7 0 list-8 0 list-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor li[data-list].ql-indent-3 { counter-reset: list-4 0 list-5 0 l=
ist-6 0 list-7 0 list-8 0 list-9 0; }
}

.ql-editor li[data-list=3D"ordered"].ql-indent-4 { counter-increment: list-=
4 1; }

.ql-editor li[data-list=3D"ordered"].ql-indent-4 > .ql-ui::before { content=
: counter(list-4, lower-alpha) ". "; }

@supports (counter-set:none) {
  .ql-editor li[data-list].ql-indent-4 { counter-set: list-5 0 list-6 0 lis=
t-7 0 list-8 0 list-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor li[data-list].ql-indent-4 { counter-reset: list-5 0 list-6 0 l=
ist-7 0 list-8 0 list-9 0; }
}

.ql-editor li[data-list=3D"ordered"].ql-indent-5 { counter-increment: list-=
5 1; }

.ql-editor li[data-list=3D"ordered"].ql-indent-5 > .ql-ui::before { content=
: counter(list-5, lower-roman) ". "; }

@supports (counter-set:none) {
  .ql-editor li[data-list].ql-indent-5 { counter-set: list-6 0 list-7 0 lis=
t-8 0 list-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor li[data-list].ql-indent-5 { counter-reset: list-6 0 list-7 0 l=
ist-8 0 list-9 0; }
}

.ql-editor li[data-list=3D"ordered"].ql-indent-6 { counter-increment: list-=
6 1; }

.ql-editor li[data-list=3D"ordered"].ql-indent-6 > .ql-ui::before { content=
: counter(list-6) ". "; }

@supports (counter-set:none) {
  .ql-editor li[data-list].ql-indent-6 { counter-set: list-7 0 list-8 0 lis=
t-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor li[data-list].ql-indent-6 { counter-reset: list-7 0 list-8 0 l=
ist-9 0; }
}

.ql-editor li[data-list=3D"ordered"].ql-indent-7 { counter-increment: list-=
7 1; }

.ql-editor li[data-list=3D"ordered"].ql-indent-7 > .ql-ui::before { content=
: counter(list-7, lower-alpha) ". "; }

@supports (counter-set:none) {
  .ql-editor li[data-list].ql-indent-7 { counter-set: list-8 0 list-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor li[data-list].ql-indent-7 { counter-reset: list-8 0 list-9 0; =
}
}

.ql-editor li[data-list=3D"ordered"].ql-indent-8 { counter-increment: list-=
8 1; }

.ql-editor li[data-list=3D"ordered"].ql-indent-8 > .ql-ui::before { content=
: counter(list-8, lower-roman) ". "; }

@supports (counter-set:none) {
  .ql-editor li[data-list].ql-indent-8 { counter-set: list-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor li[data-list].ql-indent-8 { counter-reset: list-9 0; }
}

.ql-editor li[data-list=3D"ordered"].ql-indent-9 { counter-increment: list-=
9 1; }

.ql-editor li[data-list=3D"ordered"].ql-indent-9 > .ql-ui::before { content=
: counter(list-9) ". "; }

.ql-editor .ql-indent-1:not(.ql-direction-rtl) { padding-left: 3em; }

.ql-editor li.ql-indent-1:not(.ql-direction-rtl) { padding-left: 4.5em; }

.ql-editor .ql-indent-1.ql-direction-rtl.ql-align-right { padding-right: 3e=
m; }

.ql-editor li.ql-indent-1.ql-direction-rtl.ql-align-right { padding-right: =
4.5em; }

.ql-editor .ql-indent-2:not(.ql-direction-rtl) { padding-left: 6em; }

.ql-editor li.ql-indent-2:not(.ql-direction-rtl) { padding-left: 7.5em; }

.ql-editor .ql-indent-2.ql-direction-rtl.ql-align-right { padding-right: 6e=
m; }

.ql-editor li.ql-indent-2.ql-direction-rtl.ql-align-right { padding-right: =
7.5em; }

.ql-editor .ql-indent-3:not(.ql-direction-rtl) { padding-left: 9em; }

.ql-editor li.ql-indent-3:not(.ql-direction-rtl) { padding-left: 10.5em; }

.ql-editor .ql-indent-3.ql-direction-rtl.ql-align-right { padding-right: 9e=
m; }

.ql-editor li.ql-indent-3.ql-direction-rtl.ql-align-right { padding-right: =
10.5em; }

.ql-editor .ql-indent-4:not(.ql-direction-rtl) { padding-left: 12em; }

.ql-editor li.ql-indent-4:not(.ql-direction-rtl) { padding-left: 13.5em; }

.ql-editor .ql-indent-4.ql-direction-rtl.ql-align-right { padding-right: 12=
em; }

.ql-editor li.ql-indent-4.ql-direction-rtl.ql-align-right { padding-right: =
13.5em; }

.ql-editor .ql-indent-5:not(.ql-direction-rtl) { padding-left: 15em; }

.ql-editor li.ql-indent-5:not(.ql-direction-rtl) { padding-left: 16.5em; }

.ql-editor .ql-indent-5.ql-direction-rtl.ql-align-right { padding-right: 15=
em; }

.ql-editor li.ql-indent-5.ql-direction-rtl.ql-align-right { padding-right: =
16.5em; }

.ql-editor .ql-indent-6:not(.ql-direction-rtl) { padding-left: 18em; }

.ql-editor li.ql-indent-6:not(.ql-direction-rtl) { padding-left: 19.5em; }

.ql-editor .ql-indent-6.ql-direction-rtl.ql-align-right { padding-right: 18=
em; }

.ql-editor li.ql-indent-6.ql-direction-rtl.ql-align-right { padding-right: =
19.5em; }

.ql-editor .ql-indent-7:not(.ql-direction-rtl) { padding-left: 21em; }

.ql-editor li.ql-indent-7:not(.ql-direction-rtl) { padding-left: 22.5em; }

.ql-editor .ql-indent-7.ql-direction-rtl.ql-align-right { padding-right: 21=
em; }

.ql-editor li.ql-indent-7.ql-direction-rtl.ql-align-right { padding-right: =
22.5em; }

.ql-editor .ql-indent-8:not(.ql-direction-rtl) { padding-left: 24em; }

.ql-editor li.ql-indent-8:not(.ql-direction-rtl) { padding-left: 25.5em; }

.ql-editor .ql-indent-8.ql-direction-rtl.ql-align-right { padding-right: 24=
em; }

.ql-editor li.ql-indent-8.ql-direction-rtl.ql-align-right { padding-right: =
25.5em; }

.ql-editor .ql-indent-9:not(.ql-direction-rtl) { padding-left: 27em; }

.ql-editor li.ql-indent-9:not(.ql-direction-rtl) { padding-left: 28.5em; }

.ql-editor .ql-indent-9.ql-direction-rtl.ql-align-right { padding-right: 27=
em; }

.ql-editor li.ql-indent-9.ql-direction-rtl.ql-align-right { padding-right: =
28.5em; }

.ql-editor li.ql-direction-rtl { padding-right: 1.5em; }

.ql-editor li.ql-direction-rtl > .ql-ui::before { margin-left: 0.3em; margi=
n-right: -1.5em; text-align: left; }

.ql-editor table { table-layout: fixed; width: 100%; }

.ql-editor table td { outline: none; }

.ql-editor .ql-code-block-container { font-family: monospace; }

.ql-editor .ql-video { display: block; max-width: 100%; }

.ql-editor .ql-video.ql-align-center { margin: 0px auto; }

.ql-editor .ql-video.ql-align-right { margin: 0px 0px 0px auto; }

.ql-editor .ql-bg-black { background-color: rgb(0, 0, 0); }

.ql-editor .ql-bg-red { background-color: rgb(230, 0, 0); }

.ql-editor .ql-bg-orange { background-color: rgb(255, 153, 0); }

.ql-editor .ql-bg-yellow { background-color: rgb(255, 255, 0); }

.ql-editor .ql-bg-green { background-color: rgb(0, 138, 0); }

.ql-editor .ql-bg-blue { background-color: rgb(0, 102, 204); }

.ql-editor .ql-bg-purple { background-color: rgb(153, 51, 255); }

.ql-editor .ql-color-white { color: rgb(255, 255, 255); }

.ql-editor .ql-color-red { color: rgb(230, 0, 0); }

.ql-editor .ql-color-orange { color: rgb(255, 153, 0); }

.ql-editor .ql-color-yellow { color: rgb(255, 255, 0); }

.ql-editor .ql-color-green { color: rgb(0, 138, 0); }

.ql-editor .ql-color-blue { color: rgb(0, 102, 204); }

.ql-editor .ql-color-purple { color: rgb(153, 51, 255); }

.ql-editor .ql-font-serif { font-family: Georgia, "Times New Roman", serif;=
 }

.ql-editor .ql-font-monospace { font-family: Monaco, "Courier New", monospa=
ce; }

.ql-editor .ql-size-small { font-size: 0.75em; }

.ql-editor .ql-size-large { font-size: 1.5em; }

.ql-editor .ql-size-huge { font-size: 2.5em; }

.ql-editor .ql-direction-rtl { direction: rtl; text-align: inherit; }

.ql-editor .ql-align-center { text-align: center; }

.ql-editor .ql-align-justify { text-align: justify; }

.ql-editor .ql-align-right { text-align: right; }

.ql-editor .ql-ui { position: absolute; }

.ql-editor.ql-blank::before { color: rgba(0, 0, 0, 0.6); content: attr(data=
-placeholder); font-style: italic; left: 15px; pointer-events: none; positi=
on: absolute; right: 15px; }
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://smiartist.my.canva.site/school-planner/_assets/289adb905fac282c.ltr.css

@charset "utf-8";

._94P4tA { outline: none; }

.theme { color-scheme: var(--4h-m_A); }

.light { --4h-m_A: light; --Zpa-KA: #00c4cc; --eGVbng: #8b3dff; --M5_pvA: #=
7731d8; --boKKWg: #612dae; --oqurdw: rgba(64,87,109,.07); --d1p99w: #fff; -=
-17LfHw: rgba(36,49,61,.4); --EgWgfg: rgba(13,18,22,0); --X3--Zg: rgba(64,8=
7,109,.07); --xfy86Q: rgba(57,76,96,.15); --p53f_Q: rgba(13,18,22,0); --REc=
Y5g: #0d1216; --XajtPQ: rgba(36,49,61,.4); --FVk7Ew: rgba(165,112,255,.15);=
 --2-zmYA: rgba(165,112,255,.15); --ySYdsQ: rgba(165,112,255,.2); --aMXh3A:=
 rgba(64,87,109,.07); --_RN1Dg: #612dae; --8fGzbw: rgba(36,49,61,.4); --ob8=
tTA: rgba(13,18,22,0); --MghLXQ: rgba(64,87,109,.07); --3R4u8w: rgba(57,76,=
96,.15); --TwiLcg: rgba(13,18,22,0); --QeQ0Dw: #0d1216; --TZOI7A: rgba(36,4=
9,61,.4); --SZMkXA: rgba(165,112,255,.15); --1zesEA: rgba(165,112,255,.15);=
 --AMxRgw: rgba(165,112,255,.2); --BZ60Jw: rgba(64,87,109,.07); --8Ex5gA: #=
612dae; --spIP2A: rgba(36,49,61,.4); --KtXlRg: rgba(17,23,29,.6); --QADODw:=
 rgba(13,18,22,.7); --kTBxcw: rgba(13,18,22,.86); --HxK_kw: rgba(17,23,29,.=
6); --6u-yJQ: #fff; --J0YKvA: hsla(0,0%,100%,.7); --yrvb-A: rgba(57,76,96,.=
15); --nwNs8w: rgba(43,59,74,.3); ---tf09g: rgba(57,76,96,.15); --x0GzuQ: r=
gba(57,76,96,.15); --VfoYEg: #fff; --nbAwww: hsla(0,0%,100%,.5); --Shm3YQ: =
rgba(64,87,109,.07); --z7Xq7A: rgba(57,76,96,.15); --m9sa8w: rgba(53,71,90,=
.2); --aj4L_w: rgba(64,87,109,.07); --pj2xMA: #0d1216; --3YOFOw: rgba(36,49=
,61,.4); --c23L8g: #8b3dff; --scq9vQ: #e7dbff; --feCw5g: #fff; --FMoRFg: #0=
d1216; --7psRVw: #008008; --QVtuYg: #36a137; --71VQUQ: #096d11; --Lf8mkA: r=
gba(64,87,109,.07); --Ii7YFw: #c3eac4; --W6KtsA: #fff; --WCLNrQ: #0d1216; -=
-Unijpw: rgba(36,49,61,.4); --DXueYw: #1962ff; --3KQj6A: #3d8bff; --Czi__Q:=
 #1855d8; ---vsWXQ: rgba(64,87,109,.07); --pYULlw: #cce1ff; --MjnIDA: #fff;=
 --v7HVIg: #0d1216; --vD3B3g: rgba(36,49,61,.4); --23ZOVQ: #ad5a00; --VbVKH=
g: #d17600; --zvQOHA: #944f05; --21KaLA: rgba(64,87,109,.07); --ydZUSA: #ff=
d9ad; --5uESMg: #fff; --OQ2gpA: #0d1216; --87SmIg: rgba(36,49,61,.4); --jTT=
_jQ: #db142c; --2hPbag: #fd4958; --nRrzRQ: #b61629; ---Xfh1Q: rgba(64,87,10=
9,.07); --1MO0IQ: #ffd6d8; --eLjurg: #fff; --fs4QpA: #0d1216; ---Evg2A: rgb=
a(36,49,61,.4); --Tp54Vw: #f0f1f5; --pf_JRQ: rgba(240,241,245,.7); --ys5XGg=
: rgba(240,241,245,0); --dVucJw: #f6f7f8; --u6VULg: rgba(246,247,248,.7); -=
-cm5OeQ: rgba(246,247,248,0); --C-q6Ig: #fff; --Pj6GZQ: hsla(0,0%,100%,.7);=
 --r6MHXQ: hsla(0,0%,100%,0); --4RaSjg: #fff; --F6F2NQ: hsla(0,0%,100%,.7);=
 --389KIw: hsla(0,0%,100%,0); --VNXpSw: #0d1216; --5F8MFw: rgba(13,18,22,.8=
6); --JEAqPw: rgba(13,18,22,.7); --3V_biw: rgba(17,23,29,.6); --P69qRQ: #00=
8008; --fg0S1Q: #1962ff; --MRX9rw: #ad5a00; --bk41Zw: #db142c; --kTTJvw: #b=
61629; --llP47A: #db142c; ---8UyGw: #8b3dff; ---1ShxA: #7731d8; --FFgy5g: #=
8b3dff; --Zya5eQ: rgba(53,71,90,.2); --9_Lxmw: rgba(28,39,48,.5); --xAYPzA:=
 #8b3dff; --VjFOWQ: rgba(57,76,96,.15); --nOtbOg: #db142c; --OuCkCQ: rgba(5=
7,76,96,.15); ---UopgA: rgba(28,39,48,.5); --620Maw: var(--Zya5eQ); --TBPmD=
Q: var(--xAYPzA); --UzSy6g: var(--VjFOWQ); --olfr3Q: rgba(28,39,48,.5); }

.dark { --4h-m_A: dark; --Zpa-KA: #00c4cc; --eGVbng: #8b3dff; --M5_pvA: #77=
31d8; --boKKWg: #612dae; --oqurdw: hsla(0,0%,100%,.07); --d1p99w: #fff; --1=
7LfHw: hsla(0,0%,100%,.4); --EgWgfg: hsla(0,0%,100%,0); --X3--Zg: hsla(0,0%=
,100%,.07); --xfy86Q: hsla(0,0%,100%,.15); --p53f_Q: hsla(0,0%,100%,0); --R=
EcY5g: #fff; --XajtPQ: hsla(0,0%,100%,.4); --FVk7Ew: rgba(165,112,255,.3); =
--2-zmYA: rgba(165,112,255,.3); --ySYdsQ: rgba(165,112,255,.2); --aMXh3A: h=
sla(0,0%,100%,.15); --_RN1Dg: #fff; --8fGzbw: hsla(0,0%,100%,.4); --ob8tTA:=
 hsla(0,0%,100%,0); --MghLXQ: hsla(0,0%,100%,.07); --3R4u8w: hsla(0,0%,100%=
,.15); --TwiLcg: hsla(0,0%,100%,0); --QeQ0Dw: #fff; --TZOI7A: hsla(0,0%,100=
%,.4); --SZMkXA: rgba(165,112,255,.3); --1zesEA: rgba(165,112,255,.3); --AM=
xRgw: rgba(165,112,255,.2); --BZ60Jw: hsla(0,0%,100%,.15); --8Ex5gA: #fff; =
--spIP2A: hsla(0,0%,100%,.4); --KtXlRg: rgba(17,23,29,.6); --QADODw: rgba(1=
3,18,22,.7); --kTBxcw: rgba(13,18,22,.86); --HxK_kw: rgba(17,23,29,.6); --6=
u-yJQ: #fff; --J0YKvA: hsla(0,0%,100%,.4); --yrvb-A: hsla(0,0%,100%,.15); -=
-nwNs8w: hsla(0,0%,100%,.3); ---tf09g: hsla(0,0%,100%,.15); --x0GzuQ: hsla(=
0,0%,100%,.15); --VfoYEg: #fff; --nbAwww: hsla(0,0%,100%,.4); --Shm3YQ: hsl=
a(0,0%,100%,.07); --z7Xq7A: hsla(0,0%,100%,.15); --m9sa8w: hsla(0,0%,100%,.=
2); --aj4L_w: hsla(0,0%,100%,.07); --pj2xMA: #fff; --3YOFOw: hsla(0,0%,100%=
,.4); --c23L8g: #8b3dff; --scq9vQ: #4a2e7f; --feCw5g: #fff; --FMoRFg: #fff;=
 --7psRVw: #008008; --QVtuYg: #36a137; --71VQUQ: #096d11; --Lf8mkA: hsla(0,=
0%,100%,.07); --Ii7YFw: #16461a; --W6KtsA: #fff; --WCLNrQ: #fff; --Unijpw: =
hsla(0,0%,100%,.4); --DXueYw: #1962ff; --3KQj6A: #3d8bff; --Czi__Q: #1855d8=
; ---vsWXQ: hsla(0,0%,100%,.07); --pYULlw: #1d3b7c; --MjnIDA: #fff; --v7HVI=
g: #fff; --vD3B3g: hsla(0,0%,100%,.4); --23ZOVQ: #ad5a00; --VbVKHg: #d17600=
; --zvQOHA: #944f05; --21KaLA: hsla(0,0%,100%,.07); --ydZUSA: #563715; --5u=
ESMg: #fff; --OQ2gpA: #fff; --87SmIg: hsla(0,0%,100%,.4); --jTT_jQ: #db142c=
; --2hPbag: #fd4958; --nRrzRQ: #b61629; ---Xfh1Q: hsla(0,0%,100%,.07); --1M=
O0IQ: #721d27; --eLjurg: #fff; --fs4QpA: #fff; ---Evg2A: hsla(0,0%,100%,.4)=
; --Tp54Vw: #0d1216; --pf_JRQ: rgba(13,18,22,.7); --ys5XGg: rgba(13,18,22,0=
); --dVucJw: #18191b; --u6VULg: rgba(24,25,27,.7); --cm5OeQ: rgba(24,25,27,=
0); --C-q6Ig: #18191b; --Pj6GZQ: rgba(24,25,27,.7); --r6MHXQ: rgba(24,25,27=
,0); --4RaSjg: #252627; --F6F2NQ: rgba(37,38,39,.7); --389KIw: rgba(37,38,3=
9,0); --VNXpSw: hsla(0,0%,100%,.9); --5F8MFw: hsla(0,0%,100%,.8); --JEAqPw:=
 hsla(0,0%,100%,.7); --3V_biw: hsla(0,0%,100%,.5); --P69qRQ: #61bd62; --fg0=
S1Q: #6ba9ff; --MRX9rw: #ec9909; --bk41Zw: #fd4958; --kTTJvw: #ff8088; --ll=
P47A: #fd4958; ---8UyGw: #a570ff; ---1ShxA: #bc97fc; --FFgy5g: #a570ff; --Z=
ya5eQ: hsla(0,0%,100%,.2); --9_Lxmw: hsla(0,0%,100%,.5); --xAYPzA: #a570ff;=
 --VjFOWQ: hsla(0,0%,100%,.15); --nOtbOg: #fd4958; --OuCkCQ: hsla(0,0%,100%=
,.15); ---UopgA: hsla(0,0%,100%,.4); --620Maw: var(--Zya5eQ); --TBPmDQ: var=
(--xAYPzA); --UzSy6g: var(--VjFOWQ); --olfr3Q: rgba(28,39,48,.5); }

._5_MXiw, .cD74fQ { position: relative; }

.cD74fQ { z-index: 0; }

._4A33GA { border: 8px solid rgb(255, 255, 255); image-rendering: pixelated=
; width: calc(100% - 16px); }

.dXLCMQ { border: none; width: 100%; }

.BMOCzQ { background-color: unset; border: 0px; box-sizing: border-box; lis=
t-style: none; margin: 0px; padding: 0px; }

.Nuu2Ig { justify-content: normal; }

.MYb60A { justify-content: center; }

.TjbMBg { justify-content: start; }

._WIyVQ { justify-content: flex-start; }

.Q8_z9Q { justify-content: end; }

.YgHDng { justify-content: flex-end; }

._1lVsiA { justify-content: space-between; }

.XJKpHg { align-items: stretch; }

.FQ64gg { align-items: center; }

.k3y7hg { align-items: start; }

.My5POw { align-items: flex-start; }

.YnRqTQ { align-items: end; }

.qF5pUA { align-items: flex-end; }

.ZoItOA { align-self: stretch; }

.F3q9DQ { align-self: center; }

.S_apYQ { align-self: start; }

.j0D3Ew { align-self: flex-start; }

.Q_CMqA { align-self: end; }

.hL0dIg { align-self: flex-end; }

.light { --xpFk1A: #f6f7f8; }

.dark { --xpFk1A: hsla(0,0%,100%,.15); }

.x1Lyuw { background-image: linear-gradient(45deg,var(--xpFk1A) 25%,transpa=
rent 25%),linear-gradient(-45deg,var(--xpFk1A) 25%,transparent 25%),linear-=
gradient(45deg,transparent 75%,var(--xpFk1A) 75%),linear-gradient(-45deg,tr=
ansparent 75%,var(--xpFk1A) 75%); background-position: 0px 0px, 0px 8px, 8p=
x -8px, -8px 0px; background-size: 16px 16px; }

.light { --Kd3K9A: #8b3dff; --DVEAGQ: #7630d7; --V0s6Og: #612dae; --PqRKXQ:=
 #fff; --R-jrhg: #0e131800; --GXtk9g: #40576d12; --xGXQgA: #394c6026; --oAd=
upw: #0e1318; --8-4niA: #35475a33; --wd-tZA: #0e131800; --ntzWpQ: #40576d12=
; --BorQ6g: #394c6026; --O8dBuQ: #0e1318; --EvA8JQ: #11171d99; --gIrJLw: #0=
e1318b2; --XxI4hg: #0d1216db; --SvgSpA: #11171d99; --N8Oz5g: #fff; --4zRigw=
: #ffffffb2; --wv7owA: #db142c; --m9I-bA: #b61629; --Hxdoag: #911826; --pxB=
f3A: #fff; --1sn2Sg: #a370fc26; --4HnQxA: #a370fc26; --NRjSsw: #a370fc33; -=
-GviWcg: #4a2e7e; --kl47TA: #8b3dff; --gFgXSg: #40576d12; --wBWOJg: #1c2730=
80; --BVrlVA: #394c6026; --KwfPsg: #0e131800; --p5yS_g: #1c273080; --jz0LSw=
: #008009; --CJur3Q: #fff; --UfNqTg: #c3eac4; --QcueGQ: #133416; --bdtRFA: =
#1a62ff; --YrdGEw: #fff; --_bpjsw: #cce1ff; --x3uTOw: #182c59; --Am6Phw: #a=
d5a00; --X8oIbA: #fff; --G_qVww: #ffd9ad; --HfWZ1A: #3e2a14; --43wRQw: #db1=
42c; --9luNoA: #fff; --qKGzFw: #ffd6d8; --CMMUiA: #501b21; --RzZG4Q: #8b3df=
f; --M8YsdQ: #fff; --xc412Q: #e7dbff; --XZIM8Q: #352459; --6Hmmng: #11171d9=
9; --SxhHZg: #fff; --3ifkTA: #fff; --W1_3nw: #40576d12; --igdHlg: #35475a33=
; --IzK8tQ: #1c273080; --_kLulA: #1c273080; --uHakiw: #8b3dff; --TCEPKw: #3=
94c6026; --BhjlKg: #db142c; --j6I-wg: #8b3dff; --I7Yc2g: #7630d7; --Mm01yw:=
 #612dae; --4sJsqA: #394c6026; --hBXVcA: #fff; --xcCO9w: #1c273080; --Wcghm=
A: #8b3dff; --ezSU3w: #fff; --ooFCBA: #c1c5cd; --8jnd6g: #8b3dff; ---2QwGw:=
 #7630d7; --KgLrHA: #612dae; --jDAtXQ: #1c273080; --FOH6ww: #db142c; --jyDi=
sg: #b61629; --QclmLg: #911826; --VcZbvQ: #0e1318; --UpESEg: #0d1216db; --P=
RQgyw: #0e1318b2; --TJtBjA: #11171d99; --vCqPYw: #008009; --NRkSiw: #db142c=
; --gdRMVA: #1a62ff; --cVPmKw: #ad5a00; --enMi_w: #394c6026; --4DkvNQ: #3d8=
bff; --xwa5zw: #394c6026; --2yga1g: #40576d12; --0ypBAQ: #35475a33; --P1hAv=
A: #24313d66; --1z_vxQ: #24313d66; }

.dark { --Kd3K9A: #8b3dff; --DVEAGQ: #7630d7; --V0s6Og: #612dae; --PqRKXQ: =
#fff; --R-jrhg: #ffffff00; --GXtk9g: #ffffff12; --xGXQgA: #ffffff26; --oAdu=
pw: #fff; --8-4niA: #ffffff33; --wd-tZA: #ffffff00; --ntzWpQ: #ffffff12; --=
BorQ6g: #ffffff26; --O8dBuQ: #fff; --EvA8JQ: #11171d99; --gIrJLw: #0e1318b2=
; --XxI4hg: #0d1216db; --SvgSpA: #11171d99; --N8Oz5g: #fff; --4zRigw: #ffff=
ffb2; --wv7owA: #db142c; --m9I-bA: #b61629; --Hxdoag: #911826; --pxBf3A: #f=
ff; --1sn2Sg: #a370fc4d; --4HnQxA: #a370fc4d; --NRjSsw: #a370fc33; --GviWcg=
: #fff; --kl47TA: #a370fc; --gFgXSg: #ffffff12; --wBWOJg: #ffffff80; --BVrl=
VA: #ffffff26; --KwfPsg: #ffffff00; --p5yS_g: #ffffff80; --jz0LSw: #008009;=
 --CJur3Q: #fff; --UfNqTg: #16461a; --QcueGQ: #fff; --bdtRFA: #1a62ff; --Yr=
dGEw: #fff; --_bpjsw: #1d3b7c; --x3uTOw: #fff; --Am6Phw: #ad5a00; --X8oIbA:=
 #fff; --G_qVww: #563715; --HfWZ1A: #fff; --43wRQw: #db142c; --9luNoA: #fff=
; --qKGzFw: #721d27; --CMMUiA: #fff; --RzZG4Q: #8b3dff; --M8YsdQ: #fff; --x=
c412Q: #4a2e7e; --XZIM8Q: #fff; --6Hmmng: #11171d99; --SxhHZg: #fff; --3ifk=
TA: #0e1318; --W1_3nw: #ffffff12; --igdHlg: #ffffff33; --IzK8tQ: #ffffff80;=
 --_kLulA: #1c273080; --uHakiw: #a370fc; --TCEPKw: #ffffff26; --BhjlKg: #fd=
4958; --j6I-wg: #8b3dff; --I7Yc2g: #7630d7; --Mm01yw: #612dae; --4sJsqA: #f=
fffff26; --hBXVcA: #fff; --xcCO9w: #ffffff80; --WcghmA: #a370fc; --ezSU3w: =
#fff; --ooFCBA: #47494d; --8jnd6g: #a370fc; ---2QwGw: #8b3dff; --KgLrHA: #a=
370fc; --jDAtXQ: #ffffff80; --FOH6ww: #fd4958; --jyDisg: #db142c; --QclmLg:=
 #fd4958; --VcZbvQ: #ffffffe5; --UpESEg: #ffffffcc; --PRQgyw: #ffffffb2; --=
TJtBjA: #ffffff80; --vCqPYw: #36a138; --NRkSiw: #fd4958; --gdRMVA: #3d8bff;=
 --cVPmKw: #d17600; --enMi_w: #ffffff26; --4DkvNQ: #3d8bff; --xwa5zw: #ffff=
ff26; --2yga1g: #ffffff12; --0ypBAQ: #ffffff33; --P1hAvA: #ffffff66; --1z_v=
xQ: #24313d66; }

.light { --iBIYpw: #f0f1f5; --Ypt7xQ: #fff; --LIE6Cw: #fff; --Ps9yUA: #fff;=
 --uU7oTw: 0px 0px 0px 0.5px #40576d12,0px 1px 2px 0px #182c5923,0px 2px 4p=
x 0px #182c5923; --galhog: 0px 0px 0px 0.5px #40576d12,0px 2px 4px 0px #182=
c5923,0px 6px 12px 0px #182c5912; --JF44pw: 0px 0px 0px 0.5px #40576d12,0px=
 8px 16px 0px #182c5923,0px 24px 24px 0px #182c5912; }

.dark { --iBIYpw: #0e1318; --Ypt7xQ: #18191b; --LIE6Cw: #202122; --Ps9yUA: =
#27282a; --uU7oTw: 0px 0.5px 0px 0px inset #ffffff12,0px 0px 0px 0.5px inse=
t #ffffff12,0px 1px 2px 0px #0000004d,0px 2px 4px 0px #0000004d; --galhog: =
0px 0.5px 0px 0px inset #ffffff12,0px 0px 0px 0.5px inset #ffffff12,0px 2px=
 4px 0px #0000004d,0px 4px 8px 0px #00000033; --JF44pw: 0px 0.5px 0px 0px i=
nset #ffffff12,0px 0px 0px 0.5px inset #ffffff12,0px 6px 12px 0px #0000004d=
,0px 24px 24px 0px #00000033; }

.i1Kwzg { background-color: var(--Tp54Vw); }

.zPPL6g { background-color: var(--dVucJw); }

.LgUr1Q { background-color: var(--C-q6Ig); }

.ESGcVw { background-color: var(--4RaSjg); }

.F6SHtg { background-color: var(--KtXlRg); color: var(--6u-yJQ); }

.zBi1vw { background-color: var(--yrvb-A); color: var(--VfoYEg); }

.Rs_tKg { background-color: var(--c23L8g); color: var(--feCw5g); }

.myvuYA { background-color: var(--7psRVw); color: var(--W6KtsA); }

.rgwUqw { background-color: var(--DXueYw); color: var(--MjnIDA); }

.xAPXoQ { background-color: var(--23ZOVQ); color: var(--5uESMg); }

.Az5YEQ { background-color: var(--jTT_jQ); color: var(--eLjurg); }

.jhljBg { background-color: var(--Shm3YQ); color: var(--pj2xMA); }

.XVipSQ { background-color: var(--scq9vQ); color: var(--FMoRFg); }

.sI2_9Q { background-color: var(--Ii7YFw); color: var(--WCLNrQ); }

.NUKeTg { background-color: var(--pYULlw); color: var(--v7HVIg); }

.WoF2rw { background-color: var(--ydZUSA); color: var(--OQ2gpA); }

._19NBqA { background-color: var(--1MO0IQ); color: var(--fs4QpA); }

._eD79w, .tyD8aA { color: var(--VcZbvQ); }

.tyD8aA { background-color: var(--iBIYpw); }

.ErJPMA { background-color: var(--Ypt7xQ); }

.ErJPMA, .c0EG6A { color: var(--VcZbvQ); }

.c0EG6A { background-color: var(--LIE6Cw); }

.sH7S_w { background-color: var(--Ps9yUA); color: var(--VcZbvQ); }

._7V4E4A { background-color: var(--2yga1g); color: var(--UpESEg); }

.KCsbQQ { background-color: var(--6Hmmng); color: var(--SxhHZg); }

.zD6b1w { background-color: var(--RzZG4Q); color: var(--M8YsdQ); }

.TcD_aA { background-color: var(--xc412Q); color: var(--XZIM8Q); }

.o0YYEw { background-color: var(--jz0LSw); color: var(--CJur3Q); }

.MgbtnA { background-color: var(--UfNqTg); color: var(--QcueGQ); }

.IIePHw { background-color: var(--bdtRFA); color: var(--YrdGEw); }

.cVcxYQ { background-color: var(--_bpjsw); color: var(--x3uTOw); }

.lCAPSQ { background-color: var(--Am6Phw); color: var(--X8oIbA); }

.AmLXDg { background-color: var(--G_qVww); color: var(--HfWZ1A); }

._9aYc7A { background-color: var(--43wRQw); color: var(--9luNoA); }

.dQ4dsw { background-color: var(--qKGzFw); color: var(--CMMUiA); }

.rCi29A { border-radius: 4px; }

.DL9KoQ { border-radius: 8px; }

._4zl_cQ { border-radius: 4px; }

.V9xfvg { border-radius: 8px; }

.GsIi1Q, ._33V9zw { border-radius: 12px; }

.g1WJ2g { border-radius: 16px; }

.IUu7Aw, .aysH_g { border-radius: 9999px; }

.tRjaYw { border-radius: 8px; }

._syqYQ { border-radius: 4px; }

.EIF_Bg { border-radius: 8px; }

.QQFTFg { border-radius: 12px; }

.SRINcQ { border-radius: 16px; }

.h54RrQ { border-radius: 12px; }

.C6oUyQ { border-radius: 16px; }

._3tecCQ { border-radius: 24px; }

._4tv94w { border: 1px solid var(--Zya5eQ); }

._8ofCoQ { border: 1px solid var(--nOtbOg); }

.WvC7Pg { border: 1px solid var(--OuCkCQ); }

._2_CDOA { border-top: 1px solid var(--Zya5eQ); }

.hqrL3g { border-top: 1px solid var(--nOtbOg); }

.Lg3wpw { border-top: 1px solid var(--OuCkCQ); }

.pC_IVw { border-top: none; }

.XQKGUw { border-bottom: 1px solid var(--Zya5eQ); }

.m2FTxA { border-bottom: 1px solid var(--nOtbOg); }

.r9m5QA { border-bottom: 1px solid var(--OuCkCQ); }

.qTxuVA { border-bottom: none; }

._4U9KeQ { border-left: 1px solid var(--Zya5eQ); }

.sM0Wzw { border-left: 1px solid var(--nOtbOg); }

.mEfUnQ { border-left: 1px solid var(--OuCkCQ); }

.RM3_kQ { border-left: none; }

._94pt3w { border-right: 1px solid var(--Zya5eQ); }

.YVw1eQ { border-right: 1px solid var(--nOtbOg); }

.ZUO7Pg { border-right: 1px solid var(--OuCkCQ); }

.GiYUqg { border-right: none; }

._6Mu4Ow { --s_rwAw: block; --SxQ6Sw: var(--s_rwAw); display: var(--SxQ6Sw)=
; }

@media (min-width: 600px) {
  ._6Mu4Ow { --zOX1XQ: var(--s_rwAw); --SxQ6Sw: var(--zOX1XQ); }
}

@media (min-width: 900px) {
  ._6Mu4Ow { --as7hUg: var(--zOX1XQ); --SxQ6Sw: var(--as7hUg); }
}

@media (min-width: 1200px) {
  ._6Mu4Ow { --kXeS7A: var(--as7hUg); --SxQ6Sw: var(--kXeS7A); }
}

@media (min-width: 1650px) {
  ._6Mu4Ow { --VZZcaw: var(--kXeS7A); --SxQ6Sw: var(--VZZcaw); }
}

.uN3EIA { --YRbscg: row; --zyHMJw: var(--YRbscg); flex-direction: var(--zyH=
MJw); }

@media (min-width: 600px) {
  .uN3EIA { --wRJ75A: var(--YRbscg); --zyHMJw: var(--wRJ75A); }
}

@media (min-width: 900px) {
  .uN3EIA { --TMclnQ: var(--wRJ75A); --zyHMJw: var(--TMclnQ); }
}

@media (min-width: 1200px) {
  .uN3EIA { --OFo3eA: var(--TMclnQ); --zyHMJw: var(--OFo3eA); }
}

@media (min-width: 1650px) {
  .uN3EIA { --dnYgsA: var(--OFo3eA); --zyHMJw: var(--dnYgsA); }
}

.dVqu4w { flex-wrap: nowrap; }

.pveEpQ { flex-wrap: wrap; }

.xIj74g { flex: initial; }

.hu5DGQ { flex: 1 1 auto; }

._6O8ZXw { flex: 0 0 auto; }

.LuBWVA { outline: none; }

.EC2pjw { --gms-pw: 0; --K2KHEw: var(--gms-pw); --TPsgaw: var(--K2KHEw); --=
Mekl7w: var(--TPsgaw); --Wk647Q: var(--K2KHEw); --X15W8A: var(--Wk647Q); --=
KtVHvQ: var(--X15W8A); --C1_mkw: var(--KtVHvQ); --WtUbjw: var(--X15W8A); --=
u2iVmg: var(--WtUbjw); --sW1q4A: var(--Mekl7w); --oqA4yg: var(--sW1q4A); --=
ICTGkg: var(--Mekl7w); --eA7tvg: var(--ICTGkg); padding: var(--C1_mkw) var(=
--eA7tvg) var(--u2iVmg) var(--oqA4yg); }

@media (min-width: 600px) {
  .EC2pjw { --Q-8Emw: var(--gms-pw); --K2KHEw: var(--Q-8Emw); --nz9hsg: var=
(--TPsgaw); --Mekl7w: var(--nz9hsg); --JmGtVw: var(--Wk647Q); --X15W8A: var=
(--JmGtVw); --PA24dg: var(--KtVHvQ); --C1_mkw: var(--PA24dg); --RqXq5w: var=
(--WtUbjw); --u2iVmg: var(--RqXq5w); --3B6sKw: var(--sW1q4A); --oqA4yg: var=
(--3B6sKw); --o5XTkw: var(--ICTGkg); --eA7tvg: var(--o5XTkw); }
}

@media (min-width: 900px) {
  .EC2pjw { --zP7nhA: var(--Q-8Emw); --K2KHEw: var(--zP7nhA); --qzBk5g: var=
(--nz9hsg); --Mekl7w: var(--qzBk5g); --EoUpRQ: var(--JmGtVw); --X15W8A: var=
(--EoUpRQ); --xjBzlA: var(--PA24dg); --C1_mkw: var(--xjBzlA); --B-z5rw: var=
(--RqXq5w); --u2iVmg: var(--B-z5rw); --RRW4Dw: var(--3B6sKw); --oqA4yg: var=
(--RRW4Dw); --W-Ed8g: var(--o5XTkw); --eA7tvg: var(--W-Ed8g); }
}

@media (min-width: 1200px) {
  .EC2pjw { --_lpgvw: var(--zP7nhA); --K2KHEw: var(--_lpgvw); --OX94wg: var=
(--qzBk5g); --Mekl7w: var(--OX94wg); --JL2GSQ: var(--EoUpRQ); --X15W8A: var=
(--JL2GSQ); --PTJJWA: var(--xjBzlA); --C1_mkw: var(--PTJJWA); --U3-cIw: var=
(--B-z5rw); --u2iVmg: var(--U3-cIw); --U-aFQw: var(--RRW4Dw); --oqA4yg: var=
(--U-aFQw); --SEaAcQ: var(--W-Ed8g); --eA7tvg: var(--SEaAcQ); }
}

@media (min-width: 1650px) {
  .EC2pjw { --Ki5L7Q: var(--_lpgvw); --K2KHEw: var(--Ki5L7Q); --WKVoBg: var=
(--OX94wg); --Mekl7w: var(--WKVoBg); --VTpDVA: var(--JL2GSQ); --X15W8A: var=
(--VTpDVA); --43j-jg: var(--PTJJWA); --C1_mkw: var(--43j-jg); --agG3uA: var=
(--U3-cIw); --u2iVmg: var(--agG3uA); --eji4Jg: var(--U-aFQw); --oqA4yg: var=
(--eji4Jg); --_gJ-qQ: var(--SEaAcQ); --eA7tvg: var(--_gJ-qQ); }
}

.bu_JgA { position: relative; }

._5DYjkQ { position: absolute; }

.TwIyqg { position: sticky; }

._4WqHSA { inset: 0px; }

.ZmEN8g { left: 0px; }

.HwOMuA { right: 0px; }

.EPf9bw { top: 0px; }

._5BaZ9A { bottom: 0px; }

.light { --wlsoXA: 0px 0px 0px 1px rgba(64,87,109,.04),0px 6px 20px -4px rg=
ba(64,87,109,.3); --ej6pBg: 0px 0px 0px 1px rgba(64,87,109,.04),0px 12px 40=
px -8px rgba(64,87,109,.3); --3LGewA: 0px 0px 0px 1px rgba(64,87,109,.04),0=
px 2px 4px -1px rgba(64,87,109,.3); }

.dark { --wlsoXA: 0px 0px 0px 1px #3b3c3d,0px 6px 20px -4px rgba(0,0,0,.45)=
; --ej6pBg: 0px 0px 0px 1px #3b3c3d,0px 12px 40px -8px rgba(0,0,0,.45); --3=
LGewA: 0px 0px 0px 1px #3b3c3d,0px 2px 4px -1px rgba(0,0,0,.45); }

.VnXh5Q { box-shadow: var(--wlsoXA); }

.crNGMQ { box-shadow: var(--ej6pBg); }

.rXzsBA { box-shadow: var(--wlsoXA); }

.D8KGAg { box-shadow: var(--ej6pBg); }

.teY_TQ { box-shadow: var(--3LGewA); }

.nX6ucw { box-shadow: var(--JF44pw); }

.DWbj1A { box-shadow: var(--galhog); }

._6w60mg { box-shadow: var(--uU7oTw); }

.fOwrSw { width: 100%; }

._8CKO_A { height: 100%; }

.iRA8VA { min-width: 0px; }

._1BdlIg { min-width: 44px; }

._6W88FA { min-height: 0px; }

.z44fNQ { min-height: 44px; }

.uhYhuQ { display: flex; flex-direction: column; justify-content: center; m=
in-width: 200px; position: relative; width: 100%; }

.uhYhuQ.cFgKZg { flex-grow: 1; }

.A_A_EQ._6NykrQ._9oNc7g .jHvOGA, .A_A_EQ._9nPhuA .jHvOGA { border-radius: 8=
px 8px 0px 0px; overflow: clip; }

.A_A_EQ._6NykrQ._9oNc7g .jHvOGA { padding-left: var(--32_B3g); padding-righ=
t: var(--32_B3g); }

.A_A_EQ.zHLcKw._9oNc7g .jHvOGA { padding-left: var(--gTQdWA); padding-right=
: var(--gTQdWA); }

.A_A_EQ.K8jPrA { --32_B3g: calc(var(--zfrIqg, 1)*var(--IASxjg, calc(8px * 1=
0))); --s5PtIA: calc(var(--zfrIqg, 1)*var(--Qh2GeQ, calc(8px * 3))); --jdVb=
7Q: calc(var(--zfrIqg, 1)*var(--jBkZgw)); --gTQdWA: calc((100% - var(--jdVb=
7Q))/2); --Z_w7Mg: calc(var(--jdVb7Q) + var(--32_B3g)*2); display: flex; fl=
ex-direction: column; position: relative; width: 100%; }

@supports (width:round(10px,5px)) {
  .A_A_EQ { --Z_w7Mg: round(up,calc(var(--jdVb7Q) + var(--32_B3g)*2),1px); =
}
}

.A_A_EQ.cFgKZg { flex-grow: 1; }

.A_A_EQ._6NykrQ._9oNc7g { margin: var(--Qh2GeQ,24px) 0; }

.A_A_EQ._9nPhuA { margin: 0px; }

.EY7A6g { background: var(--q_W0gA); }

.EY7A6g.fWBaaw { pointer-events: auto; }

.A_A_EQ._6NykrQ._9oNc7g .EY7A6g { margin: auto; }

.A_A_EQ._6NykrQ._9oNc7g .EY7A6g, .A_A_EQ._9nPhuA .EY7A6g { border-radius: 8=
px; box-shadow: rgba(64, 87, 109, 0.3) 0px 4px 32px -14px; width: var(--Z_w=
7Mg); }

.A_A_EQ._9nPhuA .EY7A6g { margin: 0px; min-height: calc(var(--Z_w7Mg)*var(-=
-8dk56g, 1.4)); }

.EY7A6g.K8jPrA { display: flex; flex-direction: column; }

.EY7A6g.cFgKZg { flex-grow: 1; }

.A_A_EQ.zHLcKw._9oNc7g .slEAMg { padding-left: var(--gTQdWA); padding-right=
: var(--gTQdWA); padding-top: calc(var(--32_B3g) + var(--s5PtIA)); width: 1=
00%; }

.A_A_EQ._6NykrQ._9oNc7g.PEJIJQ .slEAMg:not(._7Oe2g), .A_A_EQ._9nPhuA._9oNc7=
g.PEJIJQ .slEAMg:not(._7Oe2g), .A_A_EQ.zHLcKw._9oNc7g.PEJIJQ .slEAMg:not(._=
7Oe2g) { padding-top: var(--s5PtIA); }

.A_A_EQ._6NykrQ._9oNc7g .slEAMg { padding-left: var(--32_B3g); padding-righ=
t: var(--32_B3g); padding-top: var(--32_B3g); width: var(--Z_w7Mg); }

.A_A_EQ._6NykrQ .EY7A6g.DHLoHA, .A_A_EQ._6NykrQ._9oNc7g .slEAMg { min-heigh=
t: calc(var(--Z_w7Mg)*var(--8dk56g, 1.4)); }

.A_A_EQ._9nPhuA .slEAMg { padding-top: var(--32_B3g); }

.A_A_EQ._9nPhuA.PEJIJQ .slEAMg { padding-top: var(--s5PtIA); }

.A_A_EQ._9nPhuA .jHvOGA, .A_A_EQ._9nPhuA .slEAMg { padding-left: var(--32_B=
3g); padding-right: var(--32_B3g); }

.A_A_EQ.zHLcKw .slEAMg { box-sizing: border-box; height: 100%; }

.A_A_EQ._6NykrQ.hzDeOA .slEAMg, .A_A_EQ.zHLcKw.hzDeOA .slEAMg { padding-top=
: var(--s5PtIA); width: 100%; }

.A_A_EQ._6NykrQ.hzDeOA.qTk1Zw .jHvOGA, .A_A_EQ._6NykrQ.hzDeOA.qTk1Zw .slEAM=
g, .A_A_EQ.zHLcKw.hzDeOA.qTk1Zw .jHvOGA, .A_A_EQ.zHLcKw.hzDeOA.qTk1Zw .slEA=
Mg { padding-left: max(56px,var(--gTQdWA)); padding-right: max(56px,var(--g=
TQdWA)); }

.A_A_EQ._6NykrQ.hzDeOA.LVqQ8g .jHvOGA, .A_A_EQ._6NykrQ.hzDeOA.LVqQ8g .slEAM=
g, .A_A_EQ.zHLcKw.hzDeOA.LVqQ8g .jHvOGA, .A_A_EQ.zHLcKw.hzDeOA.LVqQ8g .slEA=
Mg { padding-left: max(var(--Qh2GeQ,24px),var(--gTQdWA)); padding-right: ma=
x(var(--Qh2GeQ,24px),var(--gTQdWA)); }

.A_A_EQ._6NykrQ.KZ_weQ .slEAMg, .A_A_EQ._9nPhuA.KZ_weQ .slEAMg, .A_A_EQ.zHL=
cKw.KZ_weQ .slEAMg { padding-bottom: var(--IASxjg,80px); }

.A_A_EQ._6NykrQ.nuG0Uw .slEAMg, .A_A_EQ._9nPhuA.nuG0Uw .slEAMg, .A_A_EQ.zHL=
cKw.nuG0Uw .slEAMg { padding-bottom: 320px; }

.A_A_EQ.iBLXgQ .jHvOGA, .A_A_EQ.iBLXgQ .slEAMg { margin: 0px; padding: 0px =
37px; }

.A_A_EQ.iBLXgQ .jHvOGA { padding-bottom: var(--Qh2GeQ,24px); }

.TemjbA { bottom: 0px; left: 0px; overflow: hidden; pointer-events: none; p=
osition: absolute; top: 0px; width: 100%; }

.A_A_EQ._6NykrQ._9oNc7g .TemjbA, .A_A_EQ._9nPhuA._9oNc7g .TemjbA { bottom: =
calc(var(--Qh2GeQ, calc(8px * 3))*-1); top: calc(var(--Qh2GeQ, calc(8px * 3=
))*-1); }

.FFdctA { height: 0px; overflow: visible; pointer-events: auto; position: a=
bsolute; }

.A_A_EQ.zHLcKw._9oNc7g .FFdctA { left: var(--gTQdWA); top: calc(var(--32_B3=
g) + var(--s5PtIA)); width: var(--jdVb7Q); }

.A_A_EQ._9nPhuA .FFdctA { left: var(--gTQdWA); top: var(--32_B3g); width: v=
ar(--jdVb7Q); }

.A_A_EQ.zHLcKw._9oNc7g.PEJIJQ .FFdctA { top: var(--s5PtIA); }

.A_A_EQ._6NykrQ._9oNc7g .FFdctA { left: var(--gTQdWA); top: calc(var(--32_B=
3g) + var(--Qh2GeQ, calc(8px * 3))); width: var(--jdVb7Q); }

.A_A_EQ._6NykrQ._9oNc7g.PEJIJQ .FFdctA, .A_A_EQ._9nPhuA._9oNc7g.PEJIJQ .FFd=
ctA { top: calc(var(--s5PtIA) + var(--Qh2GeQ, calc(8px * 3))); }

.A_A_EQ._6NykrQ.hzDeOA .FFdctA, .A_A_EQ.zHLcKw.hzDeOA .FFdctA { top: var(--=
s5PtIA); }

.A_A_EQ._6NykrQ.hzDeOA.qTk1Zw .FFdctA, .A_A_EQ.zHLcKw.hzDeOA.qTk1Zw .FFdctA=
 { left: max(56px,var(--gTQdWA)); width: calc(100% - max(calc(7 * 8px), var=
(--gTQdWA))*2); }

.A_A_EQ._6NykrQ.hzDeOA.LVqQ8g .FFdctA, .A_A_EQ.zHLcKw.hzDeOA.LVqQ8g .FFdctA=
 { left: max(var(--Qh2GeQ,24px),var(--gTQdWA)); width: calc(100% - var(--M4=
QwMQ)*2); }

.GWlkzQ { height: 0px; overflow: visible; position: absolute; width: 56px; =
}

.A_A_EQ.zHLcKw._9oNc7g .GWlkzQ { right: calc(var(--gTQdWA) - 64px); top: ca=
lc(var(--32_B3g) + var(--s5PtIA)); }

.A_A_EQ.zHLcKw._9oNc7g.PEJIJQ .GWlkzQ { top: var(--s5PtIA); }

.A_A_EQ._6NykrQ._9oNc7g .GWlkzQ { left: calc(50% + var(--jdVb7Q)/2 + var(--=
32_B3g)); top: var(--32_B3g); }

.A_A_EQ._6NykrQ._9oNc7g.PEJIJQ .GWlkzQ { top: var(--s5PtIA); }

.A_A_EQ._9nPhuA .GWlkzQ { left: calc(50% + var(--jdVb7Q)/2 + var(--32_B3g))=
; top: var(--32_B3g); }

.A_A_EQ._9nPhuA.PEJIJQ .GWlkzQ { top: var(--s5PtIA); }

.A_A_EQ._6NykrQ.hzDeOA.qTk1Zw .GWlkzQ, .A_A_EQ.zHLcKw.hzDeOA.qTk1Zw .GWlkzQ=
 { right: calc(max(calc(7 * 8px), var(--gTQdWA)) - 64px); top: var(--s5PtIA=
); }

.A_A_EQ._6NykrQ.hzDeOA.LVqQ8g .GWlkzQ, .A_A_EQ.zHLcKw.hzDeOA.LVqQ8g .GWlkzQ=
 { right: max(calc(var(--Qh2GeQ, calc(8px * 3)) - 64px),calc(var(--gTQdWA) =
- 64px)); top: var(--s5PtIA); }

.A_A_EQ._9nPhuA.hzDeOA .GWlkzQ { right: 0px; top: var(--s5PtIA); }

.A_A_EQ.iBLXgQ .GWlkzQ { right: 0px; top: 0px; }

.A_A_EQ._6NykrQ.MLv4rg, .A_A_EQ._9nPhuA.MLv4rg, .A_A_EQ.zHLcKw.MLv4rg { opa=
city: 0; }

.EDGwhw, .IjTKUQ { opacity: 1; }

.gBoeXQ { transition: opacity 0.3s ease-out 0s; }

._2nE4kg, ._yjJvw, .gBoeXQ, .tC7HEQ { opacity: 0; }

.AtqzOQ { transition: opacity 0.3s ease-in 0s; }

.AtqzOQ, .vMUaZQ { opacity: 1; }

.A_A_EQ .EY7A6g .slEAMg._7Oe2g { box-sizing: border-box; }

.EDGwhw { height: 0px; }

.T_7v4w { width: 70%; }

.Ebvt8Q { width: 80%; }

@font-face { font-display: swap; font-family: "Canva Sans"; font-style: nor=
mal; font-weight: 400 700; src: url("images/a9b8e7902ec1ab885d382156f33738e=
5.woff2") format("woff2"), url("images/013277426f0d555d96c7a75503df5754.wof=
f") format("woff"); unicode-range: U+B1-B3, U+B9, U+BC-BE, U+394, U+3A9, U+=
3BC, U+3C0, U+2044, U+2070, U+2074-2089, U+2126, U+212E, U+2153-2154, U+215=
B-215E, U+2202, U+2206, U+220F, U+2211-2212, U+2215, U+2219, U+221A, U+221E=
, U+222B, U+2248, U+2260, U+2264-2265, U+25CA; }

@font-face { font-display: swap; font-family: "Canva Sans"; font-style: nor=
mal; font-weight: 400 700; src: url("images/d97a6ffa507b670a5b1664f98fc1183=
d.woff2") format("woff2"), url("images/1de7434d86166b0614ff3d61cda11a54.wof=
f") format("woff"); unicode-range: U+A1, U+AA-AB, U+AF, U+B8, U+BA-BB, U+BF=
, U+C0-D6, U+D8-F6, U+F8-148, U+14A-17E, U+192, U+1B5-1B6, U+1FC-1FD, U+218=
-21B, U+237, U+2C6-2C7, U+2C9, U+2D8-2DD, U+1E80-1E85, U+1E9E, U+1EF2-1EF3,=
 U+2030, U+2039-203A, U+20AC, U+20BA, U+2113; }

@font-face { font-display: swap; font-family: "Canva Sans"; font-style: nor=
mal; font-weight: 400 700; src: url("images/cff149ee1e9d2be50ac77bcd86769d0=
5.woff2") format("woff2"), url("images/f93a5165fac252ecfd593929c4e6146f.wof=
f") format("woff"); unicode-range: U+20-7E, U+A0, U+A2-A9, U+AC-AE, U+B0, U=
+B4-B7, U+D7, U+F7, U+300-304, U+306-308, U+30A-30C, U+312, U+326-328, U+20=
13-2014, U+2018-201A, U+201C-201E, U+2020-2022, U+2026, U+2117, U+2120, U+2=
122, U+2190-2199, U+FB01-FB02, U+FEFF, U+FFFC-FFFD; }

@font-face { font-display: swap; font-family: "Noto Sans Variable"; font-st=
yle: normal; font-weight: 125 950; src: url("images/621675e6be83f675d33562d=
2ff7a0f63.woff2") format("woff2"); unicode-range: U+600-6FF; }

@font-face { font-display: swap; font-family: "Noto Sans Variable"; font-st=
yle: normal; font-weight: 125 950; src: url("images/762fe37b99d49707e783d62=
81412d12f.woff2") format("woff2"); unicode-range: U+590-5FF; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 400; src: url("images/d83221ee6a6841b17a754f68b6c5a3de.wof=
f2") format("woff2"); unicode-range: U+900-97F; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 600; src: url("images/e237b20d624e9275cdc02a523ab7f983.wof=
f2") format("woff2"); unicode-range: U+900-97F; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 700; src: url("images/3b5447850810ff964de17bcd37e03d5a.wof=
f2") format("woff2"); unicode-range: U+900-97F; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 400; src: url("images/a13025bc22c0d623507f155005c54563.wof=
f2") format("woff2"), url("images/ad480883f297c3606af00979ee4c4483.woff") f=
ormat("woff"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, =
U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 600; src: url("images/477aad26d9a5a64609483931aa0a7a05.wof=
f2") format("woff2"), url("images/0e2be7bf67e32755fd73a605a2afd13b.woff") f=
ormat("woff"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, =
U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 700; src: url("images/85b2d625d97d50571765987bbac33850.wof=
f2") format("woff2"), url("images/3f03afd80eaf13ee58a7d0945b7d0963.woff") f=
ormat("woff"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, =
U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 400; src: url("images/02bba2de1b5f7fc3b564b21521e774d0.wof=
f2") format("woff2"), url("images/163124370f3e2ded710887a156ab3fa3.woff") f=
ormat("woff"); unicode-range: U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 600; src: url("images/0b41617d3a05bbbe23065ec719e26fd1.wof=
f2") format("woff2"), url("images/650cef2d886ef4ca5c18d3c107546daf.woff") f=
ormat("woff"); unicode-range: U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 700; src: url("images/d4b0974727cae80b9c6d087e56a9a4e4.wof=
f2") format("woff2"), url("images/771cbf29ddc3145dda326afee4b10fb8.woff") f=
ormat("woff"); unicode-range: U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 400; src: url("images/6c9b9f4b28322c7473667e0fc1690675.wof=
f2") format("woff2"), url("images/79359a454d1de78942f3c2c687fc67ea.woff") f=
ormat("woff"); unicode-range: U+1F00-1FFF; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 600; src: url("images/a8f52f1cd47135bfc86b1f313868708d.wof=
f2") format("woff2"), url("images/e3e13973dcf74ace522a4b8ef447a7de.woff") f=
ormat("woff"); unicode-range: U+1F00-1FFF; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 700; src: url("images/ca4237378da57e1e318978281e7fee60.wof=
f2") format("woff2"), url("images/d7669ff2d0106ad99a7a55c4d540478c.woff") f=
ormat("woff"); unicode-range: U+1F00-1FFF; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 400; src: url("images/d56fc13fe0dc1327dceed816b07dbec3.wof=
f2") format("woff2"), url("images/311ec631b3b3a7f88c724351af8bcef4.woff") f=
ormat("woff"); unicode-range: U+370-3FF; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 600; src: url("images/c9972caeca3358fa2841a115105a8544.wof=
f2") format("woff2"), url("images/c3a91206711602c9b5f54e9514244e64.woff") f=
ormat("woff"); unicode-range: U+370-3FF; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 700; src: url("images/dafb7fee1db6b7ae9b1184239b11acf5.wof=
f2") format("woff2"), url("images/d6cbb5c42a1149e38e1fb7a238032bc8.woff") f=
ormat("woff"); unicode-range: U+370-3FF; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 400; src: url("images/964b01a520402dcf8405de90289c35f4.wof=
f2") format("woff2"), url("images/4badd42f0e1cdba66ffbd5cc91aa4365.woff") f=
ormat("woff"); unicode-range: U+17F, U+1F0, U+1FA-1FB, U+1FE-1FF, U+1E00-1E=
01, U+1E3E-1E3F; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 600; src: url("images/58cf708f2cc4d2b3bbf7e6add25f5c20.wof=
f2") format("woff2"), url("images/4f9f09e9c9bc053cc21f7cf7f5590904.woff") f=
ormat("woff"); unicode-range: U+17F, U+1F0, U+1FA-1FB, U+1FE-1FF, U+1E00-1E=
01, U+1E3E-1E3F; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 700; src: url("images/4bdcf0ce1296b448409c024e57fdcdb9.wof=
f2") format("woff2"), url("images/005dabb12cdb5c5deabd1782c3ff196d.woff") f=
ormat("woff"); unicode-range: U+17F, U+1F0, U+1FA-1FB, U+1FE-1FF, U+1E00-1E=
01, U+1E3E-1E3F; }

@font-face { font-display: swap; font-family: "Noto Sans Vietnamese"; font-=
style: normal; font-weight: 400; src: url("images/f4113bb9d3def37ca7f5c7cd2=
341ec33.woff2") format("woff2"), url("images/614a39a4813512a63e905b12dc5f41=
ba.woff") format("woff"); unicode-range: U+20-5F, U+61-7A, U+7C, U+A0, U+A7=
, U+A9, U+C0-C3, U+C8-CA, U+CC-CD, U+D2-D5, U+D9-DA, U+DD, U+E0-E3, U+E8-EA=
, U+EC-ED, U+F2-F5, U+F9-FA, U+FD, U+102-103, U+110-111, U+128-129, U+168-1=
69, U+1A0-1A1, U+1AF-1B0, U+300-303, U+306, U+309, U+31B, U+323, U+1EA0-1EF=
9, U+2010-2011, U+2013-2014, U+2018-2019, U+201C-201D, U+2020-2021, U+2026,=
 U+2030, U+20AB; }

@font-face { font-display: swap; font-family: "Noto Sans Vietnamese"; font-=
style: normal; font-weight: 600; src: url("images/5989cf357de7427311e305768=
91372df.woff2") format("woff2"), url("images/b3571e313b47ed988fc8429322af76=
77.woff") format("woff"); unicode-range: U+20-5F, U+61-7A, U+7C, U+A0, U+A7=
, U+A9, U+C0-C3, U+C8-CA, U+CC-CD, U+D2-D5, U+D9-DA, U+DD, U+E0-E3, U+E8-EA=
, U+EC-ED, U+F2-F5, U+F9-FA, U+FD, U+102-103, U+110-111, U+128-129, U+168-1=
69, U+1A0-1A1, U+1AF-1B0, U+300-303, U+306, U+309, U+31B, U+323, U+1EA0-1EF=
9, U+2010-2011, U+2013-2014, U+2018-2019, U+201C-201D, U+2020-2021, U+2026,=
 U+2030, U+20AB; }

@font-face { font-display: swap; font-family: "Noto Sans Vietnamese"; font-=
style: normal; font-weight: 700; src: url("images/5d050a324d95a6a18dae93e08=
c01bd6b.woff2") format("woff2"), url("images/08f3a04653878f9b2369ec3c327d7c=
46.woff") format("woff"); unicode-range: U+20-5F, U+61-7A, U+7C, U+A0, U+A7=
, U+A9, U+C0-C3, U+C8-CA, U+CC-CD, U+D2-D5, U+D9-DA, U+DD, U+E0-E3, U+E8-EA=
, U+EC-ED, U+F2-F5, U+F9-FA, U+FD, U+102-103, U+110-111, U+128-129, U+168-1=
69, U+1A0-1A1, U+1AF-1B0, U+300-303, U+306, U+309, U+31B, U+323, U+1EA0-1EF=
9, U+2010-2011, U+2013-2014, U+2018-2019, U+201C-201D, U+2020-2021, U+2026,=
 U+2030, U+20AB; }

._11DV9Q { -webkit-font-smoothing: antialiased; }

.fUFQXw { margin: 0px; overflow-wrap: break-word; }

.Je1eGw { -webkit-box-orient: vertical; display: -webkit-box; overflow: hid=
den; }

.bG0Uaw { text-wrap: balance; }

.lWke4A { text-wrap: pretty; }

.snQKTg { display: block; max-width: 100%; overflow: hidden; text-overflow:=
 ellipsis; white-space: nowrap; }

.mKhvSg { user-select: text; }

.MHu4Kw { text-transform: uppercase; }

.xKgPgA { outline: none; }

._7ATl0g, ._8yjy_A, .iXAxTg, .tIMMkQ { font-feature-settings: "ss02", "ss03=
"; font-variation-settings: "opsz" 100; }

._5Gynyg, .liTStw, .zB3q8Q { font-variation-settings: "opsz" 0; }

._5Gynyg, ._7ATl0g, ._8yjy_A, .iXAxTg, .liTStw, .tIMMkQ, .zB3q8Q { -webkit-=
font-smoothing: antialiased; text-size-adjust: none; font-family: "Canva Sa=
ns", "Noto Sans Variable", "Noto Sans", -apple-system, BlinkMacSystemFont, =
"Segoe UI", Helvetica, Arial, sans-serif; font-weight: 700; margin: 0px; ov=
erflow-wrap: break-word; }

[lang|=3D"vi"] .Gmat4w, [lang|=3D"vi"] .JYIidw, [lang|=3D"vi"] .VgvqkQ, [la=
ng|=3D"vi"] ._2a6tNg, [lang|=3D"vi"] ._5Gynyg, [lang|=3D"vi"] ._7ATl0g, [la=
ng|=3D"vi"] ._7yv_Gw, [lang|=3D"vi"] ._8yjy_A, [lang|=3D"vi"] .aWBg0w, [lan=
g|=3D"vi"] .c74n_Q, [lang|=3D"vi"] .iXAxTg, [lang|=3D"vi"] .jqn1OA, [lang|=
=3D"vi"] .liTStw, [lang|=3D"vi"] .nbfwjw, [lang|=3D"vi"] .qXoAGw, [lang|=3D=
"vi"] .tIMMkQ, [lang|=3D"vi"] .zB3q8Q { font-family: "Noto Sans Vietnamese"=
, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-ser=
if; }

.tIMMkQ { font-size: calc(var(----lgQg, .1rem)*8/8*64); line-height: calc(v=
ar(----lgQg, .1rem)*8/8*84); }

.iXAxTg { font-size: calc(var(----lgQg, .1rem)*8/8*48); line-height: calc(v=
ar(----lgQg, .1rem)*8/8*64); }

._8yjy_A { font-size: calc(var(----lgQg, .1rem)*8/8*32); line-height: calc(=
var(----lgQg, .1rem)*8/8*42); }

._7ATl0g { font-size: calc(var(----lgQg, .1rem)*8/8*24); line-height: calc(=
var(----lgQg, .1rem)*8/8*32); }

._5Gynyg { font-size: calc(var(----lgQg, .1rem)*8/8*18); line-height: calc(=
var(----lgQg, .1rem)*8/8*24); }

.liTStw { font-size: calc(var(----lgQg, .1rem)*8/8*14); font-weight: 700; l=
ine-height: calc(var(----lgQg, .1rem)*8/8*20); }

.zB3q8Q { font-size: calc(var(----lgQg, .1rem)*8/8*12); font-weight: 600; l=
ine-height: calc(var(----lgQg, .1rem)*8/8*18); }

.Gmat4w, .JYIidw, .VgvqkQ, ._2a6tNg, ._7yv_Gw, .aWBg0w, .c74n_Q, .jqn1OA, .=
nbfwjw, .qXoAGw { -webkit-font-smoothing: antialiased; text-size-adjust: no=
ne; font-family: "Canva Sans", "Noto Sans Variable", "Noto Sans", -apple-sy=
stem, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif; font-va=
riation-settings: "opsz" 0; font-weight: 400; margin: 0px; overflow-wrap: b=
reak-word; }

.Gmat4w { font-size: calc(var(----lgQg, .1rem)*8/8*24); line-height: calc(v=
ar(----lgQg, .1rem)*8/8*36); }

._7yv_Gw { font-size: calc(var(----lgQg, .1rem)*8/8*21); line-height: calc(=
var(----lgQg, .1rem)*8/8*32); }

.jqn1OA, .qXoAGw { font-size: calc(var(----lgQg, .1rem)*8/8*16); line-heigh=
t: calc(var(----lgQg, .1rem)*8/8*26); }

.VgvqkQ, .aWBg0w { font-size: calc(var(----lgQg, .1rem)*8/8*14); line-heigh=
t: calc(var(----lgQg, .1rem)*8/8*22); }

.JYIidw, ._2a6tNg { font-size: calc(var(----lgQg, .1rem)*8/8*12); line-heig=
ht: calc(var(----lgQg, .1rem)*8/8*20); }

.c74n_Q, .nbfwjw { font-size: calc(var(----lgQg, .1rem)*8/8*11); font-weigh=
t: 600; letter-spacing: calc(var(----lgQg, .1rem)*8/8*.1); line-height: cal=
c(var(----lgQg, .1rem)*8/8*16); }

.VgvqkQ, .aWBg0w b, .aWBg0w strong, .jqn1OA b, .jqn1OA strong, .qXoAGw { fo=
nt-weight: 600; }

.VgvqkQ b, .VgvqkQ strong { font-weight: 700; }

.JYIidw b, .JYIidw strong, ._2a6tNg { font-weight: 600; }

.c74n_Q, .nbfwjw b, .nbfwjw strong { font-weight: 700; }

@media (max-width: 599px) {
  .tIMMkQ { font-size: calc(var(----lgQg, .1rem)*8/8*48); line-height: calc=
(var(----lgQg, .1rem)*8/8*64); }
  .iXAxTg { font-size: calc(var(----lgQg, .1rem)*8/8*32); line-height: calc=
(var(----lgQg, .1rem)*8/8*42); }
  ._8yjy_A { font-size: calc(var(----lgQg, .1rem)*8/8*24); line-height: cal=
c(var(----lgQg, .1rem)*8/8*32); }
  ._7ATl0g { font-size: calc(var(----lgQg, .1rem)*8/8*20); line-height: cal=
c(var(----lgQg, .1rem)*8/8*26); }
  ._5Gynyg { font-size: calc(var(----lgQg, .1rem)*8/8*16); line-height: cal=
c(var(----lgQg, .1rem)*8/8*24); }
  .Gmat4w { font-size: calc(var(----lgQg, .1rem)*8/8*21); line-height: calc=
(var(----lgQg, .1rem)*8/8*32); }
  ._7yv_Gw { font-size: calc(var(----lgQg, .1rem)*8/8*18); line-height: cal=
c(var(----lgQg, .1rem)*8/8*28); }
}

.V5s4kA:not(:last-child) { margin-bottom: 8px; }

.VFEjzg { text-align: inherit; }

.aZskFA { text-align: start; }

.B8t6MQ { text-align: center; }

._5NNwYA { text-align: end; }

._6Qh8tg { ---oI_WA: start; --9tGPDg: var(---oI_WA); text-align: var(--9tGP=
Dg); }

@media (min-width: 600px) {
  ._6Qh8tg { --JYyxTg: var(---oI_WA); --9tGPDg: var(--JYyxTg); }
}

@media (min-width: 900px) {
  ._6Qh8tg { --_mu1OA: var(--JYyxTg); --9tGPDg: var(--_mu1OA); }
}

@media (min-width: 1200px) {
  ._6Qh8tg { --xbU4Pw: var(--_mu1OA); --9tGPDg: var(--xbU4Pw); }
}

@media (min-width: 1650px) {
  ._6Qh8tg { --Y10-TA: var(--xbU4Pw); --9tGPDg: var(--Y10-TA); }
}

.u16U_g { color: var(--VcZbvQ); }

.Ywwu0g { color: var(--UpESEg); }

.QxuLlQ { color: var(--PRQgyw); }

.mHp84g { color: var(--NRkSiw); }

.NYWksw { color: var(--gdRMVA); }

.XO4CLg { color: var(--cVPmKw); }

.JLdG4g { color: var(--vCqPYw); }

.T5LNnw { color: inherit; }

@keyframes c2cyRQ {=20
  0% { opacity: 0.07; }
  25% { opacity: 0.05; }
  50% { opacity: 0.07; }
  100% { opacity: 0.07; }
}

.SROlBg { height: calc(var(----lgQg, .1rem)*8/8*64); padding: calc(var(----=
lgQg, .1rem)*8/8*84/2 - var(----lgQg, .1rem)*8/8*64/2) 0; }

.sYjZCQ { height: calc(var(----lgQg, .1rem)*8/8*21); padding: calc(var(----=
lgQg, .1rem)*8/8*32/2 - var(----lgQg, .1rem)*8/8*21/2) 0; }

@media belowsmall {
  .SROlBg { height: calc(var(----lgQg, .1rem)*8/8*32); padding: calc(var(--=
--lgQg, .1rem)*8/8*64/2 - var(----lgQg, .1rem)*8/8*32/2) 0; }
  .sYjZCQ { height: calc(var(----lgQg, .1rem)*8/8*21); padding: calc(var(--=
--lgQg, .1rem)*8/8*32/2 - var(----lgQg, .1rem)*8/8*21/2) 0; }
}

.Ixaoug { background: rgb(13, 18, 22); opacity: 0.07; }

.a8K2Rw { animation: 1.4s ease 0s infinite normal none running c2cyRQ; }

.ZxLskw { height: 100%; width: 100%; }

.ZxLskw, .yJ_zuQ { border-radius: 8px; }

.ag9i9g { display: inline-block; width: 100%; }

.ag9i9g::selection { background: transparent; }

.ql-editor > * { cursor: unset; }

.GSyGMg { position: relative; }

.gk5wYw { display: block; }

.M3AzBQ { display: inline-block; max-width: 100%; }

@media print {
  ._0Fivzw { break-inside: avoid-page; }
}

.wa4m_A .ql-editor { --_d_pTQ: #e7dbff; }

.wa4m_A .ql-editor .inlineElement[class*=3D"comment-"].RCupPw { background-=
color: var(--_d_pTQ,#e7dbff); border-bottom: 2px solid rgb(139, 61, 255); }

.wa4m_A .ql-editor .blockEmbed:not(.blotPageBreakItem)[class*=3D"item-comme=
nt-"] > .ag9i9g.RCupPw > .GSyGMg { outline: 8px solid var(--_d_pTQ,#e7dbff)=
; }

.E8r86A, .cXTiJA { display: flex; justify-content: center; }

.cXTiJA { align-items: center; width: 100%; }

.SNkrHw, .W1ir5A, .cXTiJA { position: relative; }

.SNkrHw { height: 100%; width: 100%; }

._2JFriw, ._5YlOqQ, ._XCmKw, .imy9ug { position: absolute; }

.imy9ug { clip-path: inset(0px); }

.pDMp7w { box-sizing: border-box; font-family: "Canva Sans", "Noto Sans Var=
iable", "Noto Sans", -apple-system, BlinkMacSystemFont, "Segoe UI", Helveti=
ca, Arial, sans-serif; height: 100%; position: absolute; }

.RaA0Nw .pDMp7w, .RaA0Nw .wKvivQ { user-select: text; }

._30B9pw { align-items: flex-start; display: flex; justify-content: inherit=
; min-height: 100%; text-align: inherit; text-overflow: clip; width: 100%; =
}

.G7zH2w { display: contents; }

.qhF5uA { font-feature-settings: "kern" 0, "calt" 0, "liga" 0, "clig" 0, "d=
lig" 0, "hlig" 0; -webkit-font-smoothing: antialiased; text-size-adjust: no=
ne; font-family: unset; font-kerning: none; font-synthesis: none; font-vari=
ant-ligatures: none; letter-spacing: 0px; line-height: 1.4; word-break: nor=
mal; }

.TA4X7w ._2JFriw, .TA4X7w .imy9ug { transform-origin: 0px 0px; }

.WvuqMw ._2JFriw, .WvuqMw .imy9ug { transform-origin: 100% 0px; }

.TA4X7w { direction: ltr; }

.WvuqMw { direction: rtl; }

.qxD1GA { background-color: var(--1MO0IQ); outline: 4px solid var(--jTT_jQ)=
; outline-offset: -4px; }

.SNkrHw:not(.RaA0Nw) .wKvivQ { pointer-events: none; }

.OQx3PQ span { text-decoration-line: underline; }

._99ezUA span { text-decoration-line: line-through; }

.kppAqQ span { text-decoration-line: underline line-through; }

.ZTz_iA { display: grid; grid-template: "fixed-pane row-freeze-pane" "col-f=
reeze-pane unfrozen-pane" 1fr / auto 1fr; }

.ZTz_iA, .i0YQww, .vUKoKg { position: relative; }

.vUKoKg { overflow: hidden; }

._0C8M3w { grid-area: fixed-pane; z-index: 2; }

._7n44yg { grid-area: row-freeze-pane; z-index: 1; }

.fF5r6w { grid-area: col-freeze-pane; z-index: 1; }

.llILYw { grid-area: unfrozen-pane; }

._84KvRA { display: none; }

.BghEng, .TL_RLA { pointer-events: none; }

.BghEng { left: 0px; opacity: 0; overflow: visible; position: fixed; top: 0=
px; width: 100%; }

._682gpw { -webkit-user-drag: none; -webkit-tap-highlight-color: transparen=
t; }

._7vS1Yw { user-select: none; }

.DF_utQ { cursor: auto; outline: none; position: absolute; }

.DF_utQ:hover { cursor: unset; }

.UYkI3g { will-change: transform; }

.Lj8ZqQ { display: none; }

._lzXBg { overflow: hidden; }

._0xkaeQ { pointer-events: auto; }

.eYn1AQ { overflow: hidden; pointer-events: none; position: absolute; }

.JpiJcw { pointer-events: auto; }

._3zDNwA { left: 0px; position: absolute; top: 0px; }

._3zDNwA, ._KMJVg { display: block; height: 100%; width: 100%; }

.Ms_IOA { inset: 0px; position: absolute; }

.E2PFKw { animation-fill-mode: forwards; animation-name: _5Wn9Ig; opacity: =
0; }

@keyframes _5Wn9Ig {=20
  100% { opacity: 1; }
}

.light { --Xj4qXA: 0.07; --CAzrpw: 0.025; }

.dark { --Xj4qXA: 0.15; --CAzrpw: 0.10; }

@keyframes _5bz7wQ {=20
  0% { opacity: var(--Xj4qXA); }
  25% { opacity: var(--CAzrpw); }
  50% { opacity: var(--Xj4qXA); }
  100% { opacity: var(--Xj4qXA); }
}

.IwXXkw { background: var(--VcZbvQ); opacity: var(--Xj4qXA); }

._qImYg { animation: 1.4s ease 0s infinite normal none running _5bz7wQ; }

.RCTcJA { border-radius: 9999px; }

.KOdbkg, .RCTcJA { padding-top: 100%; width: 100%; }

.KOdbkg, ._CObZw { border-radius: 8px; }

._CObZw { height: 100%; width: 100%; }

.JbJFjg { border-radius: 0px; }

.cg8IZQ { border-radius: 8px; }

.DUDBPQ { position: relative; }

.oFR_Ag { opacity: 1; position: absolute; top: 0px; width: 100%; }

.S0zE2Q, .SK4LUw { opacity: 0; }

.jg_SuQ { opacity: 1; }

.SK4LUw, .oFR_Ag { transition: opacity 0.1s ease-in-out 0s; }

.eueQpQ .SK4LUw, .eueQpQ .oFR_Ag { transition: opacity 0.7s cubic-bezier(0.=
4, 0, 0.2, 1) 0s; }

.qyOqcQ { height: 100%; width: 100%; }

.JIOUKA { display: flex; flex: 1 1 0%; min-height: 0px; min-width: 0px; wid=
th: 100%; }

.J3ejgA { overflow-x: auto; }

.KCCYFA { display: block; }

@media print {
  .KCCYFA { position: absolute; }
}

._pFsfA { clip: rect(1px, 1px, 1px, 1px); border: 0px; height: 1px; left: 0=
px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; top: =
0px; white-space: nowrap; width: 1px; }

.dkWypw { align-items: center; box-sizing: border-box; display: inline-flex=
; pointer-events: none; }

.dkWypw::before { content: "=E2=80=8B"; line-height: 1; width: 0px; }

.dkWypw > svg { display: block; height: 100%; width: 100%; }

.R3BUpw { height: calc(var(----lgQg, .1rem)*8*1.5); width: calc(var(----lgQ=
g, .1rem)*8*1.5); }

.uRWxVA { height: calc(var(----lgQg, .1rem)*8*2); width: calc(var(----lgQg,=
 .1rem)*8*2); }

.NA_Img { height: calc(var(----lgQg, .1rem)*8*3); width: calc(var(----lgQg,=
 .1rem)*8*3); }

.JRkz2A { height: calc(var(----lgQg, .1rem)*8*4); width: calc(var(----lgQg,=
 .1rem)*8*4); }

@keyframes _vsOSw {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

._6ti9_A { animation: 0.5s linear 0s infinite normal none running _vsOSw; }

[dir=3D"rtl"] .lmfTqA { transform: scaleX(-1); }

.RMcv3A { color: var(--VcZbvQ); }

.M1IlTw { color: var(--UpESEg); }

.EpS93g { color: var(--PRQgyw); }

._7_8FQQ { color: var(--vCqPYw); }

.Tb7P_g { color: var(--NRkSiw); }

.bGU_UA { display: block; }

.lRNj2A { display: grid; height: 100%; }

.tq_GuQ { --ODN7ig: 0px; --xzVIoQ: var(--ODN7ig); --MDiH4g: var(--xzVIoQ); =
--cqVKuA: var(--MDiH4g); --WHMN3A: var(--xzVIoQ); --DAc5KA: var(--WHMN3A); =
--9D8kEw: var(--DAc5KA); --SDc9Dw: var(--9D8kEw); --aLHwgA: var(--DAc5KA); =
--51vLnw: var(--aLHwgA); --kxq1gA: var(--cqVKuA); --WBWqqg: var(--kxq1gA); =
--wsix4w: var(--cqVKuA); --np7iJA: var(--wsix4w); margin: calc(var(--SDc9Dw=
)*-1) calc(var(--np7iJA)*-1) calc(var(--51vLnw)*-1) calc(var(--WBWqqg)*-1);=
 }

@media (min-width: 600px) {
  .tq_GuQ { --D21EiQ: var(--ODN7ig); --xzVIoQ: var(--D21EiQ); --575ttw: var=
(--MDiH4g); --cqVKuA: var(--575ttw); --mNFMcQ: var(--WHMN3A); --DAc5KA: var=
(--mNFMcQ); --zzPIIQ: var(--9D8kEw); --SDc9Dw: var(--zzPIIQ); --tywInA: var=
(--aLHwgA); --51vLnw: var(--tywInA); --y5UJtw: var(--kxq1gA); --WBWqqg: var=
(--y5UJtw); --HyG-pg: var(--wsix4w); --np7iJA: var(--HyG-pg); }
}

@media (min-width: 900px) {
  .tq_GuQ { --ijDDvw: var(--D21EiQ); --xzVIoQ: var(--ijDDvw); --r733uA: var=
(--575ttw); --cqVKuA: var(--r733uA); --Ycn3FA: var(--mNFMcQ); --DAc5KA: var=
(--Ycn3FA); --iLYaiA: var(--zzPIIQ); --SDc9Dw: var(--iLYaiA); --ugWqWA: var=
(--tywInA); --51vLnw: var(--ugWqWA); --Fq9RDQ: var(--y5UJtw); --WBWqqg: var=
(--Fq9RDQ); --2e8GwA: var(--HyG-pg); --np7iJA: var(--2e8GwA); }
}

@media (min-width: 1200px) {
  .tq_GuQ { --XB2g3A: var(--ijDDvw); --xzVIoQ: var(--XB2g3A); --dlcQ6Q: var=
(--r733uA); --cqVKuA: var(--dlcQ6Q); ---W4B1g: var(--Ycn3FA); --DAc5KA: var=
(---W4B1g); --V4bSzA: var(--iLYaiA); --SDc9Dw: var(--V4bSzA); --MqGEqA: var=
(--ugWqWA); --51vLnw: var(--MqGEqA); --ysWWIg: var(--Fq9RDQ); --WBWqqg: var=
(--ysWWIg); --qUFzUw: var(--2e8GwA); --np7iJA: var(--qUFzUw); }
}

@media (min-width: 1650px) {
  .tq_GuQ { --GKew2A: var(--XB2g3A); --xzVIoQ: var(--GKew2A); --AqlUDA: var=
(--dlcQ6Q); --cqVKuA: var(--AqlUDA); --5lEbBw: var(---W4B1g); --DAc5KA: var=
(--5lEbBw); --3ls_Pg: var(--V4bSzA); --SDc9Dw: var(--3ls_Pg); --FooBVw: var=
(--MqGEqA); --51vLnw: var(--FooBVw); --Lp9AXw: var(--ysWWIg); --WBWqqg: var=
(--Lp9AXw); --vjU7Yg: var(--qUFzUw); --np7iJA: var(--vjU7Yg); }
}

.Ka9auQ { display: flex; flex-direction: row; }

.Ka9auQ.jwmuTw { flex-direction: row-reverse; }

.aDc6Yg { box-sizing: border-box; flex: 1 1 0%; min-width: 0px; }

.Ka9auQ { --Z_Miqg: flex-start; --LsJ77A: var(--Z_Miqg); --TPF5Nw: stretch;=
 --80mGfw: var(--TPF5Nw); --8-Ea9Q: unset; --TW9Q9A: var(--8-Ea9Q); --PmK0M=
A: 0; --HlviUw: var(--PmK0MA); align-items: var(--80mGfw); height: var(--TW=
9Q9A); justify-content: var(--LsJ77A); margin-left: calc(var(--HlviUw)*-1);=
 }

.Ka9auQ > .aDc6Yg { padding-left: var(--HlviUw); }

@media (min-width: 600px) {
  .Ka9auQ { --4oSEuQ: var(--Z_Miqg); --LsJ77A: var(--4oSEuQ); --WwWNzA: var=
(--TPF5Nw); --80mGfw: var(--WwWNzA); --efSz5g: var(--8-Ea9Q); --TW9Q9A: var=
(--efSz5g); --FG1HiQ: var(--PmK0MA); --HlviUw: var(--FG1HiQ); }
}

@media (min-width: 900px) {
  .Ka9auQ { --pIKbQw: var(--4oSEuQ); --LsJ77A: var(--pIKbQw); --UM5n7g: var=
(--WwWNzA); --80mGfw: var(--UM5n7g); --l378dw: var(--efSz5g); --TW9Q9A: var=
(--l378dw); --ZDk_QQ: var(--FG1HiQ); --HlviUw: var(--ZDk_QQ); }
}

@media (min-width: 1200px) {
  .Ka9auQ { --oqjoXw: var(--pIKbQw); --LsJ77A: var(--oqjoXw); --lQFlpg: var=
(--UM5n7g); --80mGfw: var(--lQFlpg); --iZ6hVQ: var(--l378dw); --TW9Q9A: var=
(--iZ6hVQ); --uQwNcw: var(--ZDk_QQ); --HlviUw: var(--uQwNcw); }
}

@media (min-width: 1650px) {
  .Ka9auQ { --Lizo3w: var(--oqjoXw); --LsJ77A: var(--Lizo3w); --ocKd3w: var=
(--lQFlpg); --80mGfw: var(--ocKd3w); --CqswqA: var(--iZ6hVQ); --TW9Q9A: var=
(--CqswqA); --pv1EXQ: var(--uQwNcw); --HlviUw: var(--pv1EXQ); }
}

.oNSf9w { flex: 0 0 auto; }

._3EHl7w { flex: 0 1 auto; }

._7ukmsg { flex: 0 0 calc(100%*var(--J6soRA)); }

.Ka9auQ.OeIiPQ { flex-direction: column; margin-left: 0px; }

.Ka9auQ.OeIiPQ > .aDc6Yg { display: flex; flex: 0 0 auto; justify-content: =
var(--LsJ77A); padding-left: 0px; width: 100%; }

.Ka9auQ.OeIiPQ > .aDc6Yg + .aDc6Yg { padding-top: var(--HlviUw); }

@media (max-width: 599px) {
  .Ka9auQ._94CIA { flex-direction: column; margin-left: 0px; }
  .Ka9auQ._94CIA > .aDc6Yg { display: flex; flex: 0 0 auto; justify-content=
: var(--LsJ77A); padding-left: 0px; width: 100%; }
  .Ka9auQ._94CIA > .aDc6Yg + .aDc6Yg { padding-top: var(--HlviUw); }
}

@media (max-width: 899px) {
  .Ka9auQ.D69X7w { flex-direction: column; margin-left: 0px; }
  .Ka9auQ.D69X7w > .aDc6Yg { display: flex; flex: 0 0 auto; justify-content=
: var(--LsJ77A); padding-left: 0px; width: 100%; }
  .Ka9auQ.D69X7w > .aDc6Yg + .aDc6Yg { padding-top: var(--HlviUw); }
}

@media (max-width: 1199px) {
  .Ka9auQ.bF3aMg { flex-direction: column; margin-left: 0px; }
  .Ka9auQ.bF3aMg > .aDc6Yg { display: flex; flex: 0 0 auto; justify-content=
: var(--LsJ77A); padding-left: 0px; width: 100%; }
  .Ka9auQ.bF3aMg > .aDc6Yg + .aDc6Yg { padding-top: var(--HlviUw); }
}

@media (max-width: 1649px) {
  .Ka9auQ._99XVeA { flex-direction: column; margin-left: 0px; }
  .Ka9auQ._99XVeA > .aDc6Yg { display: flex; flex: 0 0 auto; justify-conten=
t: var(--LsJ77A); padding-left: 0px; width: 100%; }
  .Ka9auQ._99XVeA > .aDc6Yg + .aDc6Yg { padding-top: var(--HlviUw); }
}

._99GB9Q { margin: 0px auto; width: 100%; }

.hMc6MQ { max-width: 752px; }

.rzX2Ng { max-width: 1288px; }

.XIyMlA { height: 100%; }

.SwlpcA { --lIX0Wg: 0; --yi87cg: var(--lIX0Wg); --ohDgOg: var(--yi87cg); --=
hx4cXA: var(--yi87cg); --UOvbuw: var(--ohDgOg); --fqqbsg: var(--hx4cXA); co=
lumn-gap: ; row-gap: ; --S8wiIA: 1; --039ymw: var(--S8wiIA); --PsEauw: auto=
; --Kt27rA: var(--PsEauw); --QrbJUA: stretch; --vUMXuQ: var(--QrbJUA); --tF=
xMoA: stretch; --DZcelw: var(--tFxMoA); align-items: var(--vUMXuQ); display=
: grid; grid-auto-rows: var(--Kt27rA); grid-template-columns: repeat(var(--=
039ymw),minmax(0,1fr)); justify-items: var(--DZcelw); list-style: none; mar=
gin: 0px; padding: 0px; width: 100%; }

@media (min-width: 600px) {
  .SwlpcA { --ewtwaQ: var(--lIX0Wg); --yi87cg: var(--ewtwaQ); --NSTj4A: var=
(--ohDgOg); --UOvbuw: var(--NSTj4A); --p2o2Vg: var(--hx4cXA); --fqqbsg: var=
(--p2o2Vg); --l9ar2Q: var(--S8wiIA); --039ymw: var(--l9ar2Q); --3l1REQ: var=
(--PsEauw); --Kt27rA: var(--3l1REQ); --0-W-hw: var(--QrbJUA); --vUMXuQ: var=
(--0-W-hw); --Ey-7Iw: var(--tFxMoA); --DZcelw: var(--Ey-7Iw); }
}

@media (min-width: 900px) {
  .SwlpcA { --Bgy4yg: var(--ewtwaQ); --yi87cg: var(--Bgy4yg); --0WShwg: var=
(--NSTj4A); --UOvbuw: var(--0WShwg); --e8tE0A: var(--p2o2Vg); --fqqbsg: var=
(--e8tE0A); --CcBh2g: var(--l9ar2Q); --039ymw: var(--CcBh2g); --gLfeDA: var=
(--3l1REQ); --Kt27rA: var(--gLfeDA); --ZRmpDA: var(--0-W-hw); --vUMXuQ: var=
(--ZRmpDA); --bTWRfA: var(--Ey-7Iw); --DZcelw: var(--bTWRfA); }
}

@media (min-width: 1200px) {
  .SwlpcA { --3XakiA: var(--Bgy4yg); --yi87cg: var(--3XakiA); --YSP4xg: var=
(--0WShwg); --UOvbuw: var(--YSP4xg); --NQHGsg: var(--e8tE0A); --fqqbsg: var=
(--NQHGsg); --tKeWqQ: var(--CcBh2g); --039ymw: var(--tKeWqQ); --uFii4Q: var=
(--gLfeDA); --Kt27rA: var(--uFii4Q); --dQS_dA: var(--ZRmpDA); --vUMXuQ: var=
(--dQS_dA); --l2u9pQ: var(--bTWRfA); --DZcelw: var(--l2u9pQ); }
}

@media (min-width: 1650px) {
  .SwlpcA { --ZS7sgA: var(--3XakiA); --yi87cg: var(--ZS7sgA); --mP4KDg: var=
(--YSP4xg); --UOvbuw: var(--mP4KDg); --N5TPJA: var(--NQHGsg); --fqqbsg: var=
(--N5TPJA); --O5dT7A: var(--tKeWqQ); --039ymw: var(--O5dT7A); --bEL8Kw: var=
(--uFii4Q); --Kt27rA: var(--bEL8Kw); --ADQKyA: var(--dQS_dA); --vUMXuQ: var=
(--ADQKyA); --BjJaRg: var(--l2u9pQ); --DZcelw: var(--BjJaRg); }
}

@media (max-width: 599px) {
  .wJbOHQ { display: none; }
}

@media (max-width: 899px) {
  .Lvj8DA { display: none; }
}

@media (max-width: 1199px) {
  .HymTAA { display: none; }
}

@media (min-width: 600px) {
  .Kfm_Qg { display: none; }
}

@media (min-width: 900px) {
  .X3YvaQ { display: none; }
}

@media (min-width: 1200px) {
  ._0zD_tw { display: none; }
}

.IZ4ahw { display: flex; flex-direction: column; min-width: 0px; }

.lJVQMg { display: flex; flex-flow: wrap; list-style: none; margin: 0px; pa=
dding: 0px; pointer-events: none; }

.eAUiHA { min-width: 0px; pointer-events: auto; }

.lJVQMg { --9en39A: start; --sV-EpA: var(--9en39A); --WF3kKw: flex-start; -=
-iXQvmQ: var(--WF3kKw); --dVJz5A: 0; --8L3TXg: var(--dVJz5A); align-items: =
var(--iXQvmQ); justify-content: var(--sV-EpA); margin-left: calc(var(--8L3T=
Xg)*-1); margin-top: calc(var(--8L3TXg)*-1); }

.lJVQMg > .eAUiHA { margin-left: var(--8L3TXg); margin-top: var(--8L3TXg); =
}

@media (min-width: 600px) {
  .lJVQMg { --PH7IiA: var(--9en39A); --sV-EpA: var(--PH7IiA); --lerH5Q: var=
(--WF3kKw); --iXQvmQ: var(--lerH5Q); --17nzkQ: var(--dVJz5A); --8L3TXg: var=
(--17nzkQ); }
}

@media (min-width: 900px) {
  .lJVQMg { --So7e7w: var(--PH7IiA); --sV-EpA: var(--So7e7w); --Svcfig: var=
(--lerH5Q); --iXQvmQ: var(--Svcfig); --fBHifw: var(--17nzkQ); --8L3TXg: var=
(--fBHifw); }
}

@media (min-width: 1200px) {
  .lJVQMg { --7u37BA: var(--So7e7w); --sV-EpA: var(--7u37BA); --g8CPjw: var=
(--Svcfig); --iXQvmQ: var(--g8CPjw); --YHMflA: var(--fBHifw); --8L3TXg: var=
(--YHMflA); }
}

@media (min-width: 1650px) {
  .lJVQMg { --JN3vyg: var(--7u37BA); --sV-EpA: var(--JN3vyg); --_CLt_A: var=
(--g8CPjw); --iXQvmQ: var(--_CLt_A); --s1K7lQ: var(--YHMflA); --8L3TXg: var=
(--s1K7lQ); }
}

.lJVQMg.iSphvA { flex-direction: column; margin-left: 0px; }

.lJVQMg.iSphvA > .eAUiHA { display: flex; justify-content: var(--sV-EpA); m=
argin-left: 0px; width: 100%; }

@media (max-width: 599px) {
  .lJVQMg.Cr51Kw { flex-direction: column; margin-left: 0px; }
  .lJVQMg.Cr51Kw > .eAUiHA { display: flex; justify-content: var(--sV-EpA);=
 margin-left: 0px; width: 100%; }
}

@media (max-width: 899px) {
  .lJVQMg._VmLag { flex-direction: column; margin-left: 0px; }
  .lJVQMg._VmLag > .eAUiHA { display: flex; justify-content: var(--sV-EpA);=
 margin-left: 0px; width: 100%; }
}

@media (max-width: 1199px) {
  .lJVQMg.GJAJOA { flex-direction: column; margin-left: 0px; }
  .lJVQMg.GJAJOA > .eAUiHA { display: flex; justify-content: var(--sV-EpA);=
 margin-left: 0px; width: 100%; }
}

@media (max-width: 1649px) {
  .lJVQMg.tlsSCw { flex-direction: column; margin-left: 0px; }
  .lJVQMg.tlsSCw > .eAUiHA { display: flex; justify-content: var(--sV-EpA);=
 margin-left: 0px; width: 100%; }
}

.jv_R6g { --NZu1Zw: 0; --B5MwdA: var(--NZu1Zw); row-gap: ; --okeDpw: stretc=
h; --lbR7PA: var(--okeDpw); display: grid; grid-template-columns: minmax(0p=
x, 1fr); justify-items: var(--lbR7PA); list-style: none; margin: 0px; paddi=
ng: 0px; width: 100%; }

@media (min-width: 600px) {
  .jv_R6g { --yjD9-g: var(--NZu1Zw); --B5MwdA: var(--yjD9-g); --Wdux6Q: var=
(--okeDpw); --lbR7PA: var(--Wdux6Q); }
}

@media (min-width: 900px) {
  .jv_R6g { --p9uXxg: var(--yjD9-g); --B5MwdA: var(--p9uXxg); --XmSfTQ: var=
(--Wdux6Q); --lbR7PA: var(--XmSfTQ); }
}

@media (min-width: 1200px) {
  .jv_R6g { --5eb_tQ: var(--p9uXxg); --B5MwdA: var(--5eb_tQ); --70FeaQ: var=
(--XmSfTQ); --lbR7PA: var(--70FeaQ); }
}

@media (min-width: 1650px) {
  .jv_R6g { --BaEeNQ: var(--5eb_tQ); --B5MwdA: var(--BaEeNQ); --TabT5g: var=
(--70FeaQ); --lbR7PA: var(--TabT5g); }
}

._8aVEnQ { display: block; flex-shrink: 0; }

._8aVEnQ.jNvgTA { display: inline-block; height: auto; min-height: 1px; }

._8aVEnQ.fI4kiw { min-width: 1px; width: auto; }

._8aVEnQ { --FnDW1g: 0; --_0I23A: var(--FnDW1g); height: var(--_0I23A); wid=
th: var(--_0I23A); }

@media (min-width: 600px) {
  ._8aVEnQ { --wVd3QA: var(--FnDW1g); --_0I23A: var(--wVd3QA); }
}

@media (min-width: 900px) {
  ._8aVEnQ { --av-YnA: var(--wVd3QA); --_0I23A: var(--av-YnA); }
}

@media (min-width: 1200px) {
  ._8aVEnQ { --Gwh4IA: var(--av-YnA); --_0I23A: var(--Gwh4IA); }
}

@media (min-width: 1650px) {
  ._8aVEnQ { --F5plrA: var(--Gwh4IA); --_0I23A: var(--F5plrA); }
}

.DcyBDA { display: flex; height: 100%; place-items: center; width: 100%; }

.light { --Wc1zKQ: rgba(64,87,109,.07); }

.dark { --Wc1zKQ: hsla(0,0%,100%,.15); }

.gr4YYw { direction: ltr; display: inline-flex; }

.gr4YYw .FLBiAQ { margin: 0px 2px; }

.gr4YYw .FLBiAQ:first-child { margin-left: 0px; }

.gr4YYw .FLBiAQ:last-child { margin-right: 0px; }

.FLBiAQ { border-radius: 4px; box-sizing: border-box; display: inline-block=
; }

.FLBiAQ.Iu18wQ { height: calc(var(----lgQg, .1rem)*8*2); line-height: calc(=
var(----lgQg, .1rem)*8*2); padding: 0px 4px; }

.FLBiAQ._3L5FYw { height: calc(var(----lgQg, .1rem)*8*3); line-height: calc=
(var(----lgQg, .1rem)*8*3); padding: 0px 8px; }

.FLBiAQ.g5oiAA { padding: 0px; text-align: center; }

.FLBiAQ.Iu18wQ.g5oiAA { width: calc(var(----lgQg, .1rem)*8*2); }

.FLBiAQ._3L5FYw.g5oiAA { width: calc(var(----lgQg, .1rem)*8*3); }

.FLBiAQ { background-color: var(--Wc1zKQ); color: var(--VcZbvQ); }

.lRiAhg { height: 100vh; left: 0px; position: fixed; top: 0px; width: 100vw=
; }

.IRiUGg { pointer-events: none; }

.FJA3UA { display: contents; }

.Jk3VHQ { box-shadow: inset 0 0 0 1px var(--OuCkCQ); box-sizing: border-box=
; max-width: 256px; min-height: 24px; }

.W2jr_g { height: 100%; width: 100%; }

.SgV0LQ, .wzcRhw { overflow-wrap: anywhere; }

.Id25FA { pointer-events: none; }

.wlcUXw { display: block; margin: -1px; }

._1TGi_Q { fill: rgb(37, 38, 39); }

.WaZAtA { fill: rgba(255, 255, 255, 0.15); }

.DJQkSg, ._7V44Gw { margin: 4px 0px; }

._833hQ { background: none; border: none; color: inherit; cursor: pointer; =
font: inherit; height: 100%; margin: 0px; padding: 0px; text-transform: inh=
erit; user-select: none; width: 100%; }

.LQzFZw { --mgu_Pg: transparent; --E4StsQ: transparent; --FUwsWA: var(--mgu=
_Pg); --y9w-wA: var(--mgu_Pg); --YOyfXQ: var(--mgu_Pg); --cQPFXw: var(--E4S=
tsQ); --xWQ3Xw: var(--y9w-wA); --a7z0ig: var(--E4StsQ); --1E1JAw: var(--FUw=
sWA); --7P7eLw: var(--xWQ3Xw); --YTzbKA: var(--YOyfXQ); --DlUg2Q: var(--cQP=
FXw); --kqElOA: 0px; --aYAjow: 0px; --yku7aA: transparent; --YH_Pkg: var(--=
yku7aA); --VyR2dQ: var(--yku7aA); --AGdIGA: var(--YH_Pkg); align-items: cen=
ter; background-color: var(--mgu_Pg); border: var(--kqElOA) solid var(--yku=
7aA); border-radius: 8px; box-sizing: border-box; color: var(--E4StsQ); cur=
sor: pointer; display: inline-flex; height: calc(var(----lgQg, .1rem)*8*5);=
 max-width: 100%; min-width: 80px; vertical-align: middle; }

.LQzFZw.aqbYPg:hover { background-color: var(--FUwsWA); }

.LQzFZw.LQzFZw:active { background-color: var(--y9w-wA); }

.LQzFZw.LQzFZw.j5ZKaw { background-color: var(--mgu_Pg); }

.LQzFZw.LQzFZw.bfFHbg { background-color: var(--YOyfXQ); color: var(--cQPFX=
w); }

.LQzFZw.ne53xg { background-color: var(--xWQ3Xw); border-color: var(--VyR2d=
Q); color: var(--a7z0ig); }

.LQzFZw.ne53xg.aqbYPg:hover { background-color: var(--1E1JAw); }

.LQzFZw.LQzFZw.ne53xg:active { background-color: var(--7P7eLw); }

.LQzFZw.LQzFZw.ne53xg.bfFHbg { background-color: var(--YTzbKA); border-colo=
r: var(--AGdIGA); color: var(--DlUg2Q); }

.LQzFZw.i0zbxA, .LQzFZw.i0zbxA.aqbYPg:hover, .LQzFZw.i0zbxA:active { backgr=
ound-color: var(--y9w-wA); color: var(--E4StsQ); }

.LQzFZw.ne53xg.i0zbxA, .LQzFZw.ne53xg.i0zbxA.aqbYPg:hover, .LQzFZw.ne53xg.i=
0zbxA:active { background-color: var(--7P7eLw); color: var(--a7z0ig); }

.rV61VQ { --mgu_Pg: var(--eGVbng); --E4StsQ: var(--d1p99w); --FUwsWA: var(-=
-M5_pvA); --y9w-wA: var(--boKKWg); --YOyfXQ: var(--oqurdw); --cQPFXw: var(-=
-17LfHw); }

.Z3nT2A { --mgu_Pg: var(--EgWgfg); --E4StsQ: var(--REcY5g); --FUwsWA: var(-=
-X3--Zg); --y9w-wA: var(--xfy86Q); --YOyfXQ: var(--p53f_Q); --cQPFXw: var(-=
-XajtPQ); --xWQ3Xw: var(--FVk7Ew); --a7z0ig: var(--_RN1Dg); --1E1JAw: var(-=
-2-zmYA); --7P7eLw: var(--ySYdsQ); --YTzbKA: var(--aMXh3A); --DlUg2Q: var(-=
-8fGzbw); --kqElOA: 1px; --yku7aA: var(--620Maw); --VyR2dQ: var(--TBPmDQ); =
--AGdIGA: var(--UzSy6g); }

.unS_Qw { --mgu_Pg: var(--ob8tTA); --E4StsQ: var(--QeQ0Dw); --FUwsWA: var(-=
-MghLXQ); --y9w-wA: var(--3R4u8w); --YOyfXQ: var(--TwiLcg); --cQPFXw: var(-=
-TZOI7A); --xWQ3Xw: var(--SZMkXA); --a7z0ig: var(--8Ex5gA); --1E1JAw: var(-=
-1zesEA); --7P7eLw: var(--AMxRgw); --YTzbKA: var(--BZ60Jw); --DlUg2Q: var(-=
-spIP2A); }

._9KQGjA { --mgu_Pg: var(--KtXlRg); --E4StsQ: var(--6u-yJQ); --FUwsWA: var(=
--QADODw); --y9w-wA: var(--kTBxcw); --YOyfXQ: var(--HxK_kw); --cQPFXw: var(=
--J0YKvA); }

.e7m_OA { --mgu_Pg: var(--jTT_jQ); --E4StsQ: var(--eLjurg); --FUwsWA: var(-=
-2hPbag); --y9w-wA: var(--nRrzRQ); --YOyfXQ: var(---Xfh1Q); --cQPFXw: var(-=
--Evg2A); }

.XUExdA { --mgu_Pg: transparent; --E4StsQ: var(--8jnd6g); --cQPFXw: var(--P=
RQgyw); }

.Ao21pw { --mgu_Pg: transparent; --E4StsQ: var(--UpESEg); --cQPFXw: var(--P=
RQgyw); }

._9U4ptw { --mgu_Pg: hsla(0,0%,100%,.9); --E4StsQ: #0d1216; --FUwsWA: #fff;=
 --y9w-wA: hsla(0,0%,100%,.8); --YOyfXQ: #ffffffb2; --cQPFXw: #0e1318b2; }

.zLV7FA { --mgu_Pg: hsla(0,0%,100%,.15); --E4StsQ: #fff; --FUwsWA: hsla(0,0=
%,100%,.15); --y9w-wA: hsla(0,0%,100%,.2); --YOyfXQ: hsla(0,0%,100%,.15); -=
-cQPFXw: hsla(0,0%,100%,.7); }

.pzABOw { --mgu_Pg: transparent; --E4StsQ: #fff; --FUwsWA: hsla(0,0%,100%,.=
15); --y9w-wA: hsla(0,0%,100%,.15); --YOyfXQ: transparent; --cQPFXw: hsla(0=
,0%,100%,.7); }

._3FvZZg.LQzFZw { transition: background-color 0.1s linear 0s, border-color=
 0.1s linear 0s, color 0.1s linear 0s; }

.mr_06Q { isolation: isolate; position: relative; }

.mr_06Q::before { border-radius: 8px; content: ""; height: 100%; left: 50%;=
 min-height: 44px; min-width: 44px; position: absolute; top: 50%; transform=
: translate(-50%, -50%); width: 100%; }

.V_p1oA.mr_06Q::before { border-radius: 9999px; }

._8ERLTg { outline: none; }

.O93RRw, .h69Neg { min-width: unset; }

.O93RRw { border-radius: 4px; height: calc(var(----lgQg, .1rem)*8*3); paddi=
ng: calc(2px - var(--kqElOA)); }

.xSjJ4w { width: calc(var(----lgQg, .1rem)*8*3); }

.SEkZ4w { --aYAjow: 8px; border-radius: 4px; height: calc(var(----lgQg, .1r=
em)*8*3.5); min-width: unset; padding: 0 calc(12px - var(--kqElOA)); }

.XyeOCA { width: calc(var(----lgQg, .1rem)*8*3.5); }

.f5yKmw { --aYAjow: 4px; height: calc(var(----lgQg, .1rem)*8*4); min-width:=
 unset; padding: 0 calc(8px - var(--kqElOA)); }

.gi5pqg { width: calc(var(----lgQg, .1rem)*8*4); }

._4_iekA { --aYAjow: 8px; height: calc(var(----lgQg, .1rem)*8*5); padding: =
0 calc(16px - var(--kqElOA)); }

.h5mTDw { width: calc(var(----lgQg, .1rem)*8*5); }

.KRcKHA { --aYAjow: 10px; height: calc(var(----lgQg, .1rem)*8*8); padding: =
0 calc(26px - var(--kqElOA)); }

.hTpftg { width: calc(var(----lgQg, .1rem)*8*8); }

._3oHQrw { display: flex; width: 100%; }

.xdqtjA { justify-content: start; }

.j34Zww { justify-content: center; }

.biNPNg { justify-content: end; }

.bfFHbg { cursor: not-allowed; }

.LQzFZw > .khPe7Q { display: inline-block; max-width: 100%; overflow: hidde=
n; text-overflow: ellipsis; white-space: nowrap; }

.O93RRw > .khPe7Q { line-height: 1; }

.j34Zww > .khPe7Q { margin: auto; }

.j34Zww.MCgm0w > .khPe7Q, .j34Zww.uIDahA > .khPe7Q { flex: initial; margin-=
left: 0px; margin-right: 0px; }

._3oHQrw > .khPe7Q { flex: 1 1 0%; }

._3oHQrw.xdqtjA > .khPe7Q { text-align: start; }

._3oHQrw.biNPNg > .khPe7Q { text-align: end; }

.vxQy1w { align-items: center; display: flex; flex-shrink: 0; justify-conte=
nt: center; }

.MCgm0w .vxQy1w { margin: 0 var(--aYAjow) 0 calc(var(--aYAjow)*-1); }

.uIDahA .vxQy1w { margin: 0 calc(var(--aYAjow)*-1) 0 var(--aYAjow); }

.PvuXpA { background: var(--4RaSjg); border-radius: 9999px; box-shadow: var=
(--wlsoXA); display: block; width: fit-content; }

.Io4lkg { display: inline-flex; }

.j5ZKaw { cursor: wait; position: relative; }

._7vwyYA { align-items: center; display: flex; height: 100%; justify-conten=
t: center; left: 0px; position: absolute; top: 0px; width: 100%; }

.j5ZKaw > .khPe7Q, .j5ZKaw > .vxQy1w:not(._7vwyYA) { opacity: 0; }

._3FvZZg > .khPe7Q, ._3FvZZg > .vxQy1w:not(._7vwyYA) { transition: opacity =
0.15s ease-in-out 0s; }

.rV61VQ { outline-offset: 3px; }

.pzABOw._0_YFAw:not(.bfFHbg), .pzABOw._0_YFAw:not(.bfFHbg) .khPe7Q { color:=
 rgb(255, 255, 255); }

.Ao21pw, .XUExdA { min-width: 0px; }

.XUExdA.KRcKHA { padding: 0 calc(12px - var(--kqElOA)); }

.XUExdA._4_iekA { padding: 0 calc(10px - var(--kqElOA)); }

.XUExdA.f5yKmw { padding: 0 calc(6px - var(--kqElOA)); }

.XUExdA.SEkZ4w { padding: 0 calc(10px - var(--kqElOA)); }

.XUExdA.aqbYPg:hover { color: var(---2QwGw); text-decoration: underline; }

.XUExdA.XUExdA:active { color: var(--KgLrHA); }

.XUExdA.bfFHbg.bfFHbg { color: var(--PRQgyw); text-decoration: none; }

.XUExdA.j5ZKaw.j5ZKaw { color: var(--8jnd6g); }

.Ao21pw { color: var(--UpESEg); padding: 0 calc(2px - var(--kqElOA)); }

.Ao21pw.aqbYPg:active, .Ao21pw.aqbYPg:focus, .Ao21pw.aqbYPg:hover, .Ao21pw:=
active, .Ao21pw:focus { color: var(--VcZbvQ); }

.Ao21pw.bfFHbg.bfFHbg { color: var(--PRQgyw); }

.Ao21pw.j5ZKaw.j5ZKaw { color: var(--VcZbvQ); }

._0_YFAw { flex-direction: column; height: auto; min-width: 64px; padding: =
calc(8px - var(--kqElOA)); }

._0_YFAw .khPe7Q { padding: 4px 0px 0px; }

.V_p1oA { border-radius: 9999px; }

.V_p1oA.SEkZ4w { max-height: calc(var(----lgQg, .1rem)*8*4); max-width: cal=
c(var(----lgQg, .1rem)*8*4); min-height: calc(var(----lgQg, .1rem)*8*4); mi=
n-width: calc(var(----lgQg, .1rem)*8*4); }

.V_p1oA.f5yKmw { max-height: calc(var(----lgQg, .1rem)*8*5); max-width: cal=
c(var(----lgQg, .1rem)*8*5); min-height: calc(var(----lgQg, .1rem)*8*5); mi=
n-width: calc(var(----lgQg, .1rem)*8*5); }

.V_p1oA._4_iekA { max-height: calc(var(----lgQg, .1rem)*8*6); max-width: ca=
lc(var(----lgQg, .1rem)*8*6); min-height: calc(var(----lgQg, .1rem)*8*6); m=
in-width: calc(var(----lgQg, .1rem)*8*6); }

.V_p1oA.KRcKHA { max-height: calc(var(----lgQg, .1rem)*8*7); max-width: cal=
c(var(----lgQg, .1rem)*8*7); min-height: calc(var(----lgQg, .1rem)*8*7); mi=
n-width: calc(var(----lgQg, .1rem)*8*7); }

.REuuag { align-items: center; display: flex; flex-direction: column; }

.bxwG2Q { width: calc(16px + var(----lgQg, .1rem)*8*4); }

._0MwQw { width: calc(16px + var(----lgQg, .1rem)*8*5); }

._ibx9A { width: calc(16px + var(----lgQg, .1rem)*8*6); }

.WxBMug { width: calc(16px + var(----lgQg, .1rem)*8*7); }

.BHMEDw { margin-top: 12px; overflow-wrap: break-word; width: 100%; }

.BHMEDw, .Xj0kcw { text-align: center; }

.Xj0kcw { box-sizing: border-box; text-decoration: none; }

.Xj0kcw:focus-visible { outline-style: auto; }

._5iUWzw { display: flex; }

.z_fMEw:not(:first-child) { margin-left: 1px; }

.z_fMEw:not(:first-child) ._5KtATA { border-bottom-left-radius: 0px; border=
-top-left-radius: 0px; }

.z_fMEw:not(:last-child) ._5KtATA { border-bottom-right-radius: 0px; border=
-top-right-radius: 0px; }

.BHs_rA a, .Pjs_rA, .WkdUeQ, ._1hWAA a, ._200NbQ, ._6MeQcQ, .iRRpzw a, .lRO=
ewQ, .q57IQQ a, .skMA1A a { color: var(--ZGnFiQ,var(--Y5muMw)); cursor: poi=
nter; text-decoration: underline; }

.WkdUeQ, .iRRpzw a, .lROewQ, .q57IQQ a { --Y5muMw: var(--8jnd6g); }

.WkdUeQ._3bC2IQ:not(._6SenXQ):hover, ._1hWAA a:hover, ._200NbQ._3bC2IQ:not(=
._6SenXQ):hover, .iRRpzw a:hover, .lROewQ._3bC2IQ:not(._6SenXQ):hover, .q57=
IQQ a:hover { --Y5muMw: var(---2QwGw); }

.WkdUeQ:not(._6SenXQ):active, .iRRpzw a:active, .lROewQ:not(._6SenXQ):activ=
e, .q57IQQ a:active { --Y5muMw: var(--KgLrHA); }

.BHs_rA a, ._6MeQcQ { --Y5muMw: var(--FOH6ww); }

.BHs_rA a:active, ._6MeQcQ:not(._6SenXQ):active { --Y5muMw: var(--QclmLg); =
}

.BHs_rA a:hover, ._6MeQcQ._3bC2IQ:not(._6SenXQ):hover { --Y5muMw: var(--jyD=
isg); }

.Pjs_rA, ._1hWAA a, ._200NbQ, .hGfU2Q, .pTsp_A, .skMA1A a, .uYt64w a { colo=
r: inherit; }

.lROewQ, .q57IQQ a { font-weight: 600; }

.Pjs_rA, .pTsp_A, .skMA1A a, .uYt64w a { text-decoration: none; }

.Pjs_rA._3bC2IQ:not(._6SenXQ):hover, .skMA1A a:hover { text-decoration: und=
erline; }

.pTsp_A._3bC2IQ:not(._6SenXQ):hover, .uYt64w a:hover { text-decoration: non=
e; }

._6SenXQ { --ZGnFiQ: var(--jDAtXQ); cursor: not-allowed; }

.b_Y0Sw { margin-left: 4px; white-space: nowrap; }

.V5YmAg, .b_Y0Sw { user-select: none; }

.lRtCyw { color: inherit; font-size: inherit; margin: -4px; max-width: unse=
t; vertical-align: baseline; }

.aMUpPw .lRtCyw { margin: -8px; }

.WoE5Nw { display: flex; }

.GOCM1Q { height: 100%; left: 0px; position: absolute; top: 0px; width: 100=
%; }

.RlPnoQ { cursor: auto; }

._0r0u9w { display: block; }

.nYFGlQ { align-items: center; display: flex; }

.uzRrVg { color: initial; font-family: initial; font-feature-settings: init=
ial; font-kerning: initial; font-optical-sizing: initial; font-palette: ini=
tial; font-size: 1rem; font-stretch: initial; font-style: initial; font-syn=
thesis: initial; font-variant: initial; font-variation-settings: initial; f=
ont-weight: initial; forced-color-adjust: initial; position: initial; text-=
orientation: initial; text-rendering: initial; -webkit-font-smoothing: init=
ial; -webkit-locale: initial; -webkit-text-orientation: initial; -webkit-wr=
iting-mode: initial; writing-mode: initial; zoom: initial; accent-color: in=
itial; place-content: initial; place-items: initial; place-self: initial; a=
lignment-baseline: initial; animation-composition: initial; animation: init=
ial; app-region: initial; appearance: initial; aspect-ratio: initial; backd=
rop-filter: initial; backface-visibility: initial; background: initial; bac=
kground-blend-mode: initial; baseline-shift: initial; baseline-source: init=
ial; block-size: initial; border-block: initial; border: initial; border-ra=
dius: initial; border-collapse: initial; border-end-end-radius: initial; bo=
rder-end-start-radius: initial; border-inline: initial; border-start-end-ra=
dius: initial; border-start-start-radius: initial; inset: initial; box-shad=
ow: initial; box-sizing: border-box; break-after: initial; break-before: in=
itial; break-inside: initial; buffered-rendering: initial; caption-side: in=
itial; caret-color: initial; clear: initial; clip: initial; clip-path: init=
ial; clip-rule: initial; color-interpolation: initial; color-interpolation-=
filters: initial; color-rendering: initial; color-scheme: initial; columns:=
 initial; column-fill: initial; gap: initial; column-rule: initial; column-=
span: initial; contain: initial; contain-intrinsic-block-size: initial; con=
tain-intrinsic-size: initial; contain-intrinsic-inline-size: initial; conta=
iner: initial; content: initial; content-visibility: initial; counter-incre=
ment: initial; counter-reset: initial; counter-set: initial; cursor: initia=
l; cx: initial; cy: initial; d: initial; display: block; dominant-baseline:=
 initial; empty-cells: initial; fill: initial; fill-opacity: initial; fill-=
rule: initial; filter: initial; flex: initial; flex-flow: initial; float: i=
nitial; flood-color: initial; flood-opacity: initial; grid: initial; grid-a=
rea: initial; height: initial; hyphenate-character: initial; hyphenate-limi=
t-chars: initial; hyphens: initial; image-orientation: initial; image-rende=
ring: initial; initial-letter: initial; inline-size: initial; inset-block: =
initial; inset-inline: initial; isolation: initial; letter-spacing: initial=
; lighting-color: initial; line-break: initial; line-height: initial; list-=
style: initial; margin-block: initial; margin: initial; margin-inline: init=
ial; marker: initial; mask: initial; mask-type: initial; math-depth: initia=
l; math-shift: initial; math-style: initial; max-block-size: initial; max-h=
eight: initial; max-inline-size: initial; max-width: initial; min-block-siz=
e: initial; min-height: initial; min-inline-size: initial; min-width: initi=
al; mix-blend-mode: initial; object-fit: initial; object-position: initial;=
 object-view-box: initial; offset: initial; opacity: initial; order: initia=
l; orphans: initial; outline: initial; outline-offset: initial; overflow-an=
chor: initial; overflow-clip-margin: initial; overflow-wrap: initial; overf=
low: initial; overlay: initial; overscroll-behavior-block: initial; overscr=
oll-behavior-inline: initial; overscroll-behavior: initial; padding-block: =
initial; padding: initial; padding-inline: initial; page: initial; page-ori=
entation: initial; paint-order: initial; perspective: initial; perspective-=
origin: initial; pointer-events: initial; quotes: initial; r: initial; resi=
ze: initial; rotate: initial; ruby-position: initial; rx: initial; ry: init=
ial; scale: initial; scroll-behavior: initial; scroll-margin-block: initial=
; scroll-margin: initial; scroll-margin-inline: initial; scroll-padding-blo=
ck: initial; scroll-padding: initial; scroll-padding-inline: initial; scrol=
l-snap-align: initial; scroll-snap-stop: initial; scroll-snap-type: initial=
; scroll-timeline: initial; scrollbar-color: initial; scrollbar-gutter: ini=
tial; scrollbar-width: initial; shape-image-threshold: initial; shape-margi=
n: initial; shape-outside: initial; shape-rendering: initial; size: initial=
; speak: initial; stop-color: initial; stop-opacity: initial; stroke: initi=
al; stroke-dasharray: initial; stroke-dashoffset: initial; stroke-linecap: =
initial; stroke-linejoin: initial; stroke-miterlimit: initial; stroke-opaci=
ty: initial; stroke-width: initial; tab-size: initial; table-layout: initia=
l; text-align: initial; text-align-last: initial; text-anchor: initial; tex=
t-combine-upright: initial; text-decoration: initial; text-decoration-skip-=
ink: initial; text-emphasis: initial; text-emphasis-position: initial; text=
-indent: initial; text-overflow: initial; text-shadow: initial; text-size-a=
djust: initial; text-transform: initial; text-underline-offset: initial; te=
xt-underline-position: initial; white-space: initial; timeline-scope: initi=
al; touch-action: initial; transform: initial; transform-box: initial; tran=
sform-origin: initial; transform-style: initial; transition: initial; trans=
late: initial; user-select: initial; vector-effect: initial; vertical-align=
: initial; view-timeline: initial; view-transition-name: initial; visibilit=
y: initial; border-spacing: initial; -webkit-box-align: initial; -webkit-bo=
x-decoration-break: initial; -webkit-box-direction: initial; -webkit-box-fl=
ex: initial; -webkit-box-ordinal-group: initial; -webkit-box-orient: initia=
l; -webkit-box-pack: initial; -webkit-box-reflect: initial; -webkit-line-br=
eak: initial; -webkit-line-clamp: initial; -webkit-mask-box-image: initial;=
 -webkit-print-color-adjust: initial; -webkit-rtl-ordering: initial; -webki=
t-ruby-position: initial; -webkit-tap-highlight-color: initial; -webkit-tex=
t-combine: initial; -webkit-text-decorations-in-effect: initial; -webkit-te=
xt-fill-color: initial; -webkit-text-security: initial; -webkit-text-stroke=
: initial; -webkit-user-drag: initial; -webkit-user-modify: initial; widows=
: initial; width: initial; will-change: initial; word-break: initial; word-=
spacing: initial; x: initial; y: initial; z-index: initial; }

.VQmDAg { color: initial; font-family: initial; font-feature-settings: init=
ial; font-kerning: initial; font-optical-sizing: initial; font-palette: ini=
tial; font-size: 1rem; font-stretch: initial; font-style: initial; font-syn=
thesis: initial; font-variant: initial; font-variation-settings: initial; f=
ont-weight: initial; forced-color-adjust: initial; position: initial; text-=
orientation: initial; text-rendering: initial; -webkit-font-smoothing: init=
ial; -webkit-locale: initial; -webkit-text-orientation: initial; -webkit-wr=
iting-mode: initial; writing-mode: initial; zoom: initial; accent-color: in=
itial; place-content: initial; place-items: initial; place-self: initial; a=
lignment-baseline: initial; animation-composition: initial; animation: init=
ial; app-region: initial; appearance: initial; aspect-ratio: initial; backd=
rop-filter: initial; backface-visibility: initial; background: initial; bac=
kground-blend-mode: initial; baseline-shift: initial; baseline-source: init=
ial; block-size: initial; border-block: initial; border: initial; border-ra=
dius: initial; border-collapse: initial; border-end-end-radius: initial; bo=
rder-end-start-radius: initial; border-inline: initial; border-start-end-ra=
dius: initial; border-start-start-radius: initial; inset: initial; box-shad=
ow: initial; box-sizing: border-box; break-after: initial; break-before: in=
itial; break-inside: initial; buffered-rendering: initial; caption-side: in=
itial; caret-color: initial; clear: initial; clip: initial; clip-path: init=
ial; clip-rule: initial; color-interpolation: initial; color-interpolation-=
filters: initial; color-rendering: initial; color-scheme: initial; columns:=
 initial; column-fill: initial; gap: initial; column-rule: initial; column-=
span: initial; contain: initial; contain-intrinsic-block-size: initial; con=
tain-intrinsic-size: initial; contain-intrinsic-inline-size: initial; conta=
iner: initial; content: initial; content-visibility: initial; counter-incre=
ment: initial; counter-reset: initial; counter-set: initial; cursor: initia=
l; cx: initial; cy: initial; d: initial; display: block; dominant-baseline:=
 initial; empty-cells: initial; fill: initial; fill-opacity: initial; fill-=
rule: initial; filter: initial; flex: initial; flex-flow: initial; float: i=
nitial; flood-color: initial; flood-opacity: initial; grid: initial; grid-a=
rea: initial; height: initial; hyphenate-character: initial; hyphenate-limi=
t-chars: initial; hyphens: initial; image-orientation: initial; image-rende=
ring: initial; initial-letter: initial; inline-size: initial; inset-block: =
initial; inset-inline: initial; isolation: initial; letter-spacing: initial=
; lighting-color: initial; line-break: initial; line-height: initial; list-=
style: initial; margin-block: initial; margin: initial; margin-inline: init=
ial; marker: initial; mask: initial; mask-type: initial; math-depth: initia=
l; math-shift: initial; math-style: initial; max-block-size: initial; max-h=
eight: initial; max-inline-size: initial; max-width: initial; min-block-siz=
e: initial; min-height: initial; min-inline-size: initial; min-width: initi=
al; mix-blend-mode: initial; object-fit: initial; object-position: initial;=
 object-view-box: initial; offset: initial; opacity: initial; order: initia=
l; orphans: initial; outline: initial; outline-offset: initial; overflow-an=
chor: initial; overflow-clip-margin: initial; overflow-wrap: initial; overf=
low: initial; overlay: initial; overscroll-behavior-block: initial; overscr=
oll-behavior-inline: initial; overscroll-behavior: initial; padding-block: =
initial; padding: initial; padding-inline: initial; page: initial; page-ori=
entation: initial; paint-order: initial; perspective: initial; perspective-=
origin: initial; pointer-events: initial; quotes: initial; r: initial; resi=
ze: initial; rotate: initial; ruby-position: initial; rx: initial; ry: init=
ial; scale: initial; scroll-behavior: initial; scroll-margin-block: initial=
; scroll-margin: initial; scroll-margin-inline: initial; scroll-padding-blo=
ck: initial; scroll-padding: initial; scroll-padding-inline: initial; scrol=
l-snap-align: initial; scroll-snap-stop: initial; scroll-snap-type: initial=
; scroll-timeline: initial; scrollbar-color: initial; scrollbar-gutter: ini=
tial; scrollbar-width: initial; shape-image-threshold: initial; shape-margi=
n: initial; shape-outside: initial; shape-rendering: initial; size: initial=
; speak: initial; stop-color: initial; stop-opacity: initial; stroke: initi=
al; stroke-dasharray: initial; stroke-dashoffset: initial; stroke-linecap: =
initial; stroke-linejoin: initial; stroke-miterlimit: initial; stroke-opaci=
ty: initial; stroke-width: initial; tab-size: initial; table-layout: initia=
l; text-align: initial; text-align-last: initial; text-anchor: initial; tex=
t-combine-upright: initial; text-decoration: initial; text-decoration-skip-=
ink: initial; text-emphasis: initial; text-emphasis-position: initial; text=
-indent: initial; text-overflow: initial; text-shadow: initial; text-size-a=
djust: initial; text-transform: initial; text-underline-offset: initial; te=
xt-underline-position: initial; white-space: initial; timeline-scope: initi=
al; touch-action: initial; transform: initial; transform-box: initial; tran=
sform-origin: 0px 0px; transform-style: initial; transition: initial; trans=
late: initial; user-select: initial; vector-effect: initial; vertical-align=
: initial; view-timeline: initial; view-transition-name: initial; visibilit=
y: initial; border-spacing: initial; -webkit-box-align: initial; -webkit-bo=
x-decoration-break: initial; -webkit-box-direction: initial; -webkit-box-fl=
ex: initial; -webkit-box-ordinal-group: initial; -webkit-box-orient: initia=
l; -webkit-box-pack: initial; -webkit-box-reflect: initial; -webkit-line-br=
eak: initial; -webkit-line-clamp: initial; -webkit-mask-box-image: initial;=
 -webkit-print-color-adjust: initial; -webkit-rtl-ordering: initial; -webki=
t-ruby-position: initial; -webkit-tap-highlight-color: initial; -webkit-tex=
t-combine: initial; -webkit-text-decorations-in-effect: initial; -webkit-te=
xt-fill-color: initial; -webkit-text-security: initial; -webkit-text-stroke=
: initial; -webkit-user-drag: initial; -webkit-user-modify: initial; widows=
: initial; width: initial; will-change: initial; word-break: initial; word-=
spacing: initial; x: initial; y: initial; z-index: initial; }

.mv6V_w { display: block; overflow: hidden; pointer-events: none; }

.H6KCog, .mv6V_w { left: 0px; position: absolute; top: 0px; }

.TRWryw { height: 100%; width: 100%; }

html { --safe-area-inset-top: 0px; --safe-area-inset-bottom: 0px; --safe-ar=
ea-inset-left: 0px; --safe-area-inset-right: 0px; }

@supports (height:env(safe-area-inset-top)) {
  html { --safe-area-inset-top: env(safe-area-inset-top); --safe-area-inset=
-bottom: env(safe-area-inset-bottom); --safe-area-inset-left: env(safe-area=
-inset-left); --safe-area-inset-right: env(safe-area-inset-right); }
}

.dark, .light { --mZd2dw: #00c4cc; --7dKt9A: #7d2ae8; --PfAhjQ: rgba(13,18,=
22,0); --qoG_LA: rgba(36,49,61,.4); --WIvwOg: rgba(43,59,74,.3); --mu_GGA: =
hsla(0,0%,100%,.7); --djTVRw: #fff; }

._9fh_OQ, .uqLJQA { box-sizing: border-box; position: absolute; }

@media print {
  ._9fh_OQ, .uqLJQA { display: none; }
}

.b5uQwQ._9fh_OQ { height: 100%; max-width: 160px; min-width: 64px; right: 0=
px; top: 0px; width: 30%; }

._5h5zUg.uqLJQA { bottom: 0px; height: 64px; left: 0px; min-height: 64px; w=
idth: 100%; }

.Y_4bbQ { box-sizing: border-box; height: 100%; opacity: 1; position: absol=
ute; right: 0px; }

.z4Hd7Q { background-image: ; background-position-x: ; background-position-=
y: ; background-repeat: ; background-attachment: ; background-origin: ; bac=
kground-clip: ; background-color: ; background-size: 100% 100vh; height: 10=
0%; width: 100%; }

.A6PJvg { align-items: flex-end; box-sizing: border-box; display: flex; pad=
ding: 8px; position: absolute; transition: opacity 0.25s ease 0s; }

._5h5zUg .A6PJvg { background: linear-gradient(to bottom,var(--PfAhjQ) 0,va=
r(--WIvwOg) 100%); bottom: 0px; flex-direction: row; height: 64px; left: 0p=
x; width: 100%; }

.b5uQwQ .A6PJvg { background: linear-gradient(to right,var(--PfAhjQ) 0,var(=
--WIvwOg) 100%); flex-direction: column; height: 100%; right: 0px; top: 0px=
; width: 64px; }

.oRD7IQ { border-radius: 100%; color: var(--mu_GGA); cursor: pointer; flex-=
basis: fit-content; height: 32px; padding: 8px 0px; width: 32px; }

.b5uQwQ .oRD7IQ { margin: 8px 0px; padding: 8px 0px; }

._5h5zUg .oRD7IQ { margin: 0px 8px; padding: 0px 8px; }

.oRD7IQ.ddkS9A, .oRD7IQ.ddkS9A:hover { background-color: transparent; color=
: var(--mu_GGA); cursor: not-allowed; opacity: 0.5; }

.rfjcfA { flex: 1 1 auto; flex-direction: inherit; }

._99eNQQ, .rfjcfA { align-items: center; display: flex; justify-content: ce=
nter; }

._99eNQQ { -webkit-tap-highlight-color: transparent; cursor: pointer; flex-=
grow: 1; height: 100%; padding: 2px; width: 100%; }

._5h5zUg ._99eNQQ { height: 32px; }

.b5uQwQ ._99eNQQ { width: 32px; }

.SJUElg { background-color: var(--mu_GGA); border-radius: 4px; height: 100%=
; position: relative; width: 100%; }

._5h5zUg .SJUElg { height: 4px; }

.b5uQwQ .SJUElg { width: 4px; }

._99eNQQ.gFh1Bw .SJUElg, .pSW2Cg { background-color: var(--djTVRw); }

.pSW2Cg { border-radius: 4px; height: 100%; left: 0px; position: absolute; =
top: 0px; width: 100%; }

._9fh_OQ .A6PJvg { opacity: 0; pointer-events: none; }

._9fh_OQ.xNKv9w .Y_4bbQ { display: none; }

._9fh_OQ .Y_4bbQ._0VgJyg { opacity: 0; transition: opacity 0.5s ease 0.5s; =
}

._9fh_OQ.xNKv9w .A6PJvg { opacity: 1; pointer-events: all; }

.ZU5OUQ._6MozXA, ._9fh_OQ.xNKv9w .ZU5OUQ { opacity: 0; pointer-events: none=
; transition-delay: 0s; }

.ZU5OUQ { bottom: 0px; margin-bottom: 12px; opacity: 1; position: absolute;=
 right: 12px; transition: opacity 0.25s ease 0.2s; z-index: 1; }

@media (hover: hover) {
  ._99eNQQ:hover .SJUElg { background-color: var(--djTVRw); }
  .b5uQwQ ._99eNQQ:hover .SJUElg { width: 6px; }
  ._5h5zUg ._99eNQQ:hover .SJUElg { height: 6px; }
  ._9fh_OQ:hover .A6PJvg { opacity: 1; pointer-events: all; }
  .oRD7IQ:hover { background-color: var(--VghWaA); color: var(--djTVRw); }
  ._9fh_OQ:hover .ZU5OUQ { opacity: 0; pointer-events: none; transition-del=
ay: 0s; }
  .b5uQwQ:hover .A6PJvg { background: linear-gradient(to right,var(--PfAhjQ=
) 0,var(--qoG_LA) 100%); }
  ._5h5zUg:hover .A6PJvg { background: linear-gradient(to bottom,var(--PfAh=
jQ) 0,var(--qoG_LA) 100%); }
  ._9fh_OQ:hover .Y_4bbQ { display: none; }
}

.UKMuSA { margin: 0px auto; position: relative; }

.p3wqJQ { position: sticky; top: 0px; }

@media print {
  .UKMuSA { contain: size; }
}

.W7fxeA, ._1chiqA, .bMISeQ { fill: rgb(13, 18, 22); stroke: rgba(255, 255, =
255, 0.3); stroke-width: 2px; paint-order: stroke; }

.Rt1H_w { background-color: rgba(181, 181, 181, 0.22); height: 100%; left: =
0px; top: 0px; width: 100%; }

.Rt1H_w, ._5sVuA { position: absolute; }

._5sVuA { left: 50%; top: 50%; transform: translate(-50%, -50%); }

.S3wQqg { height: 100%; opacity: 0; width: 100%; }

.lKZixA { transition: opacity 0.15s ease-in-out 0s; }

._8YzbFQ { opacity: 1; }

.W9j_bQ iframe { pointer-events: none; }

.S3wQqg iframe { border: none; color-scheme: none; }

.uqhtBg { height: inherit; width: inherit; }

.iJd_7g { display: block; left: 0px; top: 0px; }

.hVT_uA, .iJd_7g { height: 100%; position: absolute; width: 100%; }

.hVT_uA { opacity: 1; transition: opacity 0.15s ease-in-out 0s; }

.PgAXEw { opacity: 0; pointer-events: none; }

.ma5szw { height: 100%; width: 100%; }

.MiiB6g { background-color: rgba(53, 71, 90, 0.2); border-radius: 4px; padd=
ing: 4px; }

.MiiB6g, .POEOEA { position: absolute; }

._SnsKg { color: rgb(255, 255, 255); margin: 8px; right: 0px; top: 0px; tra=
nsition: opacity 0.1s ease-in 0s; }

.ulKpqw { position: relative; }

@media print {
  .ulKpqw { contain: size; }
}

.W7Xakg { height: 100%; user-select: none; }

.vxNhlg { display: block; }

.vxNhlg, .zGa_4A { height: 100%; position: absolute; width: 100%; }

.bktrlw { stroke: rgb(141, 57, 250); }

.bFnJ2A { left: 0px; overflow: hidden; top: 0px; }

._7KaXww, .bFnJ2A { position: absolute; }

._7KaXww { height: 0px; width: 0px; }

.qhHTGg { pointer-events: none; position: relative; }

._4c2rDg { height: 100%; width: 100%; }

.GxUsfw { transition: transform 0.3s ease 0s; }

.a26Xuw { height: 100%; width: 100%; }

.a26Xuw ::selection { user-select: none; }

.fbzKiw { inset: 0px; position: absolute; }

.PcHy7w { height: 100%; width: 100%; }

.Izwocg { position: relative; }

.uk_25A { height: 100%; width: 100%; }

.Ty61NA { transition: transform 0.3s ease 0s; }

._5n21nQ { border: solid rgb(141, 57, 250); inset: 0px; position: absolute;=
 }

.blfgDw { background-image: url("images/87e22a62965f141aa08e93699b0b3527.jp=
g"); background-position: 50% center; background-size: auto 100%; }

.GyzK6g { visibility: hidden; }

.DPaZ7Q, ._7_i_XA { display: block; height: 100%; pointer-events: none; pos=
ition: absolute; width: 100%; }

.DPaZ7Q, ._7_i_XA { object-fit: fill; }

.Dt3KRw { position: absolute; }

.Dt3KRw, ._407_UQ, ._407_UQ svg { display: block; height: 100%; width: 100%=
; }

._407_UQ svg { overflow: hidden; }

.dMHlHA { display: block; height: 100%; pointer-events: none; position: abs=
olute; width: 100%; }

._mXnjA { position: relative; }

._3r7vyg, ._6t4CHA { pointer-events: auto; }

._6t4CHA { inset: 0px; outline: none; overflow: hidden; position: absolute;=
 }

.twbtjQ { direction: ltr; position: relative; }

._8V1tNw { inset: 0px; pointer-events: none; position: absolute; }

.GDnEHQ { overflow: hidden; }

.o2Yl2g { transform-origin: 0px 0px; }

.QhExXw { bottom: 0px; direction: ltr; left: 0px; pointer-events: none; pos=
ition: absolute; }

.QhExXw.pKfnlA { transform: translateZ(0px); }

.onhyOQ { border-radius: inherit; box-sizing: border-box; display: flex; ju=
stify-content: center; overflow: hidden; position: relative; }

.r6_0Ig { direction: ltr; overflow: hidden; }

.D5ebuw { height: 0px; position: relative; transform-origin: 0px 0px; width=
: 0px; }

._nT9Lw, .w24iLA { left: 0px; position: absolute; top: 0px; }

._nT9Lw { align-items: center; bottom: 0px; display: flex; justify-content:=
 center; pointer-events: none; right: 0px; }

.zXqj8Q { background-position: 50% center; background-repeat: repeat; backg=
round-size: 16px 16px; flex-shrink: 0; transform-origin: center center; }

.YkerfQ { position: absolute; }

.S9nxOw, .ShKbZQ { display: block; position: absolute; }

.ShKbZQ { left: 0px; overflow: hidden; pointer-events: none; top: 0px; }

.VnEF2A { left: 0px; position: absolute; top: 0px; }

.CUuPFw, ._6k14ug { height: 100%; width: 100%; }

.CUuPFw { display: grid; }

._9Yq8nQ { outline: none; overflow: hidden; position: relative; }

.pTpG7Q { border-style: solid; inset: 0px; mask: linear-gradient(rgb(255, 2=
55, 255), rgb(255, 255, 255)) padding-box clear, linear-gradient(rgb(255, 2=
55, 255), rgb(255, 255, 255)); overflow: hidden; pointer-events: none; posi=
tion: absolute; }

.vRDMWw { mask-composite: exclude; }

.JQ_8Dw, .m75bhg { box-sizing: border-box; height: 100%; overflow: hidden; =
width: 100%; }

.JQ_8Dw { display: grid; position: relative; }

._4mB2uw { inset: 0px; overflow: hidden; position: absolute; }

.bDwApw { box-sizing: border-box; }

.bDwApw, .hoR9IA, .mHt_qw { position: relative; }

.mHt_qw { height: 100%; width: 100%; }

.XfKgYw, ._lXXwg { inset: 0px; position: absolute; }

.Y6OU1g { background-size: 100% 100%; height: 100%; width: 100%; }

.XI67vg .ql-editor ::selection { background: transparent; }

.VlMoIw { box-sizing: border-box; position: relative; }

.XTfT4g { margin: 0px auto; width: 100%; }

.pWJC3Q { display: grid; }

.CeXnxQ { min-width: 0px; }

.Bnw52g, .CeXnxQ { display: flex; flex-direction: column; position: relativ=
e; }

.Bnw52g { box-sizing: border-box; height: 100%; pointer-events: none; width=
: 100%; }

.WrMvpw { cursor: text; flex-grow: 1; }

.WrMvpw, .n_M8Uw { pointer-events: auto; }

._99Cl8g { height: 100%; position: relative; }

._6vHSyg { opacity: 0; overflow: visible; pointer-events: none; position: f=
ixed; width: 100%; }

.VI7ioA, ._6vHSyg { box-sizing: border-box; left: 0px; top: 0px; }

.VI7ioA { position: absolute; }

.w8_DaA { display: grid; min-width: fit-content; width: 100%; }

._onfsw, .w8_DaA { box-sizing: border-box; line-height: 0; }

._onfsw { display: inline-grid; min-height: 100%; min-width: 100%; }

.WpENtw, ._5CWFRA, .b6TClg { box-sizing: border-box; line-height: 0; }

.ajuqWw { height: 100%; }

.CLDl2Q, .ajuqWw { width: 100%; }

.CLDl2Q, .ajuqWw, .o8O6ZA { box-sizing: border-box; line-height: 0; }

.o8O6ZA { min-height: 5px; min-width: 5px; }

.r5wnFA { flex: 1 1 0%; }

._4Z3UgA { min-height: 32px; }

.GdC69Q { margin: -4px; }

.bZOQfA { scroll-padding-bottom: var(--mBqY5A,0); scroll-padding-top: var(-=
-oZQU0Q,0); }

.bZOQfA:has(.ZxrqGQ:focus-within) { scroll-padding-top: 0px; }

.bZOQfA:has(.Y_V_gw:focus-within) { scroll-padding-bottom: 0px; }

.jQLKLw { bottom: 0px; height: 100%; left: 0px; position: fixed; transform:=
 translateY(calc(var(--8gqqmQ, 0px) - var(--4-IqNQ, 0px))); transition: tra=
nsform 0.2s ease 0s; width: 100%; }

@supports (top:100svh) {
  .jQLKLw { height: 100vh; }
}

.jQLKLw:not(.G0knkQ) { pointer-events: none; }

.G0knkQ { background-color: rgba(13, 18, 22, 0); touch-action: none; }

.DtAzyA .G0knkQ { transition: background-color 0.2s ease-in-out 0s; }

.N987xw .G0knkQ { background-color: var(--olfr3Q); }

.oOFzGQ { bottom: var(--safe-area-inset-bottom); left: 0px; position: absol=
ute; right: 0px; top: calc(var(--safe-area-inset-top) + var(--_q5OVw, 0px))=
; }

@supports (bottom:max(0px,0px)) {
  .oOFzGQ { bottom: max(0px,calc(var(--safe-area-inset-bottom) - var(--4-Iq=
NQ, 0px))); top: calc(max(var(--safe-area-inset-top), calc(2 * 8px)) + var(=
--_q5OVw, 0px)); }
}

.L56DCA { bottom: calc(var(--safe-area-inset-bottom)*-1); display: flex; fl=
ex-direction: column; height: calc(var(--ZEyO0A, 100%) + var(--safe-area-in=
set-bottom)); isolation: isolate; max-height: var(--rAO2jQ,100%); pointer-e=
vents: auto; position: absolute; transform: translateY(100%); width: 100%; =
}

.DtAzyA .L56DCA { transition: transform 0.2s ease-in-out 0s; }

.N987xw .L56DCA { transform: translateY(0px); }

.L56DCA._89qMeg:not(.YM2Qkw) { height: auto; max-height: calc(var(--ZEyO0A,=
 100%) + var(--safe-area-inset-bottom)); }

@supports (bottom:max(0px,0px)) {
  .L56DCA._89qMeg:not(.YM2Qkw) { max-height: min(calc(var(--ZEyO0A, 100%) +=
 var(--safe-area-inset-bottom)),var(--rAO2jQ,100%)); }
}

.L56DCA.YM2Qkw { bottom: unset; height: calc(100% + var(--safe-area-inset-b=
ottom)); top: calc(100% - var(--ZEyO0A, 100%)); will-change: transform; }

@supports (bottom:max(0px,0px)) {
  .L56DCA.YM2Qkw { height: min(calc(100% + var(--safe-area-inset-bottom)),v=
ar(--rAO2jQ,100%)); top: max(calc(100% - var(--ZEyO0A, 100%)),calc(100% - v=
ar(--rAO2jQ, 100%) + var(--safe-area-inset-bottom))); }
}

.L56DCA.YM2Qkw .e8J_5Q { overflow-y: hidden; }

.UPTs0A { bottom: 100%; height: 100vh; position: absolute; width: 100%; }

.d91g7A { display: flex; flex-shrink: 0; height: 8px; justify-content: cent=
er; overflow: visible; position: relative; }

._3pND7g { background: var(--Zya5eQ); border-radius: 9999px; box-shadow: va=
r(--wlsoXA); height: 4px; width: 32px; z-index: 2; }

._3pND7g, ._3pND7g::before { bottom: -8px; position: absolute; }

._3pND7g::before { content: ""; height: 44px; left: 50%; transform: transla=
te(-22px); width: 44px; }

.e8J_5Q { background: var(--4RaSjg); border-radius: 16px 16px 0px 0px; box-=
shadow: var(--wlsoXA); flex: 1 0 0px; overflow-y: auto; overscroll-behavior=
: contain; position: relative; }

.t7Qghg .e8J_5Q { display: flex; flex-direction: column; }

.e8J_5Q._0jpeNw { padding-bottom: var(--safe-area-inset-bottom); }

.vALUZQ { touch-action: none; }

._89qMeg .e8J_5Q { flex-basis: auto; flex-shrink: 1; }

._QgJ_g { position: sticky; top: 0px; z-index: 1; }

.FyOF2Q { border-bottom: 1px solid var(--OuCkCQ); }

._42c0fg { flex: 1 0 auto; z-index: 0; }

._7SWh2g { bottom: 0px; position: sticky; }

._2Cfibw { align-items: center; background-color: var(--olfr3Q); inset: 0px=
; display: flex; justify-content: center; opacity: 0; overflow-y: auto; pos=
ition: fixed; }

._2Cfibw.Ue5QFA { transition: opacity 0.25s ease-in-out 0s; }

._2Cfibw.SCu3NA { position: absolute; }

._2Cfibw.FFYPwA { background-color: rgba(13, 18, 22, 0.7); }

._2Cfibw.Wwu0TA { background-color: rgba(0, 0, 0, 0.9); }

._2Cfibw.AD_uww { backdrop-filter: blur(4px); }

._2Cfibw.qm8y8Q { backdrop-filter: blur(14px); }

._2Cfibw.FijAlA { opacity: 1; }

._1PHgrg { box-sizing: border-box; display: flex; margin: auto 0px; max-wid=
th: 100%; padding: calc(var(--ZINaFw, calc(8px * 2)) + var(--safe-area-inse=
t-top)) calc(var(--MhPDhQ, calc(8px * 6)) + var(--safe-area-inset-right)) c=
alc(var(--ZINaFw, calc(8px * 2)) + var(--safe-area-inset-bottom)) calc(var(=
--MhPDhQ, calc(8px * 6)) + var(--safe-area-inset-left)); pointer-events: no=
ne; transform: scale(0.8); will-change: transform; }

._1PHgrg.FijAlA { transform: scale(1); }

.Ue5QFA ._1PHgrg { transition: transform 0.25s ease-in-out 0s; }

.DLRQ_Q { border-radius: 16px; flex: 1 1 0%; max-width: 100%; outline-offse=
t: 2px; pointer-events: auto; }

.DLRQ_Q.oLYBEA { flex: initial; height: 100%; }

.DLRQ_Q.CdyDCQ { outline: none; }

.LBYU2A { align-self: flex-start; margin-right: calc(var(--MhPDhQ, calc(8px=
 * 6))*-1); order: 1; padding: 0px 8px; position: sticky; top: var(--ZINaFw=
,16px); z-index: 1; }

.OcLwmg { bottom: calc(50vh - var(--MhPDhQ, calc(8px * 6))/2); padding: 8px=
; pointer-events: auto; position: sticky; top: calc(50vh - var(--MhPDhQ, ca=
lc(8px * 6))/2); width: var(--MhPDhQ,48px); }

.uFBYmQ { margin-left: calc(var(--MhPDhQ, calc(8px * 6))*-1); }

.IhH0hA { margin-right: calc(var(--MhPDhQ, calc(8px * 6))*-1); }

.hpS1MQ { background-color: var(--4RaSjg); width: 100%; }

.NsNeXQ { position: relative; }

.URlirA { position: absolute; right: -40px; top: 0px; }

.rQfyHg { pointer-events: auto; }

.jFgwrw { border-radius: 16px; box-shadow: var(--ej6pBg); isolation: isolat=
e; min-width: 160px; overflow: hidden; position: relative; }

.jFgwrw.oLYBEA { height: 100%; }

@media (max-width: 599px) {
  ._1PHgrg { --MhPDhQ: 16px; flex-direction: column-reverse; height: 100%; =
margin: 0px; width: 100%; }
  .LBYU2A { align-self: flex-end; margin-right: 0px; padding: 0px 0px 8px; =
}
  .DLRQ_Q { display: flex; flex: 0 1 auto; flex-direction: column; max-heig=
ht: calc(100% - 40px); position: relative; }
  .DLRQ_Q.cJ4zDA { max-height: 100%; }
  .NsNeXQ { border-radius: 16px; display: flex; min-height: 0px; overflow: =
hidden; }
  .jFgwrw { overflow-y: auto; }
}

._088g1Q { display: flex; }

.qJNLGw { overflow: hidden; position: relative; }

.dt4Dlg { display: block; width: 100%; }

.I0d4kg { bottom: 8px; opacity: 0; position: absolute; right: 8px; }

.MORa8Q { left: 0px; pointer-events: none; position: absolute; top: 0px; }

.MORa8Q, .N86L8w { height: 100%; width: 100%; }

.N86L8w { position: relative; }

.N86L8w._8M2WtA .I0d4kg, .N86L8w:focus-within .I0d4kg, .N86L8w:hover .I0d4k=
g { opacity: 1; pointer-events: auto; }

.N86L8w ::selection { user-select: none; }

.KQlPUA { transition: opacity 0.15s ease-in-out 0s; }

.CcH9OA { align-items: center; display: flex; height: 80vh; justify-content=
: center; margin-left: auto; margin-right: auto; overflow: visible; width: =
80vw; }

.OLZ4fQ.Mq03ww { cursor: zoom-in; overflow: hidden; transition: transform 0=
.1s ease 0s; }

.OLZ4fQ.ayJq_w { transition: none 0s ease 0s; }

.OLZ4fQ.Mq03ww.GOtpHg { cursor: zoom-out; }

.OLZ4fQ.Mq03ww:active { cursor: grabbing; }

@media (max-width: 899px) {
  .CcH9OA { max-height: 90vh; max-width: 90vw; }
}

.V7MmMA { transform-origin: 0px 0px; }

.Fe_H_Q, .V7MmMA { height: 100%; width: 100%; }

.Fe_H_Q { display: block; min-height: 1px; min-width: 1px; overflow: visibl=
e; position: absolute; }

._0yZ6Qg { text-rendering: geometricprecision; }

.aF9o6Q { height: 100%; }

.XfBqww { user-select: text; }

._4volQg { box-sizing: border-box; position: absolute; }

.P_k4oA { opacity: 0.6; pointer-events: none; }

.Hrnaiw { cursor: grab; }

.vmQN7A { background-color: rgb(255, 255, 255); border-radius: inherit; dis=
play: block; width: 100%; }

.jIv_OQ, .nJM7bw { box-shadow: var(--wlsoXA); height: 64px; position: absol=
ute; width: 100%; }

.jIv_OQ { border-radius: 0px 0px 8px 8px; clip-path: inset(56px -24px -24px=
); top: -56.5px; }

.nJM7bw { border-radius: 8px 8px 0px 0px; bottom: -56.5px; clip-path: inset=
(-24px -24px 56px); }

.xalUOg { padding: calc(56px*var(--zfrIqg, 1) - 8px) 0; }

.g9bP1Q { padding: calc(56px*var(--zfrIqg, 1) - 8px) 0 0 0; }

.lrLMxg { height: calc(24px*var(--zfrIqg, 1)); pointer-events: none; positi=
on: relative; }

.qqQvlg { bottom: -8px; top: -8px; width: 100%; }

.cCNnww, .qqQvlg { position: absolute; }

.cCNnww { background-color: var(--Tp54Vw); height: 100%; margin-left: -24px=
; width: calc(100% + 48px); }

.ep4pLQ { break-after: page; }

.qei1HA { border-radius: 8px 8px 0px 0px; clip-path: border-box; }

._HHXEw { display: flex; }

._HHXEw .HanH9g { height: 100%; position: absolute; width: 100%; }

.xalUOg .HanH9g { bottom: 0px; position: absolute; top: 0px; width: 100%; }

.wa4m_A .ql-editor .blockEmbed.blotPageBreakItem[class*=3D"item-comment-"] =
.xalUOg .HanH9g { background-color: var(--_d_pTQ,#e7dbff); }

.wa4m_A .ql-editor .blockEmbed.blotPageBreakItem[class*=3D"item-comment-"] =
._HHXEw .HanH9g { outline: 8px solid var(--_d_pTQ,#e7dbff); }

.kP_RVg { flex: 0 0 auto; height: var(--k9SmeA); width: var(--k9SmeA); }

.gpYRPA { font-size: var(--k9SmeA); }

.VaW8_A { border-radius: 9999px; color: var(--pDK9Gw); }

.VaW8_A.cUFFRA { border-radius: 4px; }

.VaW8_A ::selection { fill: var(--pDK9Gw); }

.yCT70Q { r: 50%; }

.yCT70Q._2LVP_g { r: calc(50% - 1px); stroke-width: 2px; paint-order: fill;=
 }

.cUFFRA { border-radius: 4px; }

.cUFFRA._2LVP_g { x: 1px; y: 1px; rx: calc((var(--k9SmeA) - 2px)*.1); ry: c=
alc((var(--k9SmeA) - 2px)*.1); stroke-width: 2px; height: calc(var(--k9SmeA=
) - 2px); paint-order: fill; width: calc(var(--k9SmeA) - 2px); }

.light { --FzoXNQ: #f0f1f5; }

.dark { --FzoXNQ: #252627; }

.n8XGZg { background-image: initial; background-position: 50% center; backg=
round-size: cover; background-repeat: no-repeat; background-attachment: ini=
tial; background-origin: initial; background-clip: content-box; background-=
color: var(--FzoXNQ); border-radius: 9999px; box-sizing: border-box; displa=
y: block; font-family: "Canva Sans", "Noto Sans Variable", "Noto Sans", -ap=
ple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif; o=
verflow: hidden; }

.n8XGZg.P3N3Pw { border-radius: 4px; }

.JwH6AA { box-shadow: inset 0 0 0 2px var(--RKyZlA); }

.QJpRHw { box-shadow: inset 0 0 0 1px var(--OuCkCQ); }

._1niDPQ > ._5_06KQ, ._1niDPQ > .a952jg { transition: opacity 0.3s ease-in-=
out 0s; }

._QukmA, .a952jg { opacity: 0; }

._5_06KQ { opacity: 1; }

.Q6kGbg > .orZOEA { display: none; }

._9j7ODw > .orZOEA { visibility: hidden; }

._9GxJfQ { width: 100%; }

.KwB0XQ { overflow: hidden; }

._9GxJfQ._2uSJxw { display: flex; }

.m2VaAA { display: grid; grid-template: "content" 1fr / 1fr; position: rela=
tive; }

.WV1Mmw, .WV1Mmw > .m2VaAA { height: 100%; max-height: 100%; }

._2uSJxw, ._2uSJxw > .m2VaAA { flex: 1 1 0%; }

.KxXR9g { grid-area: content; }

.FedJ0Q { box-sizing: border-box; display: inline-block; max-width: 100%; p=
osition: relative; white-space: nowrap; }

.FedJ0Q:hover { cursor: default; }

._2Lr6pQ { box-sizing: border-box; display: inline-flex; max-width: 100%; o=
verflow: hidden; text-align: start; vertical-align: bottom; visibility: hid=
den; }

._2Lr6pQ.EdewNw .Z_WvzQ { margin-left: 1.025em; }

._2Lr6pQ.EdewNw:not(.pzXyUA) .Z_WvzQ { margin-left: 0.9em; }

._2Lr6pQ._6ZpPrw.pzXyUA .Z_WvzQ { margin-right: 1.025em; }

._2Lr6pQ._6ZpPrw:not(.pzXyUA) .Z_WvzQ { margin-right: 0.9em; }

._2Lr6pQ.pzXyUA:not(._6ZpPrw) .Z_WvzQ { margin-right: 0.2em; }

.XemTdQ { align-items: center; box-sizing: border-box; display: inline-grid=
; grid-auto-flow: column; left: 0px; line-height: normal; max-width: 100%; =
overflow: hidden; position: absolute; text-align: start; top: 50%; transfor=
m: translateY(-50%); user-select: none; width: 100%; }

.XemTdQ.pzXyUA.EdewNw:not(._6ZpPrw) { gap: 0.125em; grid-template-columns: =
0.9em 1fr; }

.XemTdQ.pzXyUA._6ZpPrw:not(.EdewNw) { gap: 0.125em; grid-template-columns: =
1fr 0.9em; }

.XemTdQ.pzXyUA._6ZpPrw.EdewNw { gap: 0.125em; grid-template-columns: 0.9em =
1fr 0.9em; }

.XemTdQ.pzXyUA:not(._6ZpPrw):not(.EdewNw) { grid-template-columns: 1fr; }

.XemTdQ.EdewNw:not(.pzXyUA):not(._6ZpPrw), .XemTdQ._6ZpPrw:not(.pzXyUA):not=
(.EdewNw) { grid-template-columns: 0.9em; }

.XemTdQ::before { background-color: currentcolor; border-radius: 2em; conte=
nt: ""; height: 100%; opacity: 0.1; position: absolute; width: 100%; }

.XemTdQ:hover::before { opacity: 0.2; }

.U_QH_A { display: block; overflow: hidden; position: relative; }

.U_QH_A.C9XL8g { text-overflow: ellipsis; }

.U_QH_A::selection { background: transparent; }

.vgTP5Q { color: inherit; position: relative; text-decoration: none; }

.vgTP5Q::after { inset: 0px; content: ""; position: absolute; }

.XemTdQ, ._2Lr6pQ { padding: 0px 0.3em 0px 0.2em; }

.XemTdQ:not(.pzXyUA):not(._6ZpPrw), ._2Lr6pQ:not(.pzXyUA):not(._6ZpPrw) { p=
adding-right: 0.2em; }

.XemTdQ:not(.EdewNw), ._2Lr6pQ:not(.EdewNw) { padding-left: 0.5em; }

._tFJqA { align-items: center; display: inline-flex; height: 100%; position=
: relative; }

._tFJqA, ._tFJqA > svg, .qpbYdw { width: 100%; }

.qpbYdw { border-radius: 0.2em; }

.whph4A { transition: transform 0.3s ease-out 0s; }

.whph4A.zgzjww { transform: rotate(-180deg); }

.Zp7NQw { height: 100%; overflow: hidden; position: relative; width: 100%; =
}

.Csmo7A, .fSk_JA { display: flex; justify-content: center; position: relati=
ve; }

.fSk_JA, .piaS2g { overflow: hidden; }

.piaS2g { height: 100%; width: 100%; }

.LBU2KA { overflow-y: auto; }

.Omi3ZA { overflow-x: auto; }

.light { --c0UyoQ: 0 0 0 1px rgba(64,87,109,.07),0 0 8px 0 rgba(57,76,96,.1=
5); --7mVY-Q: 0 0 0 1px rgba(64,87,109,.07),0 0 8px 0 rgba(57,76,96,.15); -=
-ozux8A: 0 0 0 1px rgba(64,87,109,.07),0 0 8px 0 rgba(57,76,96,.15); --aUkm=
1A: 0 0 0 1px rgba(64,87,109,.07),0 0 8px 0 rgba(57,76,96,.15); }

.dark { --c0UyoQ: 0 0 20px 20px var(--Tp54Vw); --7mVY-Q: 0 0 20px 20px var(=
--dVucJw); --ozux8A: 0 0 20px 20px var(--C-q6Ig); --aUkm1A: 0 0 20px 20px v=
ar(--4RaSjg); }

.i24Qzw { --G8f7Mg: 0 0 20px 20px var(--Tp54Vw); --3VXgxw: var(--c0UyoQ); }

.J7MRLA { --G8f7Mg: 0 0 20px 20px var(--dVucJw); --3VXgxw: var(--7mVY-Q); }

.ze9m4A { --G8f7Mg: 0 0 20px 20px var(--C-q6Ig); --3VXgxw: var(--ozux8A); }

.iA8hvw { --G8f7Mg: 0 0 20px 20px var(--4RaSjg); --3VXgxw: var(--aUkm1A); }

.iGVGMg { display: flex; position: relative; }

.iGVGMg._gATaQ { flex-direction: column; }

.iGVGMg.fefKhw { flex-direction: row; }

.kFFH_Q { position: sticky; z-index: 1; }

.kFFH_Q._gATaQ.UOgYeQ, .kFFH_Q._gATaQ.ddzWGA { height: 0px; }

.kFFH_Q._gATaQ.UOgYeQ { top: 0px; }

.kFFH_Q._gATaQ.ddzWGA { top: 100%; }

.kFFH_Q.fefKhw.UOgYeQ, .kFFH_Q.fefKhw.ddzWGA { width: 0px; }

.kFFH_Q.fefKhw.UOgYeQ { left: 0px; }

.kFFH_Q.fefKhw.ddzWGA { left: 100%; }

.kLHWmg { opacity: 0; position: absolute; }

._8f7ZWw { box-shadow: var(--G8f7Mg); }

.dKRscg { box-shadow: var(--3VXgxw); }

.kLHWmg.a4_U3w { transition: opacity 0.25s ease 0s, box-shadow 0.1s linear =
0s; }

.kLHWmg._1HCJVw { opacity: 1; }

.kLHWmg._gATaQ.UOgYeQ { height: 16px; top: -16px; width: 100%; }

.kLHWmg._gATaQ.ddzWGA { bottom: -16px; height: 16px; width: 100%; }

.kLHWmg.fefKhw.UOgYeQ { height: 100%; left: -16px; width: 16px; }

.kLHWmg.fefKhw.ddzWGA { height: 100%; right: -16px; width: 16px; }

.tFXIEw { height: 100%; isolation: isolate; width: 100%; }

.UYpUfA { background-color: rgb(255, 255, 255); }

.qH_TIA { display: flex; flex-direction: column; transform-origin: 0px 0px;=
 }

@font-face { font-display: block; font-family: calibrate; src: url("images/=
b46630e470f4040eba7033cf2435edce.woff") format("woff"); }

.iRgHxQ { font-family: calibrate; font-size: 100px; line-height: 1; margin:=
 0px; padding: 0px; position: absolute; top: 0px; visibility: hidden; width=
: 100px; }

.w85Cgw { display: inline-block; height: 1px; vertical-align: baseline; wid=
th: 1px; }

._2UyCZQ { --H97cbQ: 16px; --Xm-_8w: 0; font-feature-settings: "liga" var(-=
-I1TtXQ,off),"clig" var(--rt6TaA,off),"calt" var(--o_YY6w,off); -webkit-fon=
t-smoothing: antialiased; text-size-adjust: none; color: rgb(0, 0, 0); cont=
ain: style; direction: ltr; font-family: unset; font-kerning: none; font-st=
yle: normal; font-synthesis: none; font-weight: 400; height: auto; letter-s=
pacing: 0px; line-height: 1.4; overflow: visible; overflow-wrap: break-word=
; padding: 0px; position: relative; tab-size: 4; text-align: left; text-tra=
nsform: none; white-space: normal; word-break: normal; }

.a_GcMg.Do51Bw { bottom: calc((var(--Xm-_8w)/100)*var(--H97cbQ)); line-heig=
ht: 0; position: relative; vertical-align: baseline; }

.a_GcMg.YLyPKw { --I1TtXQ: on; }

.a_GcMg.YLyPKw, .a_GcMg.w9fQyg { font-feature-settings: "liga" var(--I1TtXQ=
,off),"clig" var(--rt6TaA,off),"calt" var(--o_YY6w,off); }

.a_GcMg.w9fQyg { --rt6TaA: on; }

.a_GcMg.uHzYVw { --o_YY6w: on; font-feature-settings: "liga" var(--I1TtXQ,o=
ff),"clig" var(--rt6TaA,off),"calt" var(--o_YY6w,off); }

.a_GcMg.YLyPKw::after, .a_GcMg.uHzYVw::after, .a_GcMg.w9fQyg::after { conte=
nt: "=E2=80=8C"; }

.el5AzA { contain: none; }

.e1_zQg { pointer-events: auto; user-select: text; }

.SglrXg .jfNO9A { display: inline-flex; }

.SglrXg .eSUC2A { overflow: hidden; }

.Mb8E_A, .Mb8E_A .zYq_BQ { text-wrap: nowrap; overflow-wrap: normal; }

.zYq_BQ { white-space: pre-wrap; }

.J4GZTQ, ._28USrA, ._5eEERQ { font-size: var(--H97cbQ); margin: 0px; positi=
on: relative; }

.J4GZTQ { margin-block: 0px; margin-inline: 0px; }

.ld54Zw.ld54Zw { margin-inline: calc(var(--3foukQ, 0)*-1); padding: var(--3=
foukQ,0); }

.ld54Zw { background-clip: text; background-repeat: no-repeat; }

._5eEERQ .a_GcMg { letter-spacing: 0px; line-height: 1.2; position: absolut=
e; white-space: pre; }

._28USrA .xtSH_A { display: inline-block; }

.vkN2Cw ._28USrA { top: calc(var(--UF50hQ, 0)*1em); }

.vkN2Cw ._28USrA.hhtymQ ._28USrA.hhtymQ { top: 0px; }

.vkN2Cw ._28USrA, .vkN2Cw ._5eEERQ { margin-top: calc(var(--gixK-A)*1em); }

.vkN2Cw ._4N4NA { margin-top: 0px; }

.jvAkaQ ._28USrA, .jvAkaQ ._5eEERQ { margin-right: calc(var(--gixK-A)*1em);=
 }

.jvAkaQ ._4N4NA { margin-right: 0px; }

._8E_5FA ._28USrA, ._8E_5FA ._5eEERQ { margin-left: calc(var(--gixK-A)*1em)=
; }

._8E_5FA ._4N4NA { margin-left: 0px; }

.naUDPA { direction: rtl; }

._28USrA.XN6uKA.GEC0sA, ._28USrA.naUDPA.TV9a8Q { text-align: left; }

._28USrA.XN6uKA.AfeL7g, ._28USrA.naUDPA.AfeL7g { text-align: center; }

._28USrA.XN6uKA.TV9a8Q, ._28USrA.naUDPA.GEC0sA { text-align: right; }

._28USrA.XN6uKA._2ENCSQ, ._28USrA.naUDPA._2ENCSQ { text-align: justify; }

.S_UAwQ .a_GcMg { color: var(--ryhqxQ) !important; }

.vkN2Cw ._28USrA.XN6uKA { margin-left: calc(var(--kJ5CrQ)*1em); }

._8E_5FA ._28USrA.XN6uKA, .jvAkaQ ._28USrA.XN6uKA { margin-top: calc(var(--=
kJ5CrQ)*1em); }

.vkN2Cw ._28USrA.naUDPA { margin-right: calc(var(--kJ5CrQ)*1em); }

._8E_5FA ._28USrA.naUDPA, .jvAkaQ ._28USrA.naUDPA { margin-bottom: calc(var=
(--kJ5CrQ)*1em); }

.vkN2Cw ._28USrA.ld54Zw.XN6uKA { margin-left: calc(var(--kJ5CrQ)*1em + var(=
--3foukQ, 0)*-1); }

._8E_5FA ._28USrA.ld54Zw.XN6uKA, .jvAkaQ ._28USrA.ld54Zw.XN6uKA { margin-to=
p: calc(var(--kJ5CrQ)*1em + var(--3foukQ, 0)*-1); }

.vkN2Cw ._28USrA.ld54Zw.naUDPA { margin-right: calc(var(--kJ5CrQ)*1em + var=
(--3foukQ, 0)*-1); }

._8E_5FA ._28USrA.ld54Zw.naUDPA, .jvAkaQ ._28USrA.ld54Zw.naUDPA { margin-bo=
ttom: calc(var(--kJ5CrQ)*1em + var(--3foukQ, 0)*-1); }

._2UyCZQ .JS2Zuw { list-style-type: none; margin: 0px; padding: 0px; }

.hhtymQ { --3foukQ: 0px; display: list-item; padding: 0px; }

.R3Kctg, ._0jckkw::before { box-sizing: border-box; margin: 0px; padding: 0=
px; position: absolute; white-space: nowrap; }

.vkN2Cw .XN6uKA .R3Kctg { left: calc(var(--kJ5CrQ)*1em*-1); }

.vkN2Cw .naUDPA .R3Kctg { right: calc(var(--kJ5CrQ)*1em*-1); }

._8E_5FA .XN6uKA .R3Kctg, .jvAkaQ .XN6uKA .R3Kctg { top: calc(var(--kJ5CrQ)=
*1em*-1); }

._8E_5FA .naUDPA .R3Kctg, .jvAkaQ .naUDPA .R3Kctg { bottom: calc(var(--kJ5C=
rQ)*1em*-1); }

.vkN2Cw .XN6uKA .R3Kctg > .R3Kctg { left: 0px; }

.vkN2Cw .naUDPA .R3Kctg > .R3Kctg { right: 0px; }

._8E_5FA .XN6uKA .R3Kctg > .R3Kctg, .jvAkaQ .XN6uKA .R3Kctg > .R3Kctg { top=
: 0px; }

._8E_5FA .naUDPA .R3Kctg > .R3Kctg, .jvAkaQ .naUDPA .R3Kctg > .R3Kctg { bot=
tom: 0px; }

.cZVApw { display: list-item; position: absolute; }

.vkN2Cw .XN6uKA .cZVApw { right: 0px; }

.vkN2Cw .naUDPA .cZVApw { left: 0px; }

._8E_5FA .XN6uKA .cZVApw, .jvAkaQ .XN6uKA .cZVApw { bottom: 0px; }

._8E_5FA .naUDPA .cZVApw, .jvAkaQ .naUDPA .cZVApw { top: 0px; }

.vkN2Cw .R3Kctg, .vkN2Cw ._0jckkw::before { height: calc(var(--IOrplg)*1em)=
; width: calc(var(--kJ5CrQ)*1em); }

._8E_5FA .R3Kctg, ._8E_5FA ._0jckkw::before, .jvAkaQ .R3Kctg, .jvAkaQ ._0jc=
kkw::before { height: calc(var(--kJ5CrQ)*1em); width: calc(var(--IOrplg)*1e=
m); }

._0jckkw.XN6uKA::before { text-align: right; }

._0jckkw.naUDPA::before { text-align: left; }

.vkN2Cw ._0jckkw::before { padding-top: var(--3foukQ,0); }

.jvAkaQ ._0jckkw::before { padding-right: var(--3foukQ,0); }

._8E_5FA ._0jckkw::before { padding-left: var(--3foukQ,0); }

.vkN2Cw ._0jckkw.XN6uKA::before { left: calc(var(--kJ5CrQ)*1em*-1); padding=
-right: 0.1em; }

.vkN2Cw ._0jckkw.naUDPA::before { padding-left: 0.1em; right: calc(var(--kJ=
5CrQ)*1em*-1); }

._8E_5FA ._0jckkw.XN6uKA::before, .jvAkaQ ._0jckkw.XN6uKA::before { padding=
-bottom: 0.1em; top: calc(var(--kJ5CrQ)*1em*-1); }

._8E_5FA ._0jckkw.naUDPA::before, .jvAkaQ ._0jckkw.naUDPA::before { bottom:=
 calc(var(--kJ5CrQ)*1em*-1); padding-top: 0.1em; }

.vkN2Cw .R3Kctg ._0jckkw.XN6uKA::before { left: 0px; }

.vkN2Cw .R3Kctg ._0jckkw.naUDPA::before { right: 0px; }

._8E_5FA .R3Kctg ._0jckkw.XN6uKA::before, .jvAkaQ .R3Kctg ._0jckkw.XN6uKA::=
before { top: 0px; }

._8E_5FA .R3Kctg ._0jckkw.naUDPA::before, .jvAkaQ .R3Kctg ._0jckkw.naUDPA::=
before { bottom: 0px; }

._0jckkw.OMps6g::before { content: counter(list-1,var(--zPlnxA)) "."; }

._1Wqb1g.OMps6g { counter-increment: list-1 1; }

._1Wqb1g.OMps6g.gHCn7g { counter-set: list-1 var(--MF8MEg); }

._0jckkw._7VQm8w::before { content: counter(list-2,var(--zPlnxA)) "."; }

._1Wqb1g._7VQm8w { counter-increment: list-2 1; }

._1Wqb1g._7VQm8w.gHCn7g { counter-set: list-2 var(--MF8MEg); }

._0jckkw.yBmzmw::before { content: counter(list-3,var(--zPlnxA)) "."; }

._1Wqb1g.yBmzmw { counter-increment: list-3 1; }

._1Wqb1g.yBmzmw.gHCn7g { counter-set: list-3 var(--MF8MEg); }

._0jckkw.sAsy5g::before { content: counter(list-4,var(--zPlnxA)) "."; }

._1Wqb1g.sAsy5g { counter-increment: list-4 1; }

._1Wqb1g.sAsy5g.gHCn7g { counter-set: list-4 var(--MF8MEg); }

._0jckkw.AQACiA::before { content: counter(list-5,var(--zPlnxA)) "."; }

._1Wqb1g.AQACiA { counter-increment: list-5 1; }

._1Wqb1g.AQACiA.gHCn7g { counter-set: list-5 var(--MF8MEg); }

._0jckkw.rSUnkQ::before { content: counter(list-6,var(--zPlnxA)) "."; }

._1Wqb1g.rSUnkQ { counter-increment: list-6 1; }

._1Wqb1g.rSUnkQ.gHCn7g { counter-set: list-6 var(--MF8MEg); }

._0jckkw.f8LKrA::before { content: counter(list-7,var(--zPlnxA)) "."; }

._1Wqb1g.f8LKrA { counter-increment: list-7 1; }

._1Wqb1g.f8LKrA.gHCn7g { counter-set: list-7 var(--MF8MEg); }

._0jckkw.l4nE4g::before { content: counter(list-8,var(--zPlnxA)) "."; }

._1Wqb1g.l4nE4g { counter-increment: list-8 1; }

._1Wqb1g.l4nE4g.gHCn7g { counter-set: list-8 var(--MF8MEg); }

._28USrA:not(.hhtymQ), ._5eEERQ:not(.hhtymQ) { counter-reset: list-1 0 list=
-2 0 list-3 0 list-4 0 list-5 0 list-6 0 list-7 0 list-8 0; }

._28USrA.wjBajg { counter-reset: none; }

._1Wqb1g.OMps6g { counter-set: list-2 0 list-3 0 list-4 0 list-5 0 list-6 0=
 list-7 0 list-8 0; }

._1Wqb1g._7VQm8w { counter-set: list-3 0 list-4 0 list-5 0 list-6 0 list-7 =
0 list-8 0; }

._1Wqb1g.yBmzmw { counter-set: list-4 0 list-5 0 list-6 0 list-7 0 list-8 0=
; }

._1Wqb1g.sAsy5g { counter-set: list-5 0 list-6 0 list-7 0 list-8 0; }

._1Wqb1g.AQACiA { counter-set: list-6 0 list-7 0 list-8 0; }

._1Wqb1g.rSUnkQ { counter-set: list-7 0 list-8 0; }

._1Wqb1g.f8LKrA { counter-set: list-8 0; }

._1Wqb1g.l4nE4g { counter-set: none; }

.g6DZMw { bottom: 0px; filter: none; left: 0px; pointer-events: none; posit=
ion: absolute; visibility: hidden; }

.g6DZMw, .h_sDXA { width: max-content; }

.h_sDXA { position: fixed; }

.rgd8tA { display: inline-block; white-space: nowrap; }

._3jkTAA { contain: strict; left: 0px; opacity: 0; pointer-events: auto; po=
sition: fixed; top: 0px; user-select: text; visibility: visible; z-index: 3=
; }

.HeLNTQ { height: 99999px; width: 99999px; }

.E8yZTA { position: relative; }

.IBvdUw { inset: 0px; pointer-events: none; position: absolute; user-select=
: none; }

._1MoDzw { align-items: center; border-radius: 4px; box-shadow: currentcolo=
r 0px 0px 0px 2px inset; color: inherit; display: inline-flex; flex: 0 0 0%=
; height: 16px; justify-content: center; margin: 0px; position: relative; t=
ransform: translate(-8px,-8px) scale(var(--Uq9BoA,1)) translate(50%,50%); t=
ransition: box-shadow 0.1s ease-in-out 0s; vertical-align: top; width: 16px=
; }

._7oDyXg { cursor: pointer; display: inline-block; height: calc(var(--Uq9Bo=
A, 1)*16px); pointer-events: all; vertical-align: middle; }

._8E17AQ { appearance: none; margin: 0px; opacity: 0; width: 0px; }

._9nvLcQ { color: rgb(255, 255, 255); opacity: 0; }

._1MoDzw.DLGvRw ._9nvLcQ { height: 16px; opacity: 1; width: 16px; }

.YppzxA ._1MoDzw:hover::after { background: currentcolor; border-radius: 4p=
x; inset: 0px; content: ""; display: block; opacity: 0.2; position: absolut=
e; width: 100%; }

._8E17AQ:checked + ._1MoDzw { box-shadow: currentcolor 0px 0px 0px 8px inse=
t; }

.I2P_Nw .ql-editor ul li { padding: 0px; text-align: start; }

.I2P_Nw .ql-editor ul.blockList { margin: 0px; padding: 0px; }

.I2P_Nw .ql-editor ul.blockList li { list-style-type: none; position: relat=
ive; }

.I2P_Nw.vOBd0w .ql-editor ul.blockList li.uarqkg { white-space: nowrap; }

.I2P_Nw.vOBd0w .ql-editor ul.blockList li.uarqkg > .inlineElement { white-s=
pace: pre-wrap; }

.I2P_Nw .ql-editor ul.blockList li { --2e0mIQ: calc(var(--eR0qCg)*var(--Uq9=
BoA, 1)); --fr3CTA: calc(var(--Uq9BoA, 1)*var(--eR0qCg)*var(--Vri3Bw)); --I=
cELaA: calc(var(--Uq9BoA, 1)*24px); font-family: var(--CV8ywQ); font-size: =
var(--2e0mIQ); }

@supports (font-size:min(1px,2px)) {
  .I2P_Nw .ql-editor ul.blockList li { --2e0mIQ: min(calc((var(--eR0qCg)*0.=
5 + (1 - var(--oGgc5Q, 0))*var(--eR0qCg)*0.5 + var(--oGgc5Q, 0)*16px*0.5)*v=
ar(--Uq9BoA, 1)),calc(var(--eR0qCg)*var(--Uq9BoA, 1))); --fr3CTA: max(calc(=
var(--2e0mIQ)*var(--Vri3Bw)),calc(24px*var(--Uq9BoA, 1))); }
}

@media (max-width: 599px) {
  @supports not (font-size:min(1px,2px)) {
  .I2P_Nw .ql-editor ul.blockList li { --2e0mIQ: calc(var(--Uq9BoA, 1)*0.8*=
var(--eR0qCg)); }
}
}

.I2P_Nw .ql-editor ul.blockList li:not(.direction-rtl) { padding-left: calc=
(8px + var(--IcELaA)); }

.I2P_Nw .ql-editor ul.blockList li.direction-rtl { padding-left: 0px; paddi=
ng-right: calc(8px + var(--IcELaA)); }

.I2P_Nw .ql-editor ul.blockList li .ql-ui { display: none; }

.I2P_Nw .ql-editor ul.blockList li:not(.direction-rtl).list-level-1 { margi=
n-left: calc(var(--IcELaA)*0); }

.I2P_Nw .ql-editor ul.blockList li.direction-rtl.list-level-1 { margin-righ=
t: calc(var(--IcELaA)*0); }

.I2P_Nw .ql-editor ul.blockList li:not(.direction-rtl).list-level-2 { margi=
n-left: calc(var(--IcELaA)*1); }

.I2P_Nw .ql-editor ul.blockList li.direction-rtl.list-level-2 { margin-righ=
t: calc(var(--IcELaA)*1); }

.I2P_Nw .ql-editor ul.blockList li:not(.direction-rtl).list-level-3 { margi=
n-left: calc(var(--IcELaA)*2); }

.I2P_Nw .ql-editor ul.blockList li.direction-rtl.list-level-3 { margin-righ=
t: calc(var(--IcELaA)*2); }

.I2P_Nw .ql-editor ul.blockList li:not(.direction-rtl).list-level-4 { margi=
n-left: calc(var(--IcELaA)*3); }

.I2P_Nw .ql-editor ul.blockList li.direction-rtl.list-level-4 { margin-righ=
t: calc(var(--IcELaA)*3); }

.I2P_Nw .ql-editor ul.blockList li:not(.direction-rtl).list-level-5 { margi=
n-left: calc(var(--IcELaA)*4); }

.I2P_Nw .ql-editor ul.blockList li.direction-rtl.list-level-5 { margin-righ=
t: calc(var(--IcELaA)*4); }

.I2P_Nw .ql-editor ul.blockList li:not(.direction-rtl).list-level-6 { margi=
n-left: calc(var(--IcELaA)*5); }

.I2P_Nw .ql-editor ul.blockList li.direction-rtl.list-level-6 { margin-righ=
t: calc(var(--IcELaA)*5); }

.I2P_Nw .ql-editor ul.blockList li:not(.direction-rtl).list-level-7 { margi=
n-left: calc(var(--IcELaA)*6); }

.I2P_Nw .ql-editor ul.blockList li.direction-rtl.list-level-7 { margin-righ=
t: calc(var(--IcELaA)*6); }

.I2P_Nw .ql-editor ul.blockList li:not(.direction-rtl).list-level-8 { margi=
n-left: calc(var(--IcELaA)*7); }

.I2P_Nw .ql-editor ul.blockList li.direction-rtl.list-level-8 { margin-righ=
t: calc(var(--IcELaA)*7); }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-o"]:not(.direction=
-rtl) { padding-left: calc(8px + var(--fr3CTA)); }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-o"].direction-rtl =
{ padding-right: calc(8px + var(--fr3CTA)); }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-o"]::before { colo=
r: var(--DnjK6Q); content: var(--nmalgA); cursor: text; display: inline-blo=
ck; font-family: var(--CV8ywQ); font-size: var(--2e0mIQ); min-width: var(--=
fr3CTA); text-align: start; }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-o"]:not(.direction=
-rtl)::before { margin-left: calc(var(--fr3CTA)*-1); }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-o"].direction-rtl:=
:before { margin-right: calc(var(--fr3CTA)*-1); }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-u"]::before { cont=
ent: var(--afh8Gg); cursor: text; display: inline-block; font-size: 0px; he=
ight: calc(8px*var(--Uq9BoA, 1)); vertical-align: middle; width: calc(8px*v=
ar(--Uq9BoA, 1)); }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-u"]:not(.direction=
-rtl)::before { margin-left: calc(var(--IcELaA)*-1); padding-left: calc(4px=
*var(--Uq9BoA, 1)); padding-right: calc(12px*var(--Uq9BoA, 1)); }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-u"].direction-rtl:=
:before { margin-right: calc(var(--IcELaA)*-1); padding-left: calc(12px*var=
(--Uq9BoA, 1)); padding-right: calc(4px*var(--Uq9BoA, 1)); }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-c"] .ql-ui { displ=
ay: inline-block; font-size: 0px; height: calc(16px*var(--Uq9BoA, 1)); min-=
width: 0px; position: relative; vertical-align: middle; width: 0px; }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-c"] .ql-ui .AIRI2A=
 { position: absolute; top: 0px; }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-c"]:not(.direction=
-rtl) .ql-ui .AIRI2A { left: calc(var(--IcELaA)*-1); }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-c"].direction-rtl =
.ql-ui .AIRI2A { right: calc(var(--IcELaA)*-1); }

.KL8y8w { display: inline-block; height: calc(var(--Uq9BoA, 1)*16px); }

.I2P_Nw .ql-editor li.list-marker-cchecked .DaZ4Ww, .I2P_Nw .ql-editor li.l=
ist-marker-cchecked .inlineElement, .I2P_Nw .ql-editor li.list-marker-cchec=
ked .inlineEmbed { opacity: 0.6; }

.I2P_Nw .ql-editor li.list-marker-cchecked .DaZ4Ww, .I2P_Nw .ql-editor li.l=
ist-marker-cchecked .inlineElement, .I2P_Nw .ql-editor li.list-marker-cchec=
ked .inlineEmbed span { text-decoration-line: line-through; }

.I2P_Nw .ql-editor li.list-marker-cchecked > .text-decoration-underline .Da=
Z4Ww, .I2P_Nw .ql-editor li.list-marker-cchecked > .text-decoration-underli=
ne .inlineEmbed span, .I2P_Nw .ql-editor li.list-marker-cchecked > .text-de=
coration-underline.inlineElement { text-decoration-line: underline line-thr=
ough; }

.I2P_Nw .ql-editor li.list-marker-cchecked .inlineElement, .I2P_Nw .ql-edit=
or li.list-marker-cchecked .inlineEmbed span { text-decoration-color: curre=
ntcolor; }

.I2P_Nw .ql-editor li.list-marker-cchecked { color: rgb(0, 0, 0); }

.fVLjIg .ql-editor .inlineElement.CeW6iw.T9__FQ:not(._71yRg), .fVLjIg .ql-e=
ditor .inlineElement.CeW6iw:not(._71yRg) { color: rgb(var(--biMykw)); }

.fVLjIg .ql-editor .T9__FQ:not(._71yRg) { color: rgb(var(--0fZWYQ)); }

.fVLjIg .ql-editor .F10Guw:not(._71yRg) { color: rgb(var(--dvuLgw)); }

.fVLjIg .ql-editor .LccD6Q { text-decoration-line: line-through; }

.fVLjIg .ql-editor .text-decoration-underline.LccD6Q, .fVLjIg .ql-editor .t=
ext-decoration-underline.LccD6Q span { text-decoration-line: underline line=
-through; }

.fVLjIg .ql-editor .LccD6Q:not(._71yRg) { text-decoration-color: rgb(var(--=
F_78XQ)); }

.fVLjIg .ql-editor .CeW6iw .inlineEmbed { background: linear-gradient(rgba(=
var(--biMykw),.3),rgba(var(--biMykw),.3)) no-repeat 50%/100% 100%; }

.fVLjIg .ql-editor .LccD6Q .inlineEmbed { background: linear-gradient(rgb(v=
ar(--F_78XQ)),rgb(var(--F_78XQ))) no-repeat 50%/100% 2px; opacity: 0.75; }

.fVLjIg .ql-editor .blockEmbed.cCB0xg { background: linear-gradient(rgba(va=
r(--8bnN0Q),.3),rgba(var(--8bnN0Q),.3)) no-repeat 50%/100% 100%; }

.fVLjIg .ql-editor .blockEmbed.GxQmgw { background: linear-gradient(rgba(va=
r(--1HZATg),.2),rgba(var(--1HZATg),.2)) no-repeat 50%/100% 100%; position: =
relative; }

.fVLjIg .ql-editor .blockEmbed.GxQmgw::after { align-items: center; color: =
rgb(var(--1HZATg)); content: "X"; display: flex; font-size: 4em; font-weigh=
t: 700; height: 100%; justify-content: center; opacity: 1; pointer-events: =
none; position: absolute; text-decoration: none; width: 100%; }

.fVLjIg .blockEmbed.GxQmgw > * { opacity: 0.5; }

.fVLjIg .ql-editor .cCB0xg::after { color: rgba(var(--8bnN0Q),.5); content:=
 "=E2=8F=8E"; }

.fVLjIg .ql-editor .GxQmgw::after, .fVLjIg .ql-editor .cCB0xg::after { font=
-family: "Canva Sans", "Noto Sans Variable", "Noto Sans", -apple-system, Bl=
inkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif; pointer-events:=
 none; }

.fVLjIg .ql-editor .GxQmgw::after { color: rgba(var(--1HZATg),.5); content:=
 "=C2=B6"; text-decoration: line-through; }

.fVLjIg .ql-editor .emptyBlock.GxQmgw::after, .fVLjIg .ql-editor .emptyBloc=
k.cCB0xg::after { bottom: 8px; position: absolute; }

.fVLjIg .ql-editor .blockList .emptyBlock.GxQmgw::after, .fVLjIg .ql-editor=
 .blockList .emptyBlock.cCB0xg::after { bottom: 0px; }

.fVLjIg .ql-editor .emptyBlock.GxQmgw, .fVLjIg .ql-editor .emptyBlock.cCB0x=
g { position: relative; }

.fVLjIg .ql-editor .inlineElement.ZrzDug.T9__FQ { background: rgba(var(--0f=
ZWYQ),.15); }

.fVLjIg .ql-editor .inlineElement._71yRg.LccD6Q { background: rgba(var(--F_=
78XQ),.15); box-shadow: 0 2px 0 0 rgb(var(--F_78XQ)); }

.fVLjIg .ql-editor .inlineElement._71yRg.CeW6iw { background: rgba(var(--bi=
Mykw),.15); box-shadow: 0 2px 0 0 rgb(var(--biMykw)); }

.fVLjIg .ql-editor .F10Guw.ZrzDug { background: rgba(var(--dvuLgw),.2); }

.fVLjIg .ql-editor .cCB0xg._71yRg::after { background: rgba(var(--8bnN0Q),.=
15); }

.fVLjIg .ql-editor .GxQmgw._71yRg::after { background: rgba(var(--1HZATg),.=
15); }

._QYCRw .ql-editor { font-size: 13.334px; }

.Mfnh4w { -webkit-font-smoothing: antialiased; text-size-adjust: none; font=
-family: unset; text-rendering: geometricprecision; word-break: normal; }

.Mfnh4w .ql-editor { overflow-wrap: break-word; color: rgb(0, 0, 0); direct=
ion: ltr; font-style: normal; font-weight: 400; letter-spacing: 0px; line-h=
eight: 1.4; overflow: visible; padding: 0px; position: relative; text-align=
: start; text-transform: none; user-select: text; z-index: 0; }

.Mfnh4w:not(.lBpDnQ) .ql-editor { font-size: calc(16px*var(--Uq9BoA, 1)); }

.Mfnh4w.fRXW1g > .ql-editor { white-space: pre-wrap; }

.Mfnh4w.nP1aKQ > .ql-editor { white-space: nowrap; }

.Mfnh4w .ql-editor hr { margin: 0px; }

.Mfnh4w .ql-editor > .blockElement:not(.firstBlock, .hiddenBlock), .Mfnh4w =
.ql-editor > .blockEmbed:not(.firstBlock), .Mfnh4w .ql-editor > .blockList:=
not(.firstBlock) { padding-top: calc(var(--Uq9BoA, 1)*16px/2); }

.Mfnh4w .ql-editor > .blockElement:not(.lastBlock, .hiddenBlock, :last-chil=
d), .Mfnh4w .ql-editor > .blockEmbed:not(.lastBlock, :last-child), .Mfnh4w =
.ql-editor > .blockList:not(.lastBlock, :last-child) { padding-bottom: calc=
(var(--Uq9BoA, 1)*16px/2); }

.Mfnh4w .ql-editor > .blockElement.hiddenBlock { font-size: 1px; height: 0.=
1px; line-height: 0; }

.Mfnh4w .blockElement.hiddenBlock .inlineElement { font-size: 1px; }

.Mfnh4w .ql-editor .text-decoration-underline, .Mfnh4w .ql-editor .text-dec=
oration-underline .inlineEmbed span { text-decoration-line: underline; }

.Mfnh4w .ql-editor .text-strikethrough-strikethrough, .Mfnh4w .ql-editor .t=
ext-strikethrough-strikethrough span { text-decoration-line: line-through; =
}

.Mfnh4w .ql-editor .text-decoration-underline.text-strikethrough-strikethro=
ugh, .Mfnh4w .ql-editor .text-decoration-underline.text-strikethrough-strik=
ethrough span { text-decoration-line: underline line-through; }

.Mfnh4w .ql-editor .align-start { text-align: start; }

.Mfnh4w .ql-editor .align-center { text-align: center; }

.Mfnh4w .ql-editor .align-end { text-align: end; }

.Mfnh4w .ql-editor .align-justify { text-align: justify; }

.Mfnh4w .ql-editor .direction-rtl { direction: rtl; }

.Mfnh4w .inlineElement { background-color: var(--iSHXRg); color: var(--lQWb=
0w); font-size: calc(var(--JB5mpw, 16px)*var(--dgSuqA, 1)*var(--Uq9BoA, 1))=
; }

.Mfnh4w .inlineElement.verticalAlign { bottom: calc((var(--qDrc9Q, 0)/100)*=
var(--JB5mpw, 16px)); position: relative; vertical-align: baseline; z-index=
: -1; }

.Mfnh4w .blockElement .inlineElement.bleedEnd, .Mfnh4w .blockElement .inlin=
eElement.bleedStart, .Mfnh4w .blockElement .inlineElement.borderRadiusEnd, =
.Mfnh4w .blockElement .inlineElement.borderRadiusStart { -webkit-box-decora=
tion-break: clone; }

.Mfnh4w .blockElement .inlineElement.borderRadiusStart { border-end-start-r=
adius: var(--fqAuSA); border-start-start-radius: var(--fqAuSA); }

.Mfnh4w .blockElement .inlineElement.borderRadiusEnd { border-end-end-radiu=
s: var(--fqAuSA); border-start-end-radius: var(--fqAuSA); }

.Mfnh4w .blockElement .inlineElement.bleedStart { margin-inline-start: calc=
(var(--wh8UTw)*-1); padding-inline-start: var(--wh8UTw); }

.Mfnh4w .blockElement .inlineElement.bleedEnd { margin-inline-end: calc(var=
(--wh8UTw)*-1); padding-inline-end: var(--wh8UTw); }

@supports (font-size:min(1px,2px)) {
  .Mfnh4w .inlineElement { --4SXsOw: min(calc((var(--JB5mpw, 16px)*0.5 + (1=
 - var(--oGgc5Q, 0))*var(--JB5mpw, 16px)*0.5 + var(--oGgc5Q, 0)*16px*0.5)*v=
ar(--Uq9BoA, 1)),calc(var(--JB5mpw, 16px)*var(--Uq9BoA, 1))); font-size: ca=
lc(var(--4SXsOw)*var(--dgSuqA, 1)); }
  .Mfnh4w .inlineElement.verticalAlign { bottom: calc((var(--qDrc9Q, 0)/100=
)*var(--4SXsOw)); }
}

@media (max-width: 599px) {
  @supports not (font-size:min(1px,2px)) {
  .Mfnh4w .inlineElement { font-size: calc(var(--JB5mpw, 16px)*.8*var(--dgS=
uqA, 1)*var(--Uq9BoA, 1)); }
}
}

.Mfnh4w .blockEmbed { display: flex; line-height: 0; }

.Mfnh4w .inlineEmbed { display: inline; max-width: 100%; text-indent: 0px; =
}

.Mfnh4w .ql-editor :not(li).blockElement:not(.direction-rtl) { margin-left:=
 calc(var(--gag2DA, 0px)*1px); }

.Mfnh4w .ql-editor :not(li).blockElement.direction-rtl { margin-right: calc=
(var(--gag2DA, 0px)*1px); }

.Mfnh4w .ql-editor::selection { background-color: rgba(26, 98, 255, 0.2); }

.Mfnh4w .ql-editor .blockEmbed::selection { background-color: transparent; =
}

.Mfnh4w .ql-editor td { border: 0px; padding: 0px; }

.Mfnh4w .ql-editor h1, .Mfnh4w .ql-editor h2, .Mfnh4w .ql-editor h3 { font-=
size: unset; font-weight: unset; }

.Mfnh4w .ql-editor a { text-decoration: none; }

.Mfnh4w .ql-editor .selectionGuard { height: 8px; margin-bottom: -8px; }

.Mfnh4w.Szl_ng p.blockElement { position: relative; }

.Mfnh4w p.blockElement .placeholder { display: none; }

.Mfnh4w.Szl_ng p.blockElement .placeholder { display: block; left: 0px; poi=
nter-events: none; position: absolute; top: 0px; user-select: none; width: =
100%; }

.Mfnh4w.Szl_ng p.blockElement .placeholder::after, .Mfnh4w.Szl_ng p.blockEl=
ement .placeholder::before { color: rgba(43, 59, 74, 0.3); display: block; =
}

.Mfnh4w.Szl_ng p.blockElement .placeholder::before { content: var(--wyosOA)=
; }

.Mfnh4w.Szl_ng p.blockElement.block-text-decoration-underline .placeholder:=
:before { text-decoration: underline; }

.Mfnh4w.Szl_ng p.blockElement.block-text-strikethrough-strikethrough .place=
holder::before { text-decoration: line-through; }

.Mfnh4w.Szl_ng p.blockElement.block-text-decoration-underline.block-text-st=
rikethrough-strikethrough .placeholder::before { text-decoration: underline=
 line-through; }

.Mfnh4w.Szl_ng p.blockElement .placeholder::after { content: var(--qNqs3Q);=
 font-family: var(--i6F2Kw); font-size: calc(16px*var(--Uq9BoA, 1)); font-s=
tyle: normal; font-weight: 400; letter-spacing: 0px; line-height: 1.6; text=
-decoration: none; }

.a5dsSw { -webkit-font-smoothing: antialiased; text-size-adjust: none; outl=
ine: none; position: relative; text-rendering: geometricprecision; word-bre=
ak: normal; z-index: 0; }

.a5dsSw:not(:focus-within) { border: 0px; }

.a5dsSw:not(:focus-within) ::selection { background: transparent; }

.RRbEZw { overflow-wrap: break-word; box-sizing: border-box; color: rgb(0, =
0, 0); direction: ltr; font-size: 0px; font-style: normal; font-weight: 400=
; letter-spacing: 0px; line-height: 1.4; overflow: visible; padding: 0px; t=
ext-align: start; text-transform: none; user-select: text; }

.RRbEZw.jIp1BA { font-size: calc(16px*var(--Uq9BoA, 1)); }

.RRbEZw.yzSdYQ { white-space: pre-wrap; }

.RRbEZw.O88kOQ { white-space: nowrap; }

.RRbEZw > .qOCJHQ { font-size: unset; font-weight: unset; margin: calc(16px=
*var(--Uq9BoA, 1)) 0; }

.qOCJHQ._7koQYg { font-size: 1px; height: 0.1px; line-height: 0; margin-top=
: 0px; }

.r70JmQ { caret-color: transparent; line-height: 0; margin: calc(16px*var(-=
-Uq9BoA, 1)) 0; }

.DTPF7g { caret-color: auto; display: block; user-select: none; vertical-al=
ign: top; width: 100%; }

.DTPF7g._9TCNVw { display: inline-block; }

._dGqhw { height: 0px; width: 0px; }

.r70JmQ > ._dGqhw { display: block; }

.qOCJHQ:first-child, .r70JmQ:first-child { margin-top: 0px; }

.qOCJHQ:last-child, .r70JmQ._7CHeGQ { margin-bottom: 0px; }

.nrnaQA { text-align: start; }

.D_Fgcg { text-align: center; }

._8PPPsw { text-align: end; }

.urvC1g { text-align: justify; }

._5wr2SQ { direction: rtl; }

.K_8tCg { display: block; }

.ln2W_Q { font-size: calc(var(--p9Qfqw, 16px)*var(--zyOazQ, 1)*var(--Uq9BoA=
, 1)); text-indent: 0px; }

._68hz7A { font-weight: 100; }

._4b8oDg { font-weight: 200; }

._4WmOPA { font-weight: 300; }

.vFYcpQ { font-weight: 500; }

.eZpp1Q { font-weight: 600; }

.CIJM7Q { font-weight: 700; }

.DQIFrg { font-weight: 800; }

.NmQalA { font-weight: 900; }

.sIkY1w { font-style: italic; }

.bcfHuQ { bottom: calc((var(--OH_MXg, 0)/100)*var(--p9Qfqw, 16px)*var(--Uq9=
BoA, 1)); position: relative; vertical-align: baseline; }

.Wb8Bag, .Wb8Bag .GSyGMg.M3AzBQ span { text-decoration: underline; }

.Wb8Bag.K9Vlqg, .Wb8Bag.K9Vlqg .GSyGMg.M3AzBQ span { text-decoration: under=
line line-through; }

.K9Vlqg, .K9Vlqg .GSyGMg.M3AzBQ span { text-decoration: line-through; }

.a_506A { color: inherit; text-decoration: inherit; }

.RRbEZw .vmWYYw { font-size: 0px; margin: 0px; padding: 0px; }

.RRbEZw .vmWYYw > .xnZGrA { list-style-type: none; padding-inline-start: ca=
lc(var(--zhHaLA, calc(16px + 8px))*var(--Uq9BoA, 1)); text-indent: calc(var=
(--zhHaLA, calc(16px + 8px))*-1*var(--Uq9BoA, 1)); }

.RRbEZw .xnZGrA.nrnaQA { text-align: start; }

.RRbEZw .xnZGrA.D_Fgcg { text-align: center; }

.RRbEZw .xnZGrA._8PPPsw { text-align: end; }

.RRbEZw .xnZGrA.urvC1g { text-align: justify; }

.RRbEZw.yzSdYQ > .vmWYYw > .xnZGrA { white-space: nowrap; }

.B5Bacw, .xnZGrA > .K_8tCg > .a_506A, .xnZGrA > .K_8tCg > .ln2W_Q { text-in=
dent: 0px; }

.RRbEZw.yzSdYQ > .vmWYYw > .xnZGrA > .K_8tCg > .a_506A, .RRbEZw.yzSdYQ > .v=
mWYYw > .xnZGrA > .K_8tCg > .ln2W_Q { white-space: pre-wrap; }

.B5Bacw { display: inline-block; font-size: calc(var(--p9Qfqw, 16px)*var(--=
Uq9BoA, 1)); pointer-events: none; text-align: start; user-select: none; wi=
dth: calc(var(--zhHaLA, calc(16px + 8px))*var(--Uq9BoA, 1)); }

.kio3_g { margin-inline-start: calc(8px + 0px*var(--Uq9BoA, 1)); }

.rmjCsw { margin-inline-start: calc(8px + 24px*var(--Uq9BoA, 1)); }

.YZ4GyA { margin-inline-start: calc(8px + 48px*var(--Uq9BoA, 1)); }

.pbU0gQ { margin-inline-start: calc(8px + 72px*var(--Uq9BoA, 1)); }

._45TROw { margin-inline-start: calc(8px + 96px*var(--Uq9BoA, 1)); }

.SpyUpg { margin-inline-start: calc(8px + 120px*var(--Uq9BoA, 1)); }

._0RlHRg { margin-inline-start: calc(8px + 144px*var(--Uq9BoA, 1)); }

.EIjPTw { margin-inline-start: calc(8px + 168px*var(--Uq9BoA, 1)); }

.kaxIIw { display: inline-block; height: calc(8px*var(--Uq9BoA, 1)); margin=
-inline-start: calc(4px*var(--Uq9BoA, 1)); vertical-align: middle; width: c=
alc(8px*var(--Uq9BoA, 1)); }

.QKeKuw .ln2W_Q { opacity: 0.6; }

.QKeKuw .GSyGMg.M3AzBQ span, .QKeKuw .ln2W_Q { text-decoration: line-throug=
h; }

.QKeKuw .ln2W_Q.Wb8Bag, .QKeKuw .ln2W_Q.Wb8Bag .GSyGMg.M3AzBQ span { text-d=
ecoration: underline line-through; }

.URcszA { position: relative; }

.CO7o0A, .MHjCmg, .RkjF7Q, .zSBJdA { -webkit-box-decoration-break: clone; }

.zSBJdA { border-end-start-radius: var(--TeuLew,0); border-start-start-radi=
us: var(--TeuLew,0); }

.RkjF7Q { border-end-end-radius: var(--TeuLew,0); border-start-end-radius: =
var(--TeuLew,0); }

.MHjCmg { margin-inline-start: calc(var(--8rWAew, 0)*-1); padding-inline-st=
art: var(--8rWAew,0); }

.CO7o0A { margin-inline-end: calc(var(--8rWAew, 0)*-1); padding-inline-end:=
 var(--8rWAew,0); }

.ln2W_Q.Lvg8TA { border-bottom: 2px solid rgb(139, 61, 255); }

.r70JmQ:not(.xgRLsg).Lvg8TA > .DTPF7g > .GSyGMg { outline: rgb(231, 219, 25=
5) solid 8px; }

.r70JmQ:not(.xgRLsg).Lvg8TA._6ISArw > .DTPF7g > .GSyGMg { outline: rgb(188,=
 151, 252) solid 8px; }

.ln2W_Q.oE_hFw:not(._1axBCw) { text-decoration-line: line-through; }

.ln2W_Q.oE_hFw:not(._6ISArw) { text-decoration-color: rgb(var(--eOn2Jw)); }

.ln2W_Q.SpDWaA .GSyGMg.M3AzBQ { background: rgba(var(--FWKWtw),.3); }

.ln2W_Q.oE_hFw .GSyGMg.M3AzBQ { background: linear-gradient(rgb(var(--eOn2J=
w)),rgb(var(--eOn2Jw))) no-repeat 50%/100% 2px; opacity: 0.75; }

.r70JmQ.SpDWaA { background: rgba(var(--NTJHXg),.3); display: flex; justify=
-content: space-between; line-height: 0; }

.r70JmQ.SpDWaA::after { color: rgba(var(--NTJHXg),.5); content: "=E2=8F=8E"=
; font-family: "Canva Sans", "Noto Sans Variable", "Noto Sans", -apple-syst=
em, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif; pointer-e=
vents: none; }

.r70JmQ.oE_hFw { background: rgba(var(--BRsb1Q),.2); position: relative; }

.r70JmQ.oE_hFw::after { align-items: center; color: rgb(var(--BRsb1Q)); con=
tent: "X"; display: flex; font-size: 4em; font-weight: 700; height: 100%; j=
ustify-content: center; opacity: 1; padding: 8px 0px; pointer-events: none;=
 position: absolute; text-decoration: none; top: 0px; width: 100%; }

.r70JmQ.oE_hFw .GSyGMg { opacity: 0.5; }

.r70JmQ.SpDWaA:not(._14kUEw):not(:first-child) { box-shadow: 0 -8px 0 0 rgb=
a(var(--NTJHXg),.3); }

.r70JmQ.SpDWaA:not(._14kUEw):not(:last-child) { box-shadow: 0 8px 0 0 rgba(=
var(--NTJHXg),.3); }

.r70JmQ.SpDWaA:not(._14kUEw):not(:first-child):not(:last-child) { box-shado=
w: 0 -8px 0 0 rgba(var(--NTJHXg),.3),0 8px 0 0 rgba(var(--NTJHXg),.3); }

.r70JmQ.oE_hFw:not(._14kUEw):not(:first-child) { box-shadow: 0 -8px 0 0 rgb=
a(var(--BRsb1Q),.2); }

.r70JmQ.oE_hFw:not(._14kUEw):not(:last-child) { box-shadow: 0 8px 0 0 rgba(=
var(--BRsb1Q),.2); }

.r70JmQ.oE_hFw:not(._14kUEw):not(:first-child):not(:last-child) { box-shado=
w: 0 -8px 0 0 rgba(var(--BRsb1Q),.2),0 8px 0 0 rgba(var(--BRsb1Q),.2); }

.r70JmQ.SpDWaA._14kUEw { outline: rgba(var(--NTJHXg),.3) solid 8px; }

.r70JmQ.oE_hFw._14kUEw { outline: rgba(var(--BRsb1Q),.2) solid 8px; }

.ln2W_Q.SpDWaA._1axBCw::before { color: rgba(var(--FWKWtw),.5); content: "=
=E2=8F=8E"; }

.ln2W_Q.SpDWaA._1axBCw::before, .ln2W_Q.oE_hFw._1axBCw::before { display: i=
nline-block; font-family: "Canva Sans", "Noto Sans Variable", "Noto Sans", =
-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif=
; font-size: calc(16px*var(--Uq9BoA, 1)); pointer-events: none; }

.ln2W_Q.oE_hFw._1axBCw::before { color: rgba(var(--eOn2Jw),.5); content: "=
=C2=B6"; text-decoration: line-through; }

.ln2W_Q.oE_hFw._6ISArw:not(._1axBCw) { box-shadow: 0 2px 0 0 rgb(var(--eOn2=
Jw)); }

.ln2W_Q.oE_hFw._1axBCw._6ISArw { background: rgba(var(--eOn2Jw),.15); }

.ln2W_Q.SpDWaA._6ISArw:not(._1axBCw) { box-shadow: 0 2px 0 0 rgb(var(--FWKW=
tw)); }

.ln2W_Q.SpDWaA._1axBCw._6ISArw { background: rgba(var(--FWKWtw),.15); }

.ln2W_Q._8jwp_g, .ln2W_Q._8jwp_g .URcszA, .ln2W_Q._8jwp_g .fE_z1w { vertica=
l-align: top; }

.JRVTGQ { display: block; }

.SDHWjg { position: absolute; }

.wNK52w { transform-origin: 0px 0px; }

.qY_pAA { display: block; }

.Pr6LEA, .qY_pAA { height: 100%; left: 0px; pointer-events: none; position:=
 absolute; top: 0px; width: 100%; }

.hWv4NA { position: relative; transform-origin: left top; }

.Xax3mQ { backface-visibility: hidden; }

.N0VbIw { box-sizing: border-box; display: flex; flex-direction: column; ov=
erflow: hidden; overflow-wrap: break-word; position: absolute; }

.NEG9gQ { opacity: 0.6; pointer-events: none; }

.ZYgCXA { font-family: "Canva Sans", "Noto Sans Variable", "Noto Sans", -ap=
ple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif; f=
ont-variation-settings: "opsz" 0; font-weight: 600; overflow: hidden; text-=
overflow: ellipsis; white-space: nowrap; }

._DyBwg { direction: ltr; }

._dTYUw { direction: rtl; }

.hbcXuA { contain: layout; position: relative; }

.csGvXg { border-spacing: 0px; pointer-events: none; }

._5RL20Q { display: block; left: 0px; overflow-wrap: break-word; pointer-ev=
ents: auto; position: absolute; top: 0px; }

._5RL20Q, .xam_ew { box-sizing: border-box; }

.xam_ew { height: 100%; overflow: hidden; width: 100%; }

.iRGCPA { display: flex; flex-direction: column; height: calc(100%/var(--H-=
KugQ, 1)); transform: scale(var(--H-KugQ,1)); width: calc(100%/var(--H-KugQ=
, 1)); }

.aXBSSA, .nrDMmw { left: 0px; pointer-events: none; position: absolute; top=
: 0px; }

._DyBwg .iRGCPA { transform-origin: 0px 0px; }

._dTYUw .iRGCPA { transform-origin: 100% 0px; }

._3tQhmA { overflow: hidden; position: relative; scrollbar-color: rgba(17, =
23, 29, 0.6) transparent; scrollbar-width: thin; z-index: 0; }

._3tQhmA::-webkit-scrollbar-track { border-radius: 4px; }

._3tQhmA::-webkit-scrollbar-thumb { background-color: rgba(17, 23, 29, 0.6)=
; border-radius: 4px; visibility: hidden; }

._3tQhmA:hover::-webkit-scrollbar-thumb { visibility: visible; }

.XN8TNg { direction: rtl; }

.aXZ4AQ { height: 100%; overflow-y: auto; }

.aXZ4AQ._4UOq2w { overflow-y: scroll; }

.Ytfqyg { overflow-x: auto; overscroll-behavior-x: none; width: 100%; }

.Ytfqyg._4UOq2w { overflow-x: scroll; }

._7LfHaw { height: 100%; width: 100%; }

.VV6kWg { display: flex; position: relative; }

.VV6kWg.mY6Hig { flex-direction: column; height: 100%; min-height: 0px; }

.VV6kWg.djzRdA { flex-direction: row; min-width: 0px; width: 100%; }

.x7J7bg { align-items: stretch; display: flex; }

._7TOhdw { pointer-events: none; z-index: 1; }

._7TOhdw, .c3bmdQ { inset: 0px; overflow: hidden; position: absolute; }

.ENdeHg { box-shadow: rgba(64, 87, 109, 0.07) 0px 0px 0px 1px, rgba(57, 76,=
 96, 0.15) 0px 0px 8px 0px; opacity: 0; position: absolute; }

.ENdeHg.fAUCyA { transition: opacity 0.25s ease 0s, box-shadow 0.1s linear =
0s; }

.ENdeHg.IR7ypg { opacity: 1; }

.U7V4SA { top: -16px; }

.U7V4SA, ._0_l6rw { height: 16px; left: 0px; right: 0px; }

._0_l6rw { bottom: -16px; }

.l_mvTw { left: -16px; }

.VGdk6Q, .l_mvTw { bottom: 0px; top: 0px; width: 16px; }

.VGdk6Q { right: -16px; }

._2_PFFQ { display: flex; justify-content: center; }

.PI39zQ, .uDJg1Q { position: relative; }

.z3Ewvg { bottom: 0px; top: 0px; width: 1px; }

.CPvt7Q, .z3Ewvg { position: absolute; }

.CPvt7Q { display: flex; height: 100%; width: 100%; }

.u39wDw { left: 0px; position: absolute; top: 0px; }

.IJanIQ, .u39wDw { height: 100%; width: 100%; }

.IJanIQ { overflow: visible; }

.AModoQ { position: relative; }

.F4BMJg { height: 100%; }

._5kZSsQ { inset: 0px; position: absolute; }

@font-face { font-display: swap; font-family: "Open Sans"; font-style: norm=
al; font-weight: 400; src: url("images/e755c8eab4133359c241132063a279d0.wof=
f2") format("woff2"), url("images/89ba4e29dc7a63cd15959a5bb068bb0e.woff") f=
ormat("woff"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, =
U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-display: swap; font-family: "Open Sans"; font-style: norm=
al; font-weight: 400; src: url("images/0c4fa4c622644d97f38d201cba1d30f5.wof=
f2") format("woff2"), url("images/89ba4e29dc7a63cd15959a5bb068bb0e.woff") f=
ormat("woff"); unicode-range: U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-display: swap; font-family: "Open Sans"; font-style: norm=
al; font-weight: 400; src: url("images/a47b96672d775073beaf93b7e7ffff54.wof=
f2") format("woff2"), url("images/89ba4e29dc7a63cd15959a5bb068bb0e.woff") f=
ormat("woff"); unicode-range: U+1F00-1FFF; }

@font-face { font-display: swap; font-family: "Open Sans"; font-style: norm=
al; font-weight: 400; src: url("images/7aed216c4e61d12ee639b0b758037c5d.wof=
f2") format("woff2"), url("images/89ba4e29dc7a63cd15959a5bb068bb0e.woff") f=
ormat("woff"); unicode-range: U+370-3FF; }

@font-face { font-display: swap; font-family: "Open Sans"; font-style: norm=
al; font-weight: 400; src: url("images/eafec10d3f23f994fb6dc59545035460.wof=
f2") format("woff2"), url("images/89ba4e29dc7a63cd15959a5bb068bb0e.woff") f=
ormat("woff"); unicode-range: U+102-103, U+110-111, U+128-129, U+168-169, U=
+1A0-1A1, U+1AF-1B0, U+1EA0-1EF9, U+20AB; }

@font-face { font-display: swap; font-family: "Open Sans"; font-style: norm=
al; font-weight: 400; src: url("images/6923b1967484e2b12e1016fb33061791.wof=
f2") format("woff2"), url("images/89ba4e29dc7a63cd15959a5bb068bb0e.woff") f=
ormat("woff"); unicode-range: U+100-24F, U+259, U+1E00-1EFF, U+2020, U+20A0=
-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-display: swap; font-family: "Open Sans"; font-style: norm=
al; font-weight: 400; src: url("images/ff9d619b59f5cb3529b100448f398ac5.wof=
f2") format("woff2"), url("images/89ba4e29dc7a63cd15959a5bb068bb0e.woff") f=
ormat("woff"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U=
+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U=
+2215, U+FEFF, U+FFFD; }

.BPSSJQ { display: flex; flex-direction: column; font-family: "Open Sans", =
sans-serif; height: 100%; justify-content: flex-end; line-height: 1.6; max-=
height: 100%; pointer-events: none; text-align: center; width: 100%; }

.UkcVBg { background: rgba(13, 18, 22, 0.7); color: rgb(255, 255, 255); dis=
play: inline-block; padding: 4px 8px; }

.yFEglQ { white-space: nowrap; }

._3NW_OA { background: none; border: none; cursor: pointer; margin-right: 2=
4px; padding: 0px; }

.MWNIKw { outline: none; }

.nbb59g { margin-left: 24px; margin-right: auto; }

.lM4cjQ { color: var(--VcZbvQ); }

._3NW_OA:disabled .lM4cjQ { color: var(--PRQgyw); }

._3jDRow { align-items: center; display: flex; opacity: 0; position: relati=
ve; }

.QnPmDw { flex-wrap: wrap; justify-content: space-between; }

.q4QWTw { align-items: center; display: flex; margin-left: auto; }

._5Zlb5Q { opacity: 1; pointer-events: auto; }

.e_HzGw { transition: opacity 0.25s ease 0s; }

._2_pnug { color: var(--VcZbvQ); direction: ltr; font-family: "Canva Sans",=
 "Noto Sans Variable", "Noto Sans", -apple-system, BlinkMacSystemFont, "Seg=
oe UI", Helvetica, Arial, sans-serif; font-size: calc(var(----lgQg, .1rem)*=
8/8*12); line-height: 1.4; padding-right: 24px; white-space: nowrap; }

._2Ouzng { height: 52px; position: relative; width: 100%; }

.s0wW_g { order: 3; }

.QCi37g { appearance: none; background: none; box-sizing: border-box; direc=
tion: ltr; display: block; height: 100%; margin: 0px; padding: 24px 8px; wi=
dth: 100%; }

.BDTDKw { transition: all 0.2s ease 0s; }

.QCi37g:hover { cursor: pointer; }

.QCi37g:active { cursor: grabbing; }

.bbGOcQ:focus { outline: none; }

.QCi37g::-webkit-slider-thumb { appearance: none; background-clip: content-=
box; background-color: var(--6u-yJQ); border: 14px solid transparent; borde=
r-radius: 100%; box-sizing: border-box; filter: drop-shadow(rgba(28, 39, 48=
, 0.5) 0px 0px 1px); height: 40px; opacity: 1; width: 40px; }

.BDTDKw::-webkit-slider-thumb { transition: transform 0.2s ease 0s; }

.QCi37g:active::-webkit-slider-thumb { transform: scale(1.25); }

.fHHmQw { opacity: 0; pointer-events: none; position: relative; }

.kFnREQ { opacity: 1; }

.kFnREQ.xE5Oww { transition: opacity 0.15s ease-in 0s; }

.VclgIw { background-color: rgb(13, 18, 22); border-radius: 4px; bottom: 24=
px; color: rgb(255, 255, 255); left: 0px; padding: 6px 10px; position: abso=
lute; transform: translateX(-50%); }

.VclgIw::before { background-color: inherit; border-radius: 0px 0px 3px; bo=
ttom: -4px; content: ""; height: 8px; left: 50%; position: absolute; transf=
orm: translateX(-50%) rotate(45deg); width: 8px; }

.DYvFsA, .DuLOcg, .k9236g { height: 100%; position: absolute; width: 100%; =
}

.DuLOcg, .k9236g { box-sizing: border-box; }

.k9236g { padding: 24px 28px; }

.LK9gBQ { height: 4px; position: relative; }

._6UfzEQ { background-color: var(--6u-yJQ); box-sizing: border-box; left: 4=
px; right: 4px; transform-origin: left center; }

.Idr01w, ._6UfzEQ { height: inherit; position: absolute; }

.Idr01w { background-color: inherit; top: 0px; width: 4px; }

.jz_KVw { border-radius: 100% 0px 0px 100%; right: 100%; transform-origin: =
right center; }

.WcClCQ { border-radius: 0px 100% 100% 0px; left: 100%; transform-origin: l=
eft center; }

.mbNwCw { left: calc(100% - 1px); }

._5MYBAA, .i6797g { height: 100%; position: absolute; width: 100%; }

.i6797g { box-sizing: border-box; padding: 24px; }

.Z5sRUw { position: relative; }

.jnz76g { cursor: inherit; display: inline-block; }

.smjR_Q { color: var(--PRQgyw); }

.light { ---sugNw: #f6f7f8; }

.dark { ---sugNw: #252627; }

.SNEyeQ { align-items: stretch; background-color: var(--C-q6Ig); border-wid=
th: 1px; border-style: solid; border-image: initial; border-color: var(--Zy=
a5eQ); border-radius: 8px; box-sizing: border-box; color: var(--VcZbvQ); cu=
rsor: text; display: flex; outline: none; overflow: hidden; position: relat=
ive; width: 100%; }

.XLEWAA { height: calc(var(----lgQg, .1rem)*8*5); padding: 0px 12px; }

.UOc2_A { padding-left: 0px; }

.QtG3IQ { padding-right: 0px; }

.Pe8c4g:not(.ltD3zQ, .lPNpLg, .Vq3Qgg, ._LBWaA):hover { border-color: var(-=
-9_Lxmw); }

.ltD3zQ { border-color: var(--xAYPzA); }

.SJWROg { outline: -webkit-focus-ring-color solid 2px; outline-offset: -2px=
; }

.Vq3Qgg { border-color: var(--nOtbOg); }

.lPNpLg { background-color: var(---sugNw); border-color: var(--VjFOWQ); col=
or: var(--PRQgyw); cursor: not-allowed; }

._LBWaA:not(.Vq3Qgg) { background-color: transparent; border-color: transpa=
rent; }

.bCVoGQ { appearance: none; background: inherit; border: 0px; box-sizing: b=
order-box; color: inherit; font-variant-ligatures: none; min-width: 8px; ou=
tline: none; width: 100%; }

.n1hUmA { padding: 0px 0px 1px; }

.eiradA::-webkit-contacts-auto-fill-button { position: absolute; right: 0px=
; visibility: hidden; }

[dir=3D"rtl"] .bCVoGQ:placeholder-shown { direction: rtl; }

.bCVoGQ::placeholder { color: var(--TJtBjA); }

.bCVoGQ:disabled { color: var(--PRQgyw); cursor: not-allowed; }

._0ViUFA { align-items: center; display: flex; flex: 1 0 32px; justify-cont=
ent: center; padding: 0px 4px; }

._0ViUFA:first-child { padding-left: 3px; }

._0ViUFA:last-child { padding-right: 3px; }

.SRq2qg { text-align: center; }

.bCVoGQ[type=3D"number"]::-webkit-inner-spin-button, .bCVoGQ[type=3D"number=
"]::-webkit-outer-spin-button { appearance: none; margin: 0px; }

.bCVoGQ[type=3D"number"] { }

.bCVoGQ[type=3D"search"]::-webkit-search-cancel-button, .bCVoGQ[type=3D"sea=
rch"]::-webkit-search-decoration, .bCVoGQ[type=3D"search"]::-webkit-search-=
results-button, .bCVoGQ[type=3D"search"]::-webkit-search-results-decoration=
 { display: none; }

.YpcSdQ { -webkit-tap-highlight-color: transparent; position: relative; }

.G83NzQ, .YpcSdQ { cursor: pointer; height: 100%; width: 100%; }

.G83NzQ { margin: 0px; opacity: 0; position: absolute; }

.G83NzQ::-webkit-slider-thumb { height: 20px; width: 20px; }

.G83NzQ.JbhT1A { cursor: not-allowed; }

.of3vlA { left: 0px; width: 100%; }

._8UGKVA, .of3vlA { height: 100%; position: absolute; }

._8UGKVA { left: 10px; width: calc(100% - 20px); }

.sQbJYw { margin-left: var(--sI0vHQ); position: relative; top: 50%; }

.light { --iXacOw: #f0f1f5; --BKx0jQ: rgba(165,112,255,.2); }

.dark { --iXacOw: #898d90; --BKx0jQ: rgba(165,112,255,.4); }

.f4H83g { height: 40px; }

._4j6ppg._4j6ppg { padding: 0px; width: calc(var(----lgQg, .1rem)*8*5); }

.xcyqug { text-align: center; }

.h8V5DQ { top: 50%; transform: translateY(-50%); }

.FzHnpA, .h8V5DQ { height: 4px; position: absolute; width: 100%; }

.FzHnpA { background: var(--EDBnWg,var(--yrvb-A)); border-radius: 9999px; t=
ransform: scaleX(1); }

._5Frk1w { align-items: center; display: flex; justify-content: center; lef=
t: 100%; }

._5Frk1w, ._5Frk1w::before { border-radius: 9999px; height: 20px; position:=
 absolute; top: 50%; transform: translate(-50%, -50%); width: 20px; }

._5Frk1w::before { background: var(--igtOUw,var(--VfoYEg)); border: 1px sol=
id var(--cDTB8w,var(--Zya5eQ)); box-shadow: var(--3LGewA); box-sizing: bord=
er-box; content: ""; left: 50%; transition: transform 0.1s ease-in-out 0s; =
}

._5Frk1w.KLT3Nw::before { --cDTB8w: var(--9_Lxmw); height: 22px; width: 22p=
x; }

._5Frk1w.ZmvkpQ::before { --cDTB8w: var(--xAYPzA); box-shadow: unset; heigh=
t: 22px; width: 22px; }

._5Frk1w.s9U0XA::before { --cDTB8w: var(--VjFOWQ); background: var(--iXacOw=
); box-shadow: none; }

._5Frk1w::after { background: none; border-radius: 9999px; box-sizing: bord=
er-box; content: ""; height: 20px; left: 50%; position: absolute; top: 50%;=
 transform: translate(-50%, -50%); transition: box-shadow 0.1s ease-in-out =
0s; width: 20px; }

._5Frk1w._aTFiA::after { box-shadow: 0 0 0 10px var(--MghLXQ); }

._5Frk1w.ZmvkpQ::after { box-shadow: 0 0 0 10px var(--BKx0jQ); }

._0VC5wQ { background: var(--vrWjkA,var(--eGVbng)); clip-path: inset(0 var(=
--yOWLCQ) 0 var(--5GtT_Q) round 9999px); height: 4px; position: absolute; t=
op: 50%; transform: translateY(-50%); width: 100%; }

._0VC5wQ.s9U0XA { background: var(--oqurdw); }

.gEWUlg { display: flex; left: 10px; position: relative; width: calc(100% -=
 20px); }

._1JSmpw { max-width: calc(100% - 4px); min-width: 0px; }

.km_40w { background-color: var(--Zya5eQ); height: 4px; transform: translat=
eY(-6px); width: 4px; }

.O8pekQ, .km_40w { border-radius: 9999px; }

.O8pekQ { background-color: var(---UopgA); height: 2px; position: absolute;=
 width: 2px; }

.DvlkcQ { left: 1px; top: 1px; }

._7j_Vbg { right: 1px; top: 1px; }

.tk5bqA { align-items: center; bottom: 24px; display: flex; height: 40px; l=
eft: calc(50% + 8px); opacity: 0; padding: 0px 8px; pointer-events: none; p=
osition: absolute; transform: rotate(-90deg); transform-origin: left bottom=
; transition: opacity 0.5s ease 0s; }

.V5bi0A { opacity: 1; pointer-events: auto; }

.mrjvFA { background-color: rgba(255, 255, 255, 0.4); border-radius: 2px; h=
eight: 4px; transform: translateY(-50%); width: 100%; }

.mrjvFA, .nu5SEQ { position: absolute; top: 50%; }

.nu5SEQ { background: rgb(255, 255, 255); border-radius: 50%; filter: drop-=
shadow(rgba(28, 39, 48, 0.5) 0px 0px 1px); height: 20px; left: 100%; transf=
orm: translate(-50%, -50%); transition: transform 0.2s ease 0s; width: 20px=
; }

.nu5SEQ.nvrn9Q { transform: translate(-50%, -50%) scale(1.25); }

.nu5SEQ.XcMV8g { outline: -webkit-focus-ring-color auto 5px; }

.nu5SEQ.Wuyo6A { outline: none; }

.I4sCDQ { background-image: linear-gradient(transparent,var(--KtXlRg)); bot=
tom: 0px; height: 80px; left: 0px; max-height: 100%; opacity: 0; position: =
absolute; right: 0px; transform-origin: center bottom; transition: transfor=
m 0.25s ease 0s; }

.n1_ZIg { height: 120px; }

@media (max-width: 599px) {
  .nRVLfw { height: calc((var(--safe-area-inset-bottom) + 8px*10*1.5)*1.1);=
 }
}

.A2yCKg { opacity: 1; }

.v4nAuw { transition: opacity 0.25s ease 0s, transform 0.5s ease 0s; }

.XUGaUA { transform: scaleY(3.5); }

._97009w { height: 100%; pointer-events: none; position: absolute; width: 1=
00%; }

.tqhDGw { pointer-events: auto; }

.KGHx9g { opacity: 0; }

.S7gH5g { opacity: 1; }

.qGs8mQ { background-color: var(--KtXlRg); border: none; border-radius: 100=
%; color: var(--6u-yJQ); cursor: pointer; display: block; height: 48px; opa=
city: 0; outline: none; padding: 0px; pointer-events: none; width: 48px; }

.qGs8mQ:hover { background-color: var(--QADODw); transform: scale(1.05); }

.qGs8mQ:active { background-color: var(--kTBxcw); }

.gI9ywA { opacity: 1; pointer-events: auto; }

.tnQ9tQ { height: 24px; width: 24px; }

.BDjDQQ { transition: opacity 0.25s ease-out 0s, background-color 0.2s ease=
-out 0s, transform 0.2s ease-out 0s; }

.BDjDQQ.hafdyw { transform: scale(1.5); transition: opacity 0.35s ease-out =
0s, transform 0.35s ease-out 0s; }

.Lqh_3w { cursor: auto; height: 100%; left: 0px; pointer-events: none; posi=
tion: absolute; top: 0px; width: 100%; }

.foMqyw, .thT2yw { height: fit-content; margin: auto; top: 0px; width: fit-=
content; }

.Qy939g, .foMqyw, .thT2yw { bottom: 0px; left: 0px; pointer-events: none; p=
osition: absolute; right: 0px; }

.OLvpgw { position: relative; transform: translateY(100%); }

.OLvpgw.U_3fPA { transform: translateY(0px); }

.OLvpgw.PZ3xOQ { transition: transform 0.25s ease 0s; }

.KTdHOA { opacity: 0; }

.KTdHOA.U_3fPA { opacity: 1; pointer-events: auto; }

.KTdHOA.PZ3xOQ { transition: opacity 83.3333ms ease 0s; }

.OLvpgw.U_3fPA .KTdHOA.PZ3xOQ { transition-delay: 83.3333ms; }

.tl_uBw { pointer-events: none; position: absolute; width: 100%; }

.c3S1Sg { bottom: 100%; padding-bottom: 2%; }

.Yv0Udg { padding-top: 4px; top: 100%; }

.Bu_D9Q { inset: 0px; pointer-events: none; position: absolute; }

.fLZWsQ { bottom: var(--safe-area-inset-bottom); }

.E3Eshw { transform: scaleX(-1) rotate(45deg); }

[dir=3D"rtl"] .E3Eshw { transform: rotate(45deg); }

._0d0kIw { color: var(--VcZbvQ); font-size: 0px; opacity: 0; }

.eyDYeQ { filter: drop-shadow(rgba(57, 76, 96, 0.15) 0px 2px 8px) drop-shad=
ow(rgba(64, 87, 109, 0.07) 0px 0px 0px); opacity: 1; transition: opacity 0s=
 ease 1s; }

.uDupQw { transition-duration: 0.25s; }

.eyDYeQ.uDupQw { animation: 0.6s linear 0s infinite normal none running eT6=
GTQ; }

@keyframes eT6GTQ {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.V2GgQg { left: 0px; position: absolute; top: 0px; }

.AS5EhQ, .V2GgQg { height: 100%; width: 100%; }

.AS5EhQ { overflow: hidden; position: relative; }

._4UrDqA { height: 100%; width: 100%; }

.NI12hw { pointer-events: none; }

.FLDMzw { backface-visibility: hidden; display: none; }

.FLDMzw.Zmd7Ig { display: block; }

._6oMxRw { left: 0px; opacity: 1; position: absolute; top: 0px; }

._6oMxRw.vEnjCA { opacity: 0; }

._6oMxRw.wgIPfg { transition: opacity 0.3s ease-in-out 0s; }

@media print {
  .t1Akgg { position: absolute; }
}

.FLDMzw.f_YWrg, ._6oMxRw.f_YWrg { filter: grayscale(0.45); transition: filt=
er 0s ease 2s; }

.BVJWuA { object-fit: fill; }

.mBtRaQ { object-fit: contain; }

._Ta_ew { object-fit: cover; }

.paNqSg { left: 0px; object-fit: fill; position: absolute; top: 0px; }

.jXCxjw, .paNqSg { height: 100%; width: 100%; }

.RDErXw { left: 0px; opacity: 1; position: absolute; top: 0px; }

._8BlrHw { visibility: hidden; }

.bvFjSA { height: 100%; width: 100%; }

.BzO_BA { left: 0px; opacity: 1; position: absolute; top: 0px; }

.WOwPgA { visibility: hidden; }

._8jGYJw { background: rgb(255, 255, 255); contain: strict; overflow: hidde=
n; position: relative; z-index: 0; }

.fMSICA { display: none; height: 100%; left: 0px; position: absolute; top: =
0px; width: 100%; }

.h517IA { display: unset; }

._5yhCRQ { height: 100%; width: 100%; }

.SgSN8Q { left: 50%; overflow: hidden; position: absolute; top: 50%; }

._5tRK_w { left: 0px; position: absolute; top: 0px; will-change: opacity; }

.MbkImg { left: 0px; margin: 0px auto; max-width: 480px; position: fixed; r=
ight: 0px; text-align: center; top: 0px; width: fit-content; }

.MbkImg.RDTSdw { top: var(--safe-area-inset-top); }

.ncH3wQ { background-color: var(--4RaSjg); border-radius: 12px; box-shadow:=
 var(--ej6pBg); box-sizing: border-box; color: var(--VcZbvQ); display: inli=
ne-flex; margin-top: 16px; max-width: 480px; min-height: 48px; padding: 8px=
; text-align: start; width: fit-content; }

.ncH3wQ.anbz7g { padding: 0px; }

.ncH3wQ._5sEdEQ { align-items: center; flex-wrap: wrap; justify-content: fl=
ex-end; }

.ncH3wQ.asO08A { border-radius: 12px; }

.ncH3wQ.asO08A.anbz7g, .vkX3IA { padding: 8px; }

.vkX3IA { align-items: center; display: flex; flex: 1 1 auto; margin-top: 1=
px; }

.ncH3wQ > .vkX3IA { padding: 0px 16px; }

.ncH3wQ.anbz7g > .vkX3IA { padding: 0px 24px 0px 8px; }

.ncH3wQ.asO08A > .vkX3IA { padding: 0px 8px; width: 100%; }

.ncH3wQ.anbz7g._5sEdEQ > .vkX3IA { padding: 0px 16px 0px 8px; }

.ncH3wQ.anbz7g.asO08A > .vkX3IA { align-items: flex-start; }

.ncH3wQ.asO08A._5sEdEQ > .vkX3IA { padding: 0px 16px 0px 8px; }

.ncH3wQ.anbz7g ._5pDUDA, .ncH3wQ.asO08A ._5pDUDA { padding: 8px 0px; }

._5pDUDA { color: var(--VcZbvQ); }

.A3zffA { align-items: center; border-radius: 100%; display: flex; flex: 0 =
0 auto; height: 32px; justify-content: center; margin-right: 16px; overflow=
: hidden; width: 32px; }

.ncH3wQ.asO08A .A3zffA { margin: calc(var(----lgQg, .1rem)*8) 16px 8px 0; }

.ou_cHQ { color: var(--VcZbvQ); }

.anbz7g .ou_cHQ { margin: 8px; }

.ncH3wQ:not(.anbz7g) .hZhfug.WUWMlA { margin-left: 8px; }

.ncH3wQ:not(.asO08A) > .ou_cHQ { border-radius: 8px; height: 32px; margin-l=
eft: 0px; }

.ncH3wQ.asO08A > .ou_cHQ { margin: 0px 8px 8px; }

.T0th0w { height: 400px; left: 50%; pointer-events: none; position: absolut=
e; top: 50%; transform: translate(-50%, -50%); width: 400px; }

@media (max-width: 599px) {
  .MbkImg, .ncH3wQ { max-width: calc(100% - 8px); }
  .MbkImg .ncH3wQ { max-width: 100%; }
}

.m0o80A { direction: ltr; position: relative; }

._5VT_ZQ { overflow: hidden; }

.leQiaw { background: rgb(255, 255, 255); overflow: hidden; position: relat=
ive; z-index: 0; }

.QpzFLQ, .leQiaw { height: 100%; width: 100%; }

.QpzFLQ { z-index: 1; }

.QpzFLQ, ._3jyCFg { left: 0px; position: absolute; top: 0px; }

._3jyCFg { bottom: 0px; outline: none; overflow: hidden; pointer-events: au=
to; right: 0px; }

.huQXpw { visibility: hidden; }

.dZIifg { height: 100%; width: 100%; }

.QnvzCw { visibility: hidden; }

.hTDRDw { height: 100%; left: 0px; position: absolute; top: 0px; width: 100=
%; }

.dtWLRg { align-items: center; background-color: var(--C-q6Ig); color: var(=
--VcZbvQ); display: flex; height: 100vh; justify-content: center; width: 10=
0vw; }

.NlaLLA { min-height: 100%; overflow: hidden auto; }

.PWggew.kGD_Ag { height: 100%; }

._3noIMA.nOlRlA { position: absolute; }

._3noIMA.sccT0g { height: 100%; left: 0px; top: 0px; width: 100%; }

._3noIMA.n_Iz9g { --WEqyIA: inset(-100vw 0 -100vw -100vw); }

._3noIMA { clip-path: var(--WEqyIA); }

.PWggew .DT2Z6w { height: 100%; position: absolute; width: 100%; }

.j9opYA { background-color: rgba(13, 18, 22, 0); pointer-events: none; z-in=
dex: 2; }

._8ZteIQ .j9opYA { transition: background-color 0.3s ease-in-out 0s; }

.PWggew .j9opYA { background-color: var(--olfr3Q); pointer-events: auto; }

.G_2PJg { height: 100%; opacity: 0; pointer-events: none; }

.sccT0g .G_2PJg { position: absolute; }

.sccT0g.n_Iz9g .G_2PJg { right: 0px; top: 0px; }

.n_Iz9g .G_2PJg { transform: translateX(64px); }

._8ZteIQ .sccT0g .G_2PJg { transition: transform 0.3s ease-in-out 0s, opaci=
ty 0.3s ease-in-out 0s; }

.PWggew .G_2PJg { opacity: 1; transform: translateX(0px) translateY(0px); }

._1a9kdA { box-sizing: border-box; display: flex; height: 100%; pointer-eve=
nts: none; position: relative; }

.sccT0g.n_Iz9g ._1a9kdA { flex-direction: row-reverse; }

.QNFQMg { background: var(--4RaSjg); box-sizing: border-box; display: flex;=
 flex: 1 1 auto; flex-direction: column; height: min-content; max-height: 1=
00%; overflow: auto; overscroll-behavior: contain; pointer-events: auto; }

.kGD_Ag .QNFQMg { height: 100%; }

.eVRZRA { flex: 1 0 auto; z-index: 0; }

.l3vAqg { height: 100%; }

.jDe9Eg { align-items: center; border-bottom: 1px solid rgba(0, 0, 0, 0.07)=
; box-sizing: border-box; display: flex; height: 48px; justify-content: fle=
x-end; position: sticky; width: 100%; z-index: 1; }

._65lpxA { height: calc(100% - 48px); }

.DBPC9g, .PevfOw { font-size: 1.5rem; font-weight: 400; }

.DBPC9g { display: flex; }

.PevfOw { box-sizing: border-box; margin: 0px; max-width: 320px; min-height=
: 100%; overflow: auto; padding: 12px; text-decoration: none; white-space: =
nowrap; width: 100%; }

.KJpqkQ { font-weight: 700; overflow: hidden; padding: 12px 16px; text-over=
flow: ellipsis; transition: opacity 0.1s ease-out 0s; }

.KJpqkQ:hover, .kWEHHA { opacity: 0.7; }

.kWEHHA { font-weight: 400; }

.kWEHHA:hover { opacity: 1; }

.kWEHHA._7QzcfA { font-weight: 700; opacity: 1; }

._1UF_UQ { min-height: 100%; }

.uPOslw { align-items: center; display: flex; justify-content: center; }

.rGeu6w { flex: 1 1 0%; }

.rGeu6w ~ .rGeu6w { margin-top: -1px; }

.ZRRuDw { height: 100%; overflow: hidden scroll; position: relative; width:=
 100%; }

.KYQZFA, .vLyVEg { overflow: hidden; }

.KYQZFA { display: flex; flex-direction: column; min-height: 100%; width: 1=
00%; }

.t1oL1w { overflow: visible; }

.sh45tw { left: 0px; opacity: 1; position: absolute; right: 0px; top: 0px; =
}

._4l7S6g { opacity: 0; transition-duration: 0.3s; transition-property: opac=
ity; }

.i8uyCw { direction: ltr; }

.i8uyCw, .m_U7nQ { align-items: center; display: flex; justify-content: cen=
ter; position: relative; }

.m_U7nQ { user-select: none; }

.m_U7nQ > * { flex-shrink: 0; }

.Khtu_w { transition: transform 0.2s ease 0s; }

._7m9YXQ { height: 100%; left: 0px; position: absolute; top: 0px; width: 10=
0%; }

.kN573Q { cursor: grab; }

.cQOgeg { cursor: grabbing; }

.etYr_A { cursor: zoom-in; }

.umIf3w { user-select: text; }

.cYjE6g { align-items: center; display: grid; grid-template-columns: 1fr ma=
x-content max-content; }

.cw5law { font-variant-numeric: tabular-nums; }

.vPnNMA { height: 0px; overflow: hidden; }

._4KoDHA { display: flex; flex-direction: column; height: 100%; overflow: h=
idden; width: 100%; }

._0ZlDwQ { display: block; }

._0ZlDwQ > img, ._0ZlDwQ > svg { display: block; height: 100%; width: 100%;=
 }

.XMxBAg { background-color: var(--KtXlRg); height: 100%; width: 100%; }

.KbnsIQ, .XMxBAg { align-items: center; display: flex; justify-content: cen=
ter; }

.KbnsIQ { background: transparent; color: var(--6u-yJQ); flex-direction: co=
lumn; height: 120px; width: 120px; }

.vgeQMA { margin-top: 8px; }

.UvA7mQ { align-items: center; display: flex; height: 50px; justify-content=
: center; margin: 0px auto; width: 50px; }

.mQjzcA { background: linear-gradient(to bottom,var(--Pj6GZQ) 0,transparent=
 100%); opacity: 0; padding: 12px 28px; }

.UfMiEQ { opacity: 1; }

.UfMiEQ .dlM2cw { pointer-events: auto; }

._5Y_dgA { transition: opacity 0.25s ease-out 0s, background-color 0.2s eas=
e-out 0s, transform 0.2s ease-out 0s; }

.PuABGQ { cursor: pointer; outline-offset: 3px; text-decoration: initial; }

.PuABGQ[aria-disabled] { cursor: not-allowed; }

.vFBXLA { outline: none; }

.YnfReg { background-color: var(--Zy1MMQ); border-color: var(--jVIKfw); col=
or: var(--Bs77DA,var(--VcZbvQ)); transition: background-color 0.1s linear 0=
s, border-color 0.1s linear 0s, color 0.1s linear 0s; }

.YnfReg:hover { background-color: var(--flkbuA,var(--Zy1MMQ)); border-color=
: var(--KOHiag,var(--jVIKfw)); color: var(--OOgyHg,var(--Bs77DA,var(--VcZbv=
Q))); }

.Nnp2tw:hover { background-color: var(--Zy1MMQ); border-color: var(--jVIKfw=
); color: var(--Bs77DA,var(--VcZbvQ)); }

.YnfReg:active, ._7kRww, ._7kRww:hover { background-color: var(--DYmj-w,var=
(--flkbuA,var(--Zy1MMQ))); border-color: var(--TRxkXw,var(--KOHiag,var(--jV=
IKfw))); color: var(--LKSbnA,var(--OOgyHg,var(--Bs77DA,var(--VcZbvQ)))); }

._7Gc_g, ._7Gc_g:hover { background-color: var(--ay7Jgg); border-color: var=
(--rAXYhQ); color: var(--9NqZDA); }

.a1ZYkQ { --jVIKfw: var(--igdHlg); --KOHiag: var(--_kLulA); --rAXYhQ: var(-=
-TCEPKw); }

.ciONtA { --jVIKfw: var(--BhjlKg); --KOHiag: var(--BhjlKg); --rAXYhQ: var(-=
-TCEPKw); }

._3_pOZg { --jVIKfw: var(--enMi_w); --KOHiag: var(--_kLulA); --rAXYhQ: var(=
--TCEPKw); }

._mjWKg { --Zy1MMQ: var(--Kd3K9A); --Bs77DA: var(--PqRKXQ); --flkbuA: var(-=
-DVEAGQ); --DYmj-w: var(--V0s6Og); --ay7Jgg: var(--gFgXSg); --9NqZDA: var(-=
-wBWOJg); }

.q2t60g { --Zy1MMQ: var(--R-jrhg); --Bs77DA: var(--oAdupw); --flkbuA: var(-=
-GXtk9g); --DYmj-w: var(--xGXQgA); --ay7Jgg: var(--gFgXSg); --9NqZDA: var(-=
-wBWOJg); --jVIKfw: var(--8-4niA); --KOHiag: var(--8-4niA); --rAXYhQ: var(-=
-TCEPKw); }

.RnuYHg { --Zy1MMQ: var(--1sn2Sg); --Bs77DA: var(--GviWcg); --flkbuA: var(-=
-4HnQxA); --DYmj-w: var(--NRjSsw); --ay7Jgg: var(--gFgXSg); --9NqZDA: var(-=
-wBWOJg); --jVIKfw: var(--kl47TA); --KOHiag: var(--kl47TA); --rAXYhQ: var(-=
-TCEPKw); }

.uMo6Kw { --Zy1MMQ: var(--wd-tZA); --Bs77DA: var(--O8dBuQ); --flkbuA: var(-=
-ntzWpQ); --DYmj-w: var(--BorQ6g); --ay7Jgg: var(--KwfPsg); --9NqZDA: var(-=
-p5yS_g); }

.cFQXJQ { --Zy1MMQ: var(--EvA8JQ); --Bs77DA: var(--N8Oz5g); --flkbuA: var(-=
-gIrJLw); --DYmj-w: var(--XxI4hg); --ay7Jgg: var(--SvgSpA); --9NqZDA: var(-=
-4zRigw); }

.DbcRww { --Zy1MMQ: var(--wv7owA); --Bs77DA: var(--pxBf3A); --flkbuA: var(-=
-m9I-bA); --DYmj-w: var(--Hxdoag); --9NqZDA: var(--wBWOJg); --ay7Jgg: var(-=
-gFgXSg); }

._PhRSQ { border-top: none; border-right: none; border-left: none; border-i=
mage: initial; border-bottom: 1px solid var(--enMi_w); box-sizing: border-b=
ox; height: 1px; margin: 0px; }

._PhRSQ.AOEsjQ { border-bottom: unset; border-right: 1px solid var(--enMi_w=
); display: inline-block; height: 100%; width: 1px; }

.NTyjhA { display: grid; }

.NTyjhA.zU__lg { gap: 4px; }

.NTyjhA.mhmgXA { gap: 8px; }

.NTyjhA.tJWhNQ { align-items: center; grid-auto-columns: max-content; grid-=
auto-flow: column; }

.RX4d5g { margin-left: -16px; margin-right: -16px; }

.A_H5UA { border: 0px; border-radius: 0px; display: grid; grid-auto-columns=
: minmax(0px, 1fr); height: auto; min-height: calc(var(----lgQg, .1rem)*8*5=
); padding: 8px 16px; text-align: start; }

.tJWhNQ .A_H5UA { min-width: 40px; text-align: center; }

.cIkTdg .A_H5UA { border-radius: 8px; }

.A_H5UA:focus { outline: -webkit-focus-ring-color auto 2px; outline-offset:=
 -2px; }

.A_H5UA._3GeXMg { outline: none; }

.mIJZiw { align-items: center; display: grid; min-height: calc(var(----lgQg=
, .1rem)*8*2); }

.tJWhNQ .mIJZiw { justify-content: center; min-height: calc(var(----lgQg, .=
1rem)*8*5*.6); min-width: calc(var(----lgQg, .1rem)*8*2); }

.RX4d5g .mIJZiw { margin-left: 16px; margin-right: 16px; }

:first-child > .mIJZiw { display: none; }

.SX2FBg { align-items: center; display: flex; min-height: calc(var(----lgQg=
, .1rem)*8*4); padding: 0px 16px; }

.tv9Ung .a6ZJUw .A_H5UA { padding-left: 32px; }

.FcQ9eQ { height: fit-content; position: relative; }

.FcQ9eQ .NTyjhA { padding-left: 16px; }

.NTyjhA .FcQ9eQ .NTyjhA.zU__lg { padding-top: 4px; }

.NTyjhA .FcQ9eQ .NTyjhA.mhmgXA { padding-top: 8px; }

.PlaTvg { display: block; height: 16px; position: relative; }

.HtADdw { left: -8px; }

.HtADdw, .lbaKzg { position: absolute; }

.lbaKzg { left: 4px; top: 4px; width: 24px; }

.lbaKzg::before { content: ""; height: calc(100% + 8px); position: absolute=
; width: 32px; }

._675aRA._675aRA { background-color: unset; }

.vC1P5Q { height: calc(var(----lgQg, .1rem)*8/8*24); padding: calc(var(----=
lgQg, .1rem)*8/8*36/2 - var(----lgQg, .1rem)*8/8*24/2) 0; }

.CISlZg.vC1P5Q { height: calc(var(----lgQg, .1rem)*8/8*64); padding: calc(v=
ar(----lgQg, .1rem)*8/8*84/2 - var(----lgQg, .1rem)*8/8*64/2) 0; }

.Kdcx4Q { height: calc(var(----lgQg, .1rem)*8/8*21); padding: calc(var(----=
lgQg, .1rem)*8/8*32/2 - var(----lgQg, .1rem)*8/8*21/2) 0; }

.CISlZg.Kdcx4Q { height: calc(var(----lgQg, .1rem)*8/8*48); padding: calc(v=
ar(----lgQg, .1rem)*8/8*64/2 - var(----lgQg, .1rem)*8/8*48/2) 0; }

.lKPb_A { height: calc(var(----lgQg, .1rem)*8/8*16); padding: calc(var(----=
lgQg, .1rem)*8/8*26/2 - var(----lgQg, .1rem)*8/8*16/2) 0; }

.CISlZg.lKPb_A { height: calc(var(----lgQg, .1rem)*8/8*32); padding: calc(v=
ar(----lgQg, .1rem)*8/8*42/2 - var(----lgQg, .1rem)*8/8*32/2) 0; }

.KKcLMg { height: calc(var(----lgQg, .1rem)*8/8*14); padding: calc(var(----=
lgQg, .1rem)*8/8*22/2 - var(----lgQg, .1rem)*8/8*14/2) 0; }

.CISlZg.KKcLMg { height: calc(var(----lgQg, .1rem)*8/8*24); padding: calc(v=
ar(----lgQg, .1rem)*8/8*32/2 - var(----lgQg, .1rem)*8/8*24/2) 0; }

._4Rmgyg { height: calc(var(----lgQg, .1rem)*8/8*12); padding: calc(var(---=
-lgQg, .1rem)*8/8*20/2 - var(----lgQg, .1rem)*8/8*12/2) 0; }

.CISlZg._4Rmgyg { height: calc(var(----lgQg, .1rem)*8/8*18); padding: calc(=
var(----lgQg, .1rem)*8/8*24/2 - var(----lgQg, .1rem)*8/8*18/2) 0; }

._5OI0UQ, .cdTGIw { height: calc(var(----lgQg, .1rem)*8/8*11); padding: cal=
c(var(----lgQg, .1rem)*8/8*16/2 - var(----lgQg, .1rem)*8/8*11/2) 0; }

.CISlZg._5OI0UQ { height: calc(var(----lgQg, .1rem)*8/8*14); padding: calc(=
var(----lgQg, .1rem)*8/8*20/2 - var(----lgQg, .1rem)*8/8*14/2) 0; }

.CISlZg.cdTGIw { height: calc(var(----lgQg, .1rem)*8/8*12); padding: calc(v=
ar(----lgQg, .1rem)*8/8*18/2 - var(----lgQg, .1rem)*8/8*12/2) 0; }

@media (max-width: 599px) {
  .CISlZg.vC1P5Q { height: calc(var(----lgQg, .1rem)*8/8*48); padding: calc=
(var(----lgQg, .1rem)*8/8*64/2 - var(----lgQg, .1rem)*8/8*48/2) 0; }
  .CISlZg.Kdcx4Q { height: calc(var(----lgQg, .1rem)*8/8*32); padding: calc=
(var(----lgQg, .1rem)*8/8*42/2 - var(----lgQg, .1rem)*8/8*32/2) 0; }
  .CISlZg.lKPb_A { height: calc(var(----lgQg, .1rem)*8/8*24); padding: calc=
(var(----lgQg, .1rem)*8/8*32/2 - var(----lgQg, .1rem)*8/8*24/2) 0; }
  .CISlZg.KKcLMg { height: calc(var(----lgQg, .1rem)*8/8*20); padding: calc=
(var(----lgQg, .1rem)*8/8*26/2 - var(----lgQg, .1rem)*8/8*20/2) 0; }
  .vC1P5Q { height: calc(var(----lgQg, .1rem)*8/8*21); padding: calc(var(--=
--lgQg, .1rem)*8/8*32/2 - var(----lgQg, .1rem)*8/8*21/2) 0; }
  .Kdcx4Q { height: calc(var(----lgQg, .1rem)*8/8*18); padding: calc(var(--=
--lgQg, .1rem)*8/8*28/2 - var(----lgQg, .1rem)*8/8*18/2) 0; }
}

.vC_rrQ { align-items: center; display: grid; height: calc(var(----lgQg, .1=
rem)*8*5); }

.jNNffA { height: calc(var(----lgQg, .1rem)*8*3); width: calc(var(----lgQg,=
 .1rem)*8*3); }

._8sqYBw { flex-shrink: 0; }

.d3aZ_g { align-items: center; display: flex; justify-content: space-betwee=
n; position: relative; }

.d3aZ_g.Gl7qgw { height: 56px; padding: 0px 8px; }

.d3aZ_g.Jo_hQw { height: 72px; }

.d3aZ_g.aBgKRg { height: 48px; padding: 0px 16px; }

.d3aZ_g.aBgKRg.e2LXEw { padding-left: 8px; }

.d3aZ_g.aBgKRg.FkUYJA { padding-right: 8px; }

._5bmvVw { align-items: center; display: flex; }

.cyFVQw { color: var(--VcZbvQ); font-weight: 600; }

._WqSYw { color: var(--UpESEg); font-weight: 400; }

.Gl7qgw ._5bmvVw { inset: 0px; flex-direction: column; justify-content: cen=
ter; margin: 0px 96px; position: absolute; text-align: center; }

.aBgKRg .cyFVQw.e2LXEw { margin-left: 8px; }

.aBgKRg .EGbKBw { display: flex; }

.aBgKRg ._5bmvVw { flex-direction: row; }

.aBgKRg ._WqSYw { margin-left: 16px; }

.Gl7qgw .EGbKBw, .Gl7qgw .VFOYww { position: relative; }

.d3aZ_g .R8G9Qw._1NO8DQ { margin-right: 8px; }

.R8G9Qw._XSmrw { border-radius: 9999px; }

.d3aZ_g .R8G9Qw.CvsQcg { color: var(--8jnd6g); }

.HSItjQ { flex-shrink: 0; overflow: hidden; position: relative; width: 100%=
; }

.TlyRjg { flex-shrink: 1; height: 100%; }

.lgCwTw { display: flex; flex-direction: column; opacity: 1; width: 100%; }

.lgCwTw.jnm8yA { background-color: var(--C-q6Ig); }

.lgCwTw._7a0MrA { background-color: var(--4RaSjg); }

.lgCwTw.z2x6qw { transition: opacity 0.1s ease-in 0.1s; }

.lgCwTw.hbfrXQ, .lgCwTw.kMiJJw, .lgCwTw.zXTu8A { position: absolute; }

.lgCwTw.hbfrXQ { display: none; }

.lgCwTw.mzeNBQ { opacity: 0; pointer-events: none; }

.lgCwTw.z2x6qw.mzeNBQ { transition: opacity 0.1s ease-out 0s; }

.lgCwTw.zXTu8A { opacity: 0; }

.lgCwTw._6ynGDA { opacity: 1; transition: opacity 0.1s ease-out 0.1s; }

.lgCwTw.EjjR8w { opacity: 1; }

.lgCwTw.tqsc1g { opacity: 0; transition: opacity 0.1s ease-out 0s; }

.light { --VsFRFg: rgba(64,87,109,.04); }

.dark { --VsFRFg: #3b3c3d; }

.IGcqRA { pointer-events: none; }

.hKrj5w { display: block; margin-bottom: -1px; }

.FXahWA { fill: rgba(64, 87, 109, 0.07); }

.GnpaiQ { fill: var(--4RaSjg); pointer-events: auto; }

.l7doMw { fill: var(--VsFRFg); }

.hZ8bTw { --LAlrcA: auto; background: var(--4RaSjg); border-radius: 12px; b=
ox-shadow: var(--wlsoXA); max-height: calc(var(--YeGdzw, 100vh)); max-width=
: var(--HtEmWQ,100vw); opacity: 0; overflow-y: auto; overscroll-behavior: c=
ontain; width: var(--LAlrcA); }

.hZ8bTw.R0XHGA { --LAlrcA: calc(var(----lgQg, 0.1rem)*8*16); }

.hZ8bTw._3l3ZbQ { --LAlrcA: calc(var(----lgQg, 0.1rem)*8*32); }

.hZ8bTw.VJiigA { --LAlrcA: calc(var(----lgQg, 0.1rem)*8*40); }

.hZ8bTw.XYBS7g { --LAlrcA: calc(var(----lgQg, 0.1rem)*8*45); }

.hZ8bTw.UvYoXA { --LAlrcA: calc(var(----lgQg, 0.1rem)*8*52); }

.hZ8bTw.m_Hjdg { --LAlrcA: var(--HCkONw); }

.hZ8bTw._8wDWkw { width: auto; }

.hZ8bTw._8wDWkw:not(.Yv4y_g) { max-width: min(var(--LAlrcA),var(--HtEmWQ,10=
0vw)); }

.NadK1Q .hZ8bTw { opacity: 1; }

.aGfzfA .hZ8bTw { transition: opacity 0.15s ease-in-out 0s; }

.jLRJVg { position: sticky; top: 0px; z-index: 1; }

.iOotlg { border-bottom: 1px solid var(--OuCkCQ); }

.EN8ypA { transform: translateZ(0px); z-index: 0; }

.DT7wow { bottom: 0px; position: sticky; }

.dfv3Cw { align-items: center; border-radius: 9999px; display: inline-flex;=
 height: var(---Ei1sw,calc(var(----lgQg, .1rem)*8*2)); line-height: var(---=
Ei1sw,calc(var(----lgQg, .1rem)*8*2)); position: relative; vertical-align: =
middle; white-space: nowrap; }

.nlLhLg.nlLhLg { padding: 0px 6px; }

.R4rvPw { ---Ei1sw: calc(var(----lgQg, 0.1rem)*8*3); }

.R4rvPw.R4rvPw { padding: 0px 8px; }

.p236IQ { ---Ei1sw: calc(var(----lgQg, 0.1rem)*8*2.5); border-radius: 9999p=
x; box-sizing: border-box; justify-content: center; min-width: var(---Ei1sw=
,calc(var(----lgQg, .1rem)*8*2)); }

.p236IQ.p236IQ { padding: 0px 3px; }

.p236IQ.R4rvPw { ---Ei1sw: calc(var(----lgQg, 0.1rem)*8*3); }

.p236IQ.p236IQ.R4rvPw { padding: 0px 4px; }

._3cyDwg { align-items: center; display: flex; margin: 0px -1px; }

.nlLhLg ._3cyDwg.ZD99_w { padding-right: 2px; }

.R4rvPw ._3cyDwg.ZD99_w { margin-left: -4px; padding-right: 4px; }

.f4AGZw { border: 0px; cursor: pointer; margin: 0px; transition: background=
-color 0.15s ease-in-out 0s; }

.k8GnSQ { outline: none; }

@media (-moz-touch-enabled:1), (pointer: coarse) {
  .f4AGZw::after { border-radius: 9999px; content: ""; height: 40px; left: =
calc(50% - 20px); position: absolute; top: calc(50% - 20px); width: 40px; }
}

.Nb9Xzg { background-color: var(--KtXlRg); color: var(--6u-yJQ); }

.Nb9Xzg.pWUY_w:hover:not(.qIytXw) { background-color: var(--M5_pvA); color:=
 var(--d1p99w); }

.Nb9Xzg.B2RQtg { background-color: var(--boKKWg); color: var(--d1p99w); }

.Nb9Xzg.qIytXw { background-color: var(--HxK_kw); color: var(--J0YKvA); }

.A_ku8g { background-color: var(--Shm3YQ); color: var(--pj2xMA); }

.A_ku8g.pWUY_w:hover:not(.qIytXw) { background-color: var(--z7Xq7A); }

.A_ku8g.B2RQtg { background-color: var(--m9sa8w); }

.A_ku8g.qIytXw { background-color: var(--aj4L_w); color: var(--3YOFOw); }

.qIytXw { cursor: not-allowed; }

.MTDrYQ { box-shadow: 0 0 0 1px var(--4RaSjg); }

.s_G9mA { display: inline-flex; position: relative; }

.s_G9mA ._37YESw, .s_G9mA .dfv3Cw { pointer-events: none; position: absolut=
e; right: 0px; top: 0px; }

.s_G9mA ._53TVpg { transform-origin: right top; }

.B3IQdg { background-color: var(--4RaSjg); color: var(--4RaSjg); }

.FHOTwg ._37YESw, .FHOTwg .dfv3Cw { right: -8px; top: -8px; }

.LLz84g ._37YESw, .LLz84g .dfv3Cw { right: -4px; top: -4px; }

.wy_V2w ._37YESw, .wy_V2w .dfv3Cw { right: 4px; top: 4px; }

._2AtxFg ._37YESw, ._2AtxFg .dfv3Cw { right: 8px; top: 8px; }

._37YESw { border-radius: 50%; display: inline-block; height: 10px; positio=
n: relative; width: 10px; }

._37YESw::after { background-clip: content-box; border-radius: inherit; box=
-sizing: border-box; content: ""; height: 100%; outline: 1px solid var(--4R=
aSjg); position: absolute; right: 0px; width: 100%; }

._37YESw.E1p80Q::after { background-color: var(--c23L8g); }

._37YESw._2MRGSg::after { background-color: var(--KtXlRg); }

._37YESw.BPPm_g::after { background-color: var(--jTT_jQ); }

._37YESw.V8D7hw::after { background-color: var(--DXueYw); }

._37YESw.E6KPdA::after { background-color: var(--yrvb-A); }

._37YESw.J68CuA::after { background-color: var(--7psRVw); }

._37YESw._51jpag::after { background-color: var(--23ZOVQ); }

._37YESw.pGTlgQ::after { background-color: var(--scq9vQ); }

._37YESw.UIitoA::after { background-color: var(--1MO0IQ); }

._37YESw.rSjdjA::after { background-color: var(--pYULlw); }

._37YESw.x5GCvA::after { background-color: var(--Shm3YQ); }

._37YESw.UzIOIQ::after { background-color: var(--Ii7YFw); }

._37YESw.bQrlvg::after { background-color: var(--ydZUSA); }

@supports ((-webkit-mask:none) or (mask:none)) {
  ._37YESw::after { outline-color: transparent; }
  .dh9cXg { margin: -4px; mask-image: ; mask-size: ; mask-repeat: ; mask-or=
igin: ; mask-clip: ; mask-composite: ; mask-mode: ; mask-position: -4px 4px=
; padding: 4px; }
  .dh9cXg.IB6rVg { transition: mask-position 0.2s ease-in-out 0s, -webkit-m=
ask-position 0.2s ease-in-out 0s; }
  .dh9cXg.Kf8tnA { mask-position: 0px 0px; }
  .FHOTwg .dh9cXg { --0csNIg: -8px; --rH7NRg: -8px; }
  .LLz84g .dh9cXg { --0csNIg: -4px; --rH7NRg: -4px; }
  .wy_V2w .dh9cXg { --0csNIg: 4px; --rH7NRg: 4px; }
  ._2AtxFg .dh9cXg { --0csNIg: 8px; --rH7NRg: 8px; }
  [dir=3D"rtl"] .dh9cXg { mask-position: 4px 4px; }
}

._37YESw.a5gazg { animation: 2s ease-in-out 0s infinite normal none running=
 PWhc8A; transform-origin: 50% 50%; }

._37YESw.a5gazg::before { animation: 2s ease 0s infinite normal none runnin=
g _40LOaA; border-radius: inherit; content: ""; height: 100%; position: abs=
olute; right: 0px; transform-origin: 50% 50%; width: 100%; }

._37YESw.a5gazg.E1p80Q::before, ._37YESw.a5gazg.pGTlgQ::before { background=
-color: rgb(165, 112, 255); }

._37YESw.a5gazg._2MRGSg::before { background-color: var(--QADODw); }

._37YESw.a5gazg.BPPm_g::before, ._37YESw.a5gazg.UIitoA::before { background=
-color: var(--2hPbag); }

._37YESw.a5gazg.E6KPdA::before, ._37YESw.a5gazg.x5GCvA::before { background=
-color: var(--nwNs8w); }

._37YESw.a5gazg.V8D7hw::before, ._37YESw.a5gazg.rSjdjA::before { background=
-color: var(--3KQj6A); }

._37YESw.a5gazg.J68CuA::before, ._37YESw.a5gazg.UzIOIQ::before { background=
-color: var(--QVtuYg); }

._37YESw.a5gazg._51jpag::before, ._37YESw.a5gazg.bQrlvg::before { backgroun=
d-color: var(--VbVKHg); }

._53TVpg:not(.IB6rVg) { transition: none 0s ease 0s; }

._53TVpg { display: inline-block; transform: scale(1); transform-origin: ce=
nter center; transition: transform 0.2s ease-in-out 0s; }

._53TVpg.aYuJ1g { transform: scale(0); }

@keyframes PWhc8A {=20
  0% { transform: scale(0.85); }
  20% { transform: scale(0.85); }
  35% { transform: scale(1); }
  80% { transform: scale(1); }
  100% { transform: scale(0.85); }
}

@keyframes _40LOaA {=20
  0% { opacity: 0; transform: scale(0); }
  15% { opacity: 1; transform: scale(0); }
  60% { opacity: 0; transform: scale(2); }
  100% { opacity: 0; transform: scale(0); }
}

.AakfMw { position: relative; }

.t1U7DQ { display: inline-flex; line-height: var(---Ei1sw,calc(var(----lgQg=
, .1rem)*8*2)); }

.AakfMw .ksDhfg { position: absolute; }

.AakfMw .ksDhfg.Sa4oqw { top: 8px; }

.AakfMw .ksDhfg.lZSDPg { bottom: 8px; }

.AakfMw .ksDhfg.Q_mk4g { left: 8px; }

.AakfMw .ksDhfg.jbR37w { right: 8px; }

.AakfMw .ksDhfg.mfwqNg { width: calc(100% - 16px); }

.AakfMw .ksDhfg._6Jk_iw { top: 50%; transform: translateY(-50%); }

.AakfMw.BI9mYA .ksDhfg.Sa4oqw { top: 4px; }

.AakfMw.BI9mYA .ksDhfg.lZSDPg { bottom: 4px; }

.AakfMw.BI9mYA .ksDhfg.Q_mk4g { left: 4px; }

.AakfMw.BI9mYA .ksDhfg.jbR37w { right: 4px; }

.AakfMw.BI9mYA .ksDhfg.mfwqNg { width: calc(100% - 8px); }

.i9DiJQ .qUzfjg:not(.J_iOIw):not(.PGN0Eg), .qUzfjg.DY_Y5A, .qUzfjg.i9DiJQ {=
 opacity: 0; transition: opacity 0.15s ease-in-out 0s; }

.lveDKg.YYX7bQ:focus-within .i9DiJQ .qUzfjg:not(.J_iOIw):not(.PGN0Eg), .lve=
DKg.YYX7bQ:focus-within .qUzfjg.DY_Y5A, .lveDKg.YYX7bQ:focus-within .qUzfjg=
.i9DiJQ, .lveDKg:hover .i9DiJQ .qUzfjg:not(.J_iOIw):not(.PGN0Eg), .lveDKg:h=
over .qUzfjg.DY_Y5A, .lveDKg:hover .qUzfjg.i9DiJQ { opacity: 1; }

.PGN0Eg .qUzfjg:not(.i9DiJQ):not(.J_iOIw), .qUzfjg.PGN0Eg { transition: non=
e 0s ease 0s; visibility: hidden; }

.lveDKg.YYX7bQ:focus-within .PGN0Eg .qUzfjg:not(.i9DiJQ):not(.J_iOIw), .lve=
DKg.YYX7bQ:focus-within .qUzfjg.PGN0Eg, .lveDKg:hover .PGN0Eg .qUzfjg:not(.=
i9DiJQ):not(.J_iOIw), .lveDKg:hover .qUzfjg.PGN0Eg { visibility: visible; }

.J_iOIw.Q_mk4g .qUzfjg:not(.i9DiJQ):not(.PGN0Eg), .Q_mk4g .qUzfjg.J_iOIw, .=
qUzfjg.J_iOIw.Q_mk4g { opacity: 0; transform: translate3d(-16px, -50%, 0px)=
; transition: opacity 0.15s ease-in-out 0s, transform 0.15s ease-in-out 0s;=
 }

.J_iOIw.jbR37w .qUzfjg:not(.i9DiJQ):not(.PGN0Eg), .jbR37w .qUzfjg.J_iOIw, .=
qUzfjg.J_iOIw.jbR37w { opacity: 0; transform: translate3d(16px, -50%, 0px);=
 transition: opacity 0.15s ease-in-out 0s, transform 0.15s ease-in-out 0s; =
}

.lveDKg.YYX7bQ:focus-within .J_iOIw.Q_mk4g .qUzfjg:not(.i9DiJQ):not(.PGN0Eg=
), .lveDKg.YYX7bQ:focus-within .J_iOIw.jbR37w .qUzfjg:not(.i9DiJQ):not(.PGN=
0Eg), .lveDKg.YYX7bQ:focus-within .Q_mk4g .qUzfjg.J_iOIw, .lveDKg.YYX7bQ:fo=
cus-within .jbR37w .qUzfjg.J_iOIw, .lveDKg.YYX7bQ:focus-within .qUzfjg.J_iO=
Iw.Q_mk4g, .lveDKg.YYX7bQ:focus-within .qUzfjg.J_iOIw.jbR37w, .lveDKg:hover=
 .J_iOIw.Q_mk4g .qUzfjg:not(.i9DiJQ):not(.PGN0Eg), .lveDKg:hover .J_iOIw.jb=
R37w .qUzfjg:not(.i9DiJQ):not(.PGN0Eg), .lveDKg:hover .Q_mk4g .qUzfjg.J_iOI=
w, .lveDKg:hover .jbR37w .qUzfjg.J_iOIw, .lveDKg:hover .qUzfjg.J_iOIw.Q_mk4=
g, .lveDKg:hover .qUzfjg.J_iOIw.jbR37w { opacity: 1; transform: translate3d=
(0px, -50%, 0px); }

.J_iOIw.Sa4oqw .qUzfjg:not(.i9DiJQ):not(.PGN0Eg), .Sa4oqw .qUzfjg.J_iOIw, .=
qUzfjg.J_iOIw.Sa4oqw { opacity: 0; transform: translateY(-16px); transition=
: opacity 0.15s ease-in-out 0s, transform 0.15s ease-in-out 0s; }

.J_iOIw.lZSDPg .qUzfjg:not(.i9DiJQ):not(.PGN0Eg), .lZSDPg .qUzfjg.J_iOIw, .=
qUzfjg.J_iOIw.lZSDPg { opacity: 0; transform: translateY(16px); transition:=
 opacity 0.15s ease-in-out 0s, transform 0.15s ease-in-out 0s; }

.lveDKg.YYX7bQ:focus-within .J_iOIw.Sa4oqw .qUzfjg:not(.i9DiJQ):not(.PGN0Eg=
), .lveDKg.YYX7bQ:focus-within .J_iOIw.lZSDPg .qUzfjg:not(.i9DiJQ):not(.PGN=
0Eg), .lveDKg.YYX7bQ:focus-within .Sa4oqw .qUzfjg.J_iOIw, .lveDKg.YYX7bQ:fo=
cus-within .lZSDPg .qUzfjg.J_iOIw, .lveDKg.YYX7bQ:focus-within .qUzfjg.J_iO=
Iw.Sa4oqw, .lveDKg.YYX7bQ:focus-within .qUzfjg.J_iOIw.lZSDPg, .lveDKg:hover=
 .J_iOIw.Sa4oqw .qUzfjg:not(.i9DiJQ):not(.PGN0Eg), .lveDKg:hover .J_iOIw.lZ=
SDPg .qUzfjg:not(.i9DiJQ):not(.PGN0Eg), .lveDKg:hover .Sa4oqw .qUzfjg.J_iOI=
w, .lveDKg:hover .lZSDPg .qUzfjg.J_iOIw, .lveDKg:hover .qUzfjg.J_iOIw.Sa4oq=
w, .lveDKg:hover .qUzfjg.J_iOIw.lZSDPg { opacity: 1; transform: translateY(=
0px); }

.nEXsoQ { pointer-events: none; }

.C5FCpQ { pointer-events: all; }

.SyPwYg { position: relative; }

._582BSQ { position: absolute; right: 0px; top: 0px; }

.ZsFfHw { box-sizing: border-box; padding: 8px; }

.XCIV7g { padding: 0px; }

.wLt6JQ { padding: 8px 0px; }

.xf_ICA { padding: 0px 8px; }

.light { --R3SUow: rgba(28,39,48,.5); }

.dark { --R3SUow: hsla(0,0%,100%,.5); }

.vuhuDw { color: var(--R3SUow); }

.rZySiw { -webkit-tap-highlight-color: transparent; cursor: pointer; displa=
y: flex; }

.l0XMHQ { align-items: center; padding: 4px 0px; }

.WEJeTw { cursor: not-allowed; }

.UufAxw { appearance: none; margin: 0px; opacity: 0; width: 0px; }

.Emp7Uw { align-self: flex-start; }

.Emp7Uw, .Q5j_pg { display: inline-flex; }

.Q5j_pg { align-items: center; background: var(--C-q6Ig); border-radius: 4p=
x; box-shadow: inset 0 0 0 1px var(---UopgA); flex: 0 0 0%; justify-content=
: center; margin: calc(var(----lgQg, .1rem)*8*.5); transition: box-shadow 0=
.1s ease-in-out 0s; }

.Q5j_pg::before { content: "=E2=80=8B"; width: 0px; }

.Q5j_pg { height: calc(var(----lgQg, .1rem)*8*2); width: calc(var(----lgQg,=
 .1rem)*8*2); }

.Q5j_pg.EhOJ2A { height: calc(var(----lgQg, .1rem)*8*3); width: calc(var(--=
--lgQg, .1rem)*8*3); }

._8LCIjg.Q5j_pg { color: var(--eGVbng); }

.AF_FAg.Q5j_pg { color: inherit; }

.AzLxTA, .DPVGEQ { color: var(--d1p99w); opacity: 0; }

.Q5j_pg.BZUMgg, .Q5j_pg._1Gr7oQ { box-shadow: inset 0 0 0 calc(var(----lgQg=
, .1rem)*8); }

.Q5j_pg.EhOJ2A.BZUMgg, .Q5j_pg.EhOJ2A._1Gr7oQ { box-shadow: inset 0 0 0 cal=
c(var(----lgQg, .1rem)*8*2); }

.Q5j_pg.BZUMgg .DPVGEQ, .Q5j_pg._1Gr7oQ .AzLxTA { opacity: 1; }

.Q5j_pg.EhOJ2A.WEJeTw, .Q5j_pg.WEJeTw { background: var(--oqurdw); box-shad=
ow: inset 0 0 0 1px var(--VjFOWQ); }

.WEJeTw .AzLxTA, .WEJeTw .DPVGEQ { color: var(--17LfHw); }

.rZySiw.hbeYxA:not(.WEJeTw):hover .UufAxw:not(:active) + .Q5j_pg:not(._1Gr7=
oQ, .BZUMgg) { box-shadow: inset 0 0 0 1px var(--9_Lxmw); }

.rZySiw.hbeYxA:not(.WEJeTw):hover .UufAxw:not(:active) + .Q5j_pg:not(._1Gr7=
oQ, .BZUMgg) > .AzLxTA, .rZySiw.hbeYxA:not(.WEJeTw):hover .UufAxw:not(:acti=
ve) + .Q5j_pg:not(._1Gr7oQ, .BZUMgg) > .DPVGEQ { color: var(--nwNs8w); opac=
ity: 1; }

.rZySiw.hbeYxA:not(.WEJeTw):hover .UufAxw:not(:active) + .Q5j_pg._8LCIjg.BZ=
UMgg, .rZySiw.hbeYxA:not(.WEJeTw):hover .UufAxw:not(:active) + .Q5j_pg._8LC=
Ijg._1Gr7oQ { box-shadow: inset 0 0 0 calc(var(----lgQg, .1rem)*8) var(--M5=
_pvA); }

.rZySiw.hbeYxA:not(.WEJeTw):hover .UufAxw:not(:active) + .Q5j_pg.EhOJ2A._8L=
CIjg.BZUMgg, .rZySiw.hbeYxA:not(.WEJeTw):hover .UufAxw:not(:active) + .Q5j_=
pg.EhOJ2A._8LCIjg._1Gr7oQ { box-shadow: inset 0 0 0 calc(var(----lgQg, .1re=
m)*8*2) var(--M5_pvA); }

.rZySiw:not(.WEJeTw) .UufAxw:active + .Q5j_pg._8LCIjg:not(._1Gr7oQ, .BZUMgg=
) { color: var(--9_Lxmw); }

.rZySiw:not(.WEJeTw) .UufAxw:active + .Q5j_pg:not(._1Gr7oQ, .BZUMgg) { box-=
shadow: inset 0 0 0 1px,0 0 0 4px var(--3R4u8w); }

.rZySiw:not(.WEJeTw) .UufAxw:active + .Q5j_pg._8LCIjg:not(._1Gr7oQ, .BZUMgg=
) > .AzLxTA, .rZySiw:not(.WEJeTw) .UufAxw:active + .Q5j_pg._8LCIjg:not(._1G=
r7oQ, .BZUMgg) > .DPVGEQ { color: var(--nwNs8w); opacity: 1; }

.rZySiw:not(.WEJeTw) .UufAxw:active + .Q5j_pg:not(._1Gr7oQ, .BZUMgg, ._8LCI=
jg) > .AzLxTA, .rZySiw:not(.WEJeTw) .UufAxw:active + .Q5j_pg:not(._1Gr7oQ, =
.BZUMgg, ._8LCIjg) > .DPVGEQ { color: inherit; opacity: 1; }

.rZySiw:not(.WEJeTw) .UufAxw:active + .Q5j_pg._8LCIjg.BZUMgg, .rZySiw:not(.=
WEJeTw) .UufAxw:active + .Q5j_pg._8LCIjg._1Gr7oQ { color: var(--boKKWg); }

.rZySiw:not(.WEJeTw) .UufAxw:active + .Q5j_pg.BZUMgg, .rZySiw:not(.WEJeTw) =
.UufAxw:active + .Q5j_pg._1Gr7oQ { box-shadow: inset 0 0 0 16px,0 0 0 4px v=
ar(--3R4u8w); }

.rZySiw:not(.WEJeTw) .UufAxw:active + .Q5j_pg.BZUMgg > .AzLxTA, .rZySiw:not=
(.WEJeTw) .UufAxw:active + .Q5j_pg.BZUMgg > .DPVGEQ, .rZySiw:not(.WEJeTw) .=
UufAxw:active + .Q5j_pg._1Gr7oQ > .AzLxTA, .rZySiw:not(.WEJeTw) .UufAxw:act=
ive + .Q5j_pg._1Gr7oQ > .DPVGEQ { color: var(--d1p99w); opacity: 1; }

.rZySiw:not(.WEJeTw) .UufAxw:focus + .Q5j_pg { outline: -webkit-focus-ring-=
color auto 1px; outline-offset: 2px; }

.rZySiw:not(.WEJeTw) .UufAxw:focus + .Q5j_pg.cHp_rQ { outline: none; }

.D9BOzw { display: flex; flex-direction: column; flex-grow: 1; }

.BTLpWw { display: inline-block; max-width: 100%; }

.Rnvtxw { display: block; }

.c28R6w { padding: 8px 0px; }

.c28R6w.tL_4lw { max-height: calc(var(----lgQg, .1rem)*8*5*5.5); overflow: =
auto; position: relative; }

.ZA7_OA { height: calc(var(----lgQg, .1rem)*8*5); max-width: 100%; min-widt=
h: 80px; }

.ArvBWg { flex: 1 1 0%; padding-right: 8px; }

.e26Fbg { color: var(--TJtBjA); }

.NTjDmg, .NTjDmg.t_Z_aw.t_Z_aw { background-color: var(--BorQ6g); }

.NTjDmg.t_Z_aw.t_Z_aw:hover { background-color: var(--ntzWpQ); }

.GHEVjQ { align-items: center; display: grid; }

._0jghKQ, .c3pebg { background: var(--Ps9yUA); padding: 12px; position: sti=
cky; z-index: 1; }

._0jghKQ { border-bottom: 1px solid var(--igdHlg); top: 0px; }

.c3pebg { border-top: 1px solid var(--igdHlg); bottom: 0px; }

.ySgaMg { display: flex; }

._0POHjQ { min-width: 0px; overflow: hidden; text-overflow: ellipsis; white=
-space: nowrap; }

.mdt57w { padding-left: 4px; }

.mGRpHQ { background-color: rgba(255, 255, 255, 0.4); border-radius: 2px; }

._9bw4w, .mGRpHQ { height: 4px; position: absolute; top: 50%; transform: tr=
anslateY(-50%); width: 100%; }

._9bw4w { background: rgb(255, 255, 255); clip-path: inset(0 var(--5O31LA) =
0 var(--tmI1ow) round 9999px); }

._553odA { background: rgb(255, 255, 255); border-radius: 50%; filter: drop=
-shadow(rgba(28, 39, 48, 0.5) 0px 0px 1px); height: 20px; left: 100%; posit=
ion: absolute; top: 50%; transform: translate(-50%, -50%); transition: tran=
sform 0.2s ease 0s; width: 20px; }

._553odA.MNt_9w { transform: translate(-50%, -50%) scale(1.25); }

.VX1eLA { color: var(--PRQgyw); direction: ltr; font-family: "Canva Sans", =
"Noto Sans Variable", "Noto Sans", -apple-system, BlinkMacSystemFont, "Sego=
e UI", Helvetica, Arial, sans-serif; font-size: calc(var(----lgQg, .1rem)*8=
/8*12); line-height: 1.4; white-space: nowrap; }

.m59Ayw { color: var(--VcZbvQ); }

._1_F6oQ { height: 4px; width: 100%; }

.xftzJg { padding: 12px 28px; }

.rURnAQ { align-items: center; display: flex; justify-content: space-betwee=
n; }

.msWGFQ { bottom: 0px; direction: ltr; display: flex; flex-direction: colum=
n; height: fit-content; width: 100%; }

.sIRO9A { background: linear-gradient(0deg, rgba(17, 23, 29, 0.6) 0px, tran=
sparent); }

.CqJjmA { backdrop-filter: blur(2px); background: rgba(17, 23, 29, 0.6); }

._5ek_1A { align-items: center; display: flex; height: 40px; width: 40px; }

._977CMw { display: flex; pointer-events: auto; }

.KX_G9A { margin-left: 16px; width: 96px; }

._35DI5w { background: rgb(255, 255, 255); clip-path: inset(0 var(--2p6DKg)=
 0 var(--aBFgwg) round 9999px); }

.WCXy_w, ._35DI5w { height: 4px; position: absolute; top: 50%; transform: t=
ranslateY(-50%); width: 100%; }

.WCXy_w { background-color: rgba(255, 255, 255, 0.4); border-radius: 2px; }

._4c3hmQ { background: rgb(255, 255, 255); border-radius: 50%; filter: drop=
-shadow(rgba(28, 39, 48, 0.5) 0px 0px 1px); height: 20px; left: 100%; posit=
ion: absolute; top: 50%; transform: translate(-50%, -50%); transition: tran=
sform 0.2s ease 0s; width: 20px; }

._4c3hmQ.fB4PAQ { transform: translate(-50%, -50%) scale(1.25); }

.b9_6Hg { position: relative; }

.b9_6Hg.RA80LA { transform: translateY(0px); }

.b9_6Hg._7__plA { transform: translateY(100%); }

.b9_6Hg.MSBmmw { transition: transform 0.2s ease-out 0s; }

._W8gbA.xsZxtw { opacity: 1; }

._W8gbA._4I3e1w { opacity: 0; }

._W8gbA.MSBmmw { transition: opacity 0.25s ease-out 0s; }

.gylfdg { bottom: 100%; display: flex; justify-content: center; padding-bot=
tom: 24px; pointer-events: none; }

.I2utPA, .gylfdg { position: absolute; width: 100%; }

.I2utPA { height: 100%; left: 0px; top: 0px; }

.AyyY4g, .Flujtg { bottom: 50%; left: 50%; pointer-events: none; position: =
absolute; transform: translate(-50%, 50%); }

._2qGSIg { bottom: var(--safe-area-inset-bottom); }

._2qGSIg, .tdaqmQ { position: absolute; width: 100%; }

.tdaqmQ { pointer-events: none; top: var(--safe-area-inset-top); }

.Y0pFHA { overflow: hidden; position: relative; }

.TVfppA, .Y0pFHA { height: 100%; width: 100%; }

.TVfppA { flex: 1 1 0%; pointer-events: none; position: absolute; }

._1HoVSQ { align-items: center; background: var(--C-q6Ig); display: flex; j=
ustify-content: center; width: 100%; }

#root, ._1HoVSQ, ._uJvWw, body, html { height: 100%; }

body { overflow: hidden; touch-action: manipulation; }

html { font-size: 62.5%; }

#root, .ZHPl4Q, body, html { margin: 0px; padding: 0px; width: 100%; }

.EHoceA #root, .EHoceA .ZHPl4Q, .EHoceA body, html.EHoceA { user-select: no=
ne; }

#root, .ZHPl4Q { position: relative; z-index: 0; }

:root:lang(ko) { word-break: keep-all; }

body { }

.yIDCqA { height: 100%; position: relative; width: 100%; }

.yIDCqA, [tabindex], button { -webkit-tap-highlight-color: transparent; }

._8OlyIw { display: flex; flex-direction: column; height: 100%; justify-con=
tent: center; overflow: hidden; }
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://smiartist.my.canva.site/school-planner/_assets/static_font_4.ltr.css

@charset "utf-8";

@font-face { font-display: swap; font-family: "Canva Sans"; font-style: nor=
mal; font-weight: 400 700; src: url("images/a9b8e7902ec1ab885d382156f33738e=
5.woff2") format("woff2"), url("images/013277426f0d555d96c7a75503df5754.wof=
f") format("woff"); unicode-range: U+B1-B3, U+B9, U+BC-BE, U+394, U+3A9, U+=
3BC, U+3C0, U+2044, U+2070, U+2074-2089, U+2126, U+212E, U+2153-2154, U+215=
B-215E, U+2202, U+2206, U+220F, U+2211-2212, U+2215, U+2219, U+221A, U+221E=
, U+222B, U+2248, U+2260, U+2264-2265, U+25CA; }

@font-face { font-display: swap; font-family: "Canva Sans"; font-style: nor=
mal; font-weight: 400 700; src: url("images/d97a6ffa507b670a5b1664f98fc1183=
d.woff2") format("woff2"), url("images/1de7434d86166b0614ff3d61cda11a54.wof=
f") format("woff"); unicode-range: U+A1, U+AA-AB, U+AF, U+B8, U+BA-BB, U+BF=
, U+C0-D6, U+D8-F6, U+F8-148, U+14A-17E, U+192, U+1B5-1B6, U+1FC-1FD, U+218=
-21B, U+237, U+2C6-2C7, U+2C9, U+2D8-2DD, U+1E80-1E85, U+1E9E, U+1EF2-1EF3,=
 U+2030, U+2039-203A, U+20AC, U+20BA, U+2113; }

@font-face { font-display: swap; font-family: "Canva Sans"; font-style: nor=
mal; font-weight: 400 700; src: url("images/cff149ee1e9d2be50ac77bcd86769d0=
5.woff2") format("woff2"), url("images/f93a5165fac252ecfd593929c4e6146f.wof=
f") format("woff"); unicode-range: U+20-7E, U+A0, U+A2-A9, U+AC-AE, U+B0, U=
+B4-B7, U+D7, U+F7, U+300-304, U+306-308, U+30A-30C, U+312, U+326-328, U+20=
13-2014, U+2018-201A, U+201C-201E, U+2020-2022, U+2026, U+2117, U+2120, U+2=
122, U+2190-2199, U+FB01-FB02, U+FEFF, U+FFFC-FFFD; }
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://smiartist.my.canva.site/school-planner/_assets/b5de2817a09dae0e.ltr.css

@charset "utf-8";

.gcYy_A { color: initial; font: initial; font-palette: initial; font-synthe=
sis: initial; forced-color-adjust: initial; position: relative; text-orient=
ation: initial; text-rendering: initial; -webkit-font-smoothing: initial; -=
webkit-locale: initial; -webkit-text-orientation: initial; -webkit-writing-=
mode: initial; writing-mode: initial; zoom: initial; accent-color: initial;=
 place-content: initial; place-items: initial; place-self: initial; alignme=
nt-baseline: initial; animation-composition: initial; animation: initial; a=
pp-region: initial; appearance: initial; aspect-ratio: initial; backdrop-fi=
lter: initial; backface-visibility: initial; background: initial; backgroun=
d-blend-mode: initial; baseline-shift: initial; baseline-source: initial; b=
lock-size: initial; border-block: initial; border: initial; border-radius: =
initial; border-collapse: initial; border-end-end-radius: initial; border-e=
nd-start-radius: initial; border-inline: initial; border-start-end-radius: =
initial; border-start-start-radius: initial; inset: initial; box-shadow: in=
itial; box-sizing: initial; break-after: initial; break-before: initial; br=
eak-inside: initial; buffered-rendering: initial; caption-side: initial; ca=
ret-color: initial; clear: initial; clip: initial; clip-path: initial; clip=
-rule: initial; color-interpolation: initial; color-interpolation-filters: =
initial; color-rendering: initial; color-scheme: initial; columns: initial;=
 column-fill: initial; gap: initial; column-rule: initial; column-span: ini=
tial; contain: initial; contain-intrinsic-block-size: initial; contain-intr=
insic-size: initial; contain-intrinsic-inline-size: initial; container: ini=
tial; content: initial; content-visibility: initial; counter-increment: ini=
tial; counter-reset: initial; counter-set: initial; cursor: initial; cx: in=
itial; cy: initial; d: initial; display: block; dominant-baseline: initial;=
 empty-cells: initial; fill: initial; fill-opacity: initial; fill-rule: ini=
tial; filter: initial; flex: initial; flex-flow: initial; float: initial; f=
lood-color: initial; flood-opacity: initial; grid: initial; grid-area: init=
ial; height: 100%; hyphenate-character: initial; hyphenate-limit-chars: ini=
tial; hyphens: initial; image-orientation: initial; image-rendering: initia=
l; initial-letter: initial; inline-size: initial; inset-block: initial; ins=
et-inline: initial; isolation: initial; letter-spacing: initial; lighting-c=
olor: initial; line-break: initial; list-style: initial; margin-block: init=
ial; margin: initial; margin-inline: initial; marker: initial; mask: initia=
l; mask-type: initial; math-depth: initial; math-shift: initial; math-style=
: initial; max-block-size: initial; max-height: initial; max-inline-size: i=
nitial; max-width: initial; min-block-size: initial; min-height: initial; m=
in-inline-size: initial; min-width: initial; mix-blend-mode: initial; objec=
t-fit: initial; object-position: initial; object-view-box: initial; offset:=
 initial; opacity: initial; order: initial; orphans: initial; outline: init=
ial; outline-offset: initial; overflow-anchor: initial; overflow-clip-margi=
n: initial; overflow-wrap: initial; overflow: initial; overlay: initial; ov=
erscroll-behavior-block: initial; overscroll-behavior-inline: initial; over=
scroll-behavior: initial; padding-block: initial; padding: initial; padding=
-inline: initial; page: initial; page-orientation: initial; paint-order: in=
itial; perspective: initial; perspective-origin: initial; pointer-events: i=
nitial; quotes: initial; r: initial; resize: initial; rotate: initial; ruby=
-position: initial; rx: initial; ry: initial; scale: initial; scroll-behavi=
or: initial; scroll-margin-block: initial; scroll-margin: initial; scroll-m=
argin-inline: initial; scroll-padding-block: initial; scroll-padding: initi=
al; scroll-padding-inline: initial; scroll-snap-align: initial; scroll-snap=
-stop: initial; scroll-snap-type: initial; scroll-timeline: initial; scroll=
bar-color: initial; scrollbar-gutter: initial; scrollbar-width: initial; sh=
ape-image-threshold: initial; shape-margin: initial; shape-outside: initial=
; shape-rendering: initial; size: initial; speak: initial; stop-color: init=
ial; stop-opacity: initial; stroke: initial; stroke-dasharray: initial; str=
oke-dashoffset: initial; stroke-linecap: initial; stroke-linejoin: initial;=
 stroke-miterlimit: initial; stroke-opacity: initial; stroke-width: initial=
; tab-size: initial; table-layout: initial; text-align: initial; text-align=
-last: initial; text-anchor: initial; text-combine-upright: initial; text-d=
ecoration: initial; text-decoration-skip-ink: initial; text-emphasis: initi=
al; text-emphasis-position: initial; text-indent: initial; text-overflow: i=
nitial; text-shadow: initial; text-size-adjust: initial; text-transform: in=
itial; text-underline-offset: initial; text-underline-position: initial; wh=
ite-space: initial; timeline-scope: initial; touch-action: initial; transfo=
rm: initial; transform-box: initial; transform-origin: initial; transform-s=
tyle: initial; transition: initial; translate: initial; user-select: initia=
l; vector-effect: initial; vertical-align: initial; view-timeline: initial;=
 view-transition-name: initial; visibility: initial; border-spacing: initia=
l; -webkit-box-align: initial; -webkit-box-decoration-break: initial; -webk=
it-box-direction: initial; -webkit-box-flex: initial; -webkit-box-ordinal-g=
roup: initial; -webkit-box-orient: initial; -webkit-box-pack: initial; -web=
kit-box-reflect: initial; -webkit-line-break: initial; -webkit-line-clamp: =
initial; -webkit-mask-box-image: initial; -webkit-print-color-adjust: initi=
al; -webkit-rtl-ordering: initial; -webkit-ruby-position: initial; -webkit-=
tap-highlight-color: initial; -webkit-text-combine: initial; -webkit-text-d=
ecorations-in-effect: initial; -webkit-text-fill-color: initial; -webkit-te=
xt-security: initial; -webkit-text-stroke: initial; -webkit-user-drag: init=
ial; -webkit-user-modify: initial; widows: initial; width: 100%; will-chang=
e: initial; word-break: initial; word-spacing: initial; x: initial; y: init=
ial; z-index: initial; }

._kI3Pw { display: contents; }

@supports not (display:contents) {
  ._kI3Pw { height: inherit; }
}

.BHOPhg { color: initial; font: initial; font-palette: initial; font-synthe=
sis: initial; forced-color-adjust: initial; position: initial; text-orienta=
tion: initial; text-rendering: initial; -webkit-font-smoothing: initial; -w=
ebkit-locale: initial; -webkit-text-orientation: initial; -webkit-writing-m=
ode: initial; writing-mode: initial; zoom: initial; accent-color: initial; =
place-content: initial; place-items: initial; place-self: initial; alignmen=
t-baseline: initial; animation-composition: initial; animation: initial; ap=
p-region: initial; appearance: initial; aspect-ratio: initial; backdrop-fil=
ter: initial; backface-visibility: initial; background: initial; background=
-blend-mode: initial; baseline-shift: initial; baseline-source: initial; bl=
ock-size: initial; border-block: initial; border: initial; border-radius: i=
nitial; border-collapse: initial; border-end-end-radius: initial; border-en=
d-start-radius: initial; border-inline: initial; border-start-end-radius: i=
nitial; border-start-start-radius: initial; inset: initial; box-shadow: ini=
tial; box-sizing: initial; break-after: initial; break-before: initial; bre=
ak-inside: initial; buffered-rendering: initial; caption-side: initial; car=
et-color: initial; clear: initial; clip: initial; clip-path: initial; clip-=
rule: initial; color-interpolation: initial; color-interpolation-filters: i=
nitial; color-rendering: initial; color-scheme: initial; columns: initial; =
column-fill: initial; gap: initial; column-rule: initial; column-span: init=
ial; contain: initial; contain-intrinsic-block-size: initial; contain-intri=
nsic-size: initial; contain-intrinsic-inline-size: initial; container: init=
ial; content: initial; content-visibility: initial; counter-increment: init=
ial; counter-reset: initial; counter-set: initial; cursor: initial; cx: ini=
tial; cy: initial; d: initial; display: block; dominant-baseline: initial; =
empty-cells: initial; fill: initial; fill-opacity: initial; fill-rule: init=
ial; filter: initial; flex: initial; flex-flow: initial; float: initial; fl=
ood-color: initial; flood-opacity: initial; grid: initial; grid-area: initi=
al; height: initial; hyphenate-character: initial; hyphenate-limit-chars: i=
nitial; hyphens: initial; image-orientation: initial; image-rendering: init=
ial; initial-letter: initial; inline-size: initial; inset-block: initial; i=
nset-inline: initial; isolation: initial; letter-spacing: initial; lighting=
-color: initial; line-break: initial; list-style: initial; margin-block: in=
itial; margin: initial; margin-inline: initial; marker: initial; mask: init=
ial; mask-type: initial; math-depth: initial; math-shift: initial; math-sty=
le: initial; max-block-size: initial; max-height: initial; max-inline-size:=
 initial; max-width: initial; min-block-size: initial; min-height: initial;=
 min-inline-size: initial; min-width: initial; mix-blend-mode: initial; obj=
ect-fit: initial; object-position: initial; object-view-box: initial; offse=
t: initial; opacity: initial; order: initial; orphans: initial; outline: in=
itial; outline-offset: initial; overflow-anchor: initial; overflow-clip-mar=
gin: initial; overflow-wrap: initial; overflow: initial; overlay: initial; =
overscroll-behavior-block: initial; overscroll-behavior-inline: initial; ov=
erscroll-behavior: initial; padding-block: initial; padding: initial; paddi=
ng-inline: initial; page: initial; page-orientation: initial; paint-order: =
initial; perspective: initial; perspective-origin: initial; pointer-events:=
 initial; quotes: initial; r: initial; resize: initial; rotate: initial; ru=
by-position: initial; rx: initial; ry: initial; scale: initial; scroll-beha=
vior: initial; scroll-margin-block: initial; scroll-margin: initial; scroll=
-margin-inline: initial; scroll-padding-block: initial; scroll-padding: ini=
tial; scroll-padding-inline: initial; scroll-snap-align: initial; scroll-sn=
ap-stop: initial; scroll-snap-type: initial; scroll-timeline: initial; scro=
llbar-color: initial; scrollbar-gutter: initial; scrollbar-width: initial; =
shape-image-threshold: initial; shape-margin: initial; shape-outside: initi=
al; shape-rendering: initial; size: initial; speak: initial; stop-color: in=
itial; stop-opacity: initial; stroke: initial; stroke-dasharray: initial; s=
troke-dashoffset: initial; stroke-linecap: initial; stroke-linejoin: initia=
l; stroke-miterlimit: initial; stroke-opacity: initial; stroke-width: initi=
al; tab-size: initial; table-layout: initial; text-align: initial; text-ali=
gn-last: initial; text-anchor: initial; text-combine-upright: initial; text=
-decoration: initial; text-decoration-skip-ink: initial; text-emphasis: ini=
tial; text-emphasis-position: initial; text-indent: initial; text-overflow:=
 initial; text-shadow: initial; text-size-adjust: initial; text-transform: =
initial; text-underline-offset: initial; text-underline-position: initial; =
white-space: initial; timeline-scope: initial; touch-action: initial; trans=
form: initial; transform-box: initial; transform-origin: initial; transform=
-style: initial; transition: initial; translate: initial; user-select: init=
ial; vector-effect: initial; vertical-align: initial; view-timeline: initia=
l; view-transition-name: initial; visibility: initial; border-spacing: init=
ial; -webkit-box-align: initial; -webkit-box-decoration-break: initial; -we=
bkit-box-direction: initial; -webkit-box-flex: initial; -webkit-box-ordinal=
-group: initial; -webkit-box-orient: initial; -webkit-box-pack: initial; -w=
ebkit-box-reflect: initial; -webkit-line-break: initial; -webkit-line-clamp=
: initial; -webkit-mask-box-image: initial; -webkit-print-color-adjust: ini=
tial; -webkit-rtl-ordering: initial; -webkit-ruby-position: initial; -webki=
t-tap-highlight-color: initial; -webkit-text-combine: initial; -webkit-text=
-decorations-in-effect: initial; -webkit-text-fill-color: initial; -webkit-=
text-security: initial; -webkit-text-stroke: initial; -webkit-user-drag: in=
itial; -webkit-user-modify: initial; widows: initial; width: initial; will-=
change: initial; word-break: initial; word-spacing: initial; x: initial; y:=
 initial; z-index: initial; }

.sR0SUA::placeholder { color: var(--srRiKA); }

.BHOPhg ._6Yde8g { border: 1px solid var(--oiOG3Q); }

.BHOPhg ._6Yde8g:hover { border-color: var(--oGOcXA); outline: none; }

.BHOPhg ._6Yde8g:focus { border-color: var(--UBd2ow); outline: none; }

.oUJNhQ { color: initial; font: initial; font-palette: initial; font-synthe=
sis: initial; forced-color-adjust: initial; position: initial; text-orienta=
tion: initial; text-rendering: initial; -webkit-font-smoothing: initial; -w=
ebkit-locale: initial; -webkit-text-orientation: initial; -webkit-writing-m=
ode: initial; writing-mode: initial; zoom: initial; accent-color: initial; =
place-content: initial; place-items: initial; place-self: initial; alignmen=
t-baseline: initial; animation-composition: initial; animation: initial; ap=
p-region: initial; appearance: initial; aspect-ratio: initial; backdrop-fil=
ter: initial; backface-visibility: initial; background: initial; background=
-blend-mode: initial; baseline-shift: initial; baseline-source: initial; bl=
ock-size: initial; border-block: initial; border: initial; border-radius: i=
nitial; border-collapse: initial; border-end-end-radius: initial; border-en=
d-start-radius: initial; border-inline: initial; border-start-end-radius: i=
nitial; border-start-start-radius: initial; inset: initial; box-shadow: ini=
tial; box-sizing: initial; break-after: initial; break-before: initial; bre=
ak-inside: initial; buffered-rendering: initial; caption-side: initial; car=
et-color: initial; clear: initial; clip: initial; clip-path: initial; clip-=
rule: initial; color-interpolation: initial; color-interpolation-filters: i=
nitial; color-rendering: initial; color-scheme: initial; columns: initial; =
column-fill: initial; gap: initial; column-rule: initial; column-span: init=
ial; contain: initial; contain-intrinsic-block-size: initial; contain-intri=
nsic-size: initial; contain-intrinsic-inline-size: initial; container: init=
ial; content: initial; content-visibility: initial; counter-increment: init=
ial; counter-reset: initial; counter-set: initial; cursor: initial; cx: ini=
tial; cy: initial; d: initial; display: block; dominant-baseline: initial; =
empty-cells: initial; fill: initial; fill-opacity: initial; fill-rule: init=
ial; filter: initial; flex: initial; flex-flow: initial; float: initial; fl=
ood-color: initial; flood-opacity: initial; grid: initial; grid-area: initi=
al; height: 100%; hyphenate-character: initial; hyphenate-limit-chars: init=
ial; hyphens: initial; image-orientation: initial; image-rendering: initial=
; initial-letter: initial; inline-size: initial; inset-block: initial; inse=
t-inline: initial; isolation: initial; letter-spacing: initial; lighting-co=
lor: initial; line-break: initial; list-style: initial; margin-block: initi=
al; margin: initial; margin-inline: initial; marker: initial; mask: initial=
; mask-type: initial; math-depth: initial; math-shift: initial; math-style:=
 initial; max-block-size: initial; max-height: initial; max-inline-size: in=
itial; max-width: initial; min-block-size: initial; min-height: initial; mi=
n-inline-size: initial; min-width: initial; mix-blend-mode: initial; object=
-fit: initial; object-position: initial; object-view-box: initial; offset: =
initial; opacity: initial; order: initial; orphans: initial; outline: initi=
al; outline-offset: initial; overflow-anchor: initial; overflow-clip-margin=
: initial; overflow-wrap: initial; overflow: initial; overlay: initial; ove=
rscroll-behavior-block: initial; overscroll-behavior-inline: initial; overs=
croll-behavior: initial; padding-block: initial; padding: initial; padding-=
inline: initial; page: initial; page-orientation: initial; paint-order: ini=
tial; perspective: initial; perspective-origin: initial; pointer-events: in=
itial; quotes: initial; r: initial; resize: initial; rotate: initial; ruby-=
position: initial; rx: initial; ry: initial; scale: initial; scroll-behavio=
r: initial; scroll-margin-block: initial; scroll-margin: initial; scroll-ma=
rgin-inline: initial; scroll-padding-block: initial; scroll-padding: initia=
l; scroll-padding-inline: initial; scroll-snap-align: initial; scroll-snap-=
stop: initial; scroll-snap-type: initial; scroll-timeline: initial; scrollb=
ar-color: initial; scrollbar-gutter: initial; scrollbar-width: initial; sha=
pe-image-threshold: initial; shape-margin: initial; shape-outside: initial;=
 shape-rendering: initial; size: initial; speak: initial; stop-color: initi=
al; stop-opacity: initial; stroke: initial; stroke-dasharray: initial; stro=
ke-dashoffset: initial; stroke-linecap: initial; stroke-linejoin: initial; =
stroke-miterlimit: initial; stroke-opacity: initial; stroke-width: initial;=
 tab-size: initial; table-layout: initial; text-align: initial; text-align-=
last: initial; text-anchor: initial; text-combine-upright: initial; text-de=
coration: initial; text-decoration-skip-ink: initial; text-emphasis: initia=
l; text-emphasis-position: initial; text-indent: initial; text-overflow: in=
itial; text-shadow: initial; text-size-adjust: initial; text-transform: ini=
tial; text-underline-offset: initial; text-underline-position: initial; whi=
te-space: initial; timeline-scope: initial; touch-action: initial; transfor=
m: initial; transform-box: initial; transform-origin: initial; transform-st=
yle: initial; transition: initial; translate: initial; user-select: initial=
; vector-effect: initial; vertical-align: initial; view-timeline: initial; =
view-transition-name: initial; visibility: initial; border-spacing: initial=
; -webkit-box-align: initial; -webkit-box-decoration-break: initial; -webki=
t-box-direction: initial; -webkit-box-flex: initial; -webkit-box-ordinal-gr=
oup: initial; -webkit-box-orient: initial; -webkit-box-pack: initial; -webk=
it-box-reflect: initial; -webkit-line-break: initial; -webkit-line-clamp: i=
nitial; -webkit-mask-box-image: initial; -webkit-print-color-adjust: initia=
l; -webkit-rtl-ordering: initial; -webkit-ruby-position: initial; -webkit-t=
ap-highlight-color: initial; -webkit-text-combine: initial; -webkit-text-de=
corations-in-effect: initial; -webkit-text-fill-color: initial; -webkit-tex=
t-security: initial; -webkit-text-stroke: initial; -webkit-user-drag: initi=
al; -webkit-user-modify: initial; widows: initial; width: 100%; will-change=
: initial; word-break: initial; word-spacing: initial; x: initial; y: initi=
al; z-index: initial; }
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://smiartist.my.canva.site/school-planner/_assets/48f7024d7de3a1d6.ltr.css

@charset "utf-8";

.nMvVqA { display: grid; grid-template: "corner-block horizontal-headers" "=
vertical-headers sheet" 1fr / auto 1fr; position: relative; }

.nMvVqA.H2wykw { direction: ltr; }

.nMvVqA.UweldA { direction: rtl; }

.rsTRSA { background: rgb(255, 255, 255); grid-area: corner-block; position=
: sticky; top: 0px; }

.rsTRSA.H2wykw { left: 0px; }

.rsTRSA.UweldA { right: 0px; }

._32sKQw { grid-area: horizontal-headers; top: 0px; }

._32sKQw, .xdIsTQ { background: rgb(255, 255, 255); position: sticky; }

.xdIsTQ { grid-area: vertical-headers; }

.xdIsTQ.H2wykw { left: 0px; }

.xdIsTQ.UweldA { right: 0px; }

.Gdl7fQ, ._0YOFPg { grid-area: sheet; }

.Gdl7fQ { height: 100%; pointer-events: none; position: absolute; top: 0px;=
 width: 100%; }

.Gdl7fQ.H2wykw { left: 0px; }

.Gdl7fQ.UweldA { right: 0px; }

.s5Xvtg { -webkit-tap-highlight-color: transparent; cursor: pointer; displa=
y: flex; }

.agLBbw { cursor: not-allowed; }

.p8DDOg { appearance: none; margin: 0px; opacity: 0; width: 0px; }

.nOL94A { align-self: flex-start; }

.l_S_Ng, .nOL94A { display: inline-flex; }

.l_S_Ng { align-items: center; background: rgb(255, 255, 255); border-radiu=
s: calc((var(--V8rdkw)*4)/18); box-shadow: rgba(28, 39, 48, 0.5) 0px 0px 0p=
x 1px inset; color: var(--6kHV0A); flex: 0 0 0%; justify-content: center; m=
argin: calc(var(--V8rdkw)*.25); transition: box-shadow 0.1s ease-in-out 0s;=
 }

.l_S_Ng::before { content: "=E2=80=8B"; width: 0px; }

.l_S_Ng { height: var(--V8rdkw); }

._8CNofA, .l_S_Ng { width: var(--V8rdkw); }

._8CNofA { color: rgb(255, 255, 255); height: calc(var(--V8rdkw)*.5); }

.l_S_Ng.iGjddQ { box-shadow: inset 0 0 0 calc(var(--V8rdkw)*.5); }

.l_S_Ng.iGjddQ svg { opacity: 1; }

.s5Xvtg._0YWo_Q:not(.agLBbw):hover .p8DDOg:not(:active) + .l_S_Ng:not(.iGjd=
dQ) { box-shadow: rgba(28, 39, 48, 0.5) 0px 0px 0px 1px inset; }

.s5Xvtg._0YWo_Q:not(.agLBbw):hover .p8DDOg:not(:active) + .l_S_Ng:not(.iGjd=
dQ) ._8CNofA { color: rgba(43, 59, 74, 0.3); opacity: 1; }

.s5Xvtg._0YWo_Q:not(.agLBbw):hover .p8DDOg:not(:active) + .l_S_Ng.iGjddQ { =
box-shadow: inset 0 0 0 calc(var(--V8rdkw)*.5) var(--pMrTCg); }

.s5Xvtg:not(.agLBbw) .p8DDOg:active + .l_S_Ng:not(.iGjddQ) { box-shadow: in=
set 0 0 0 calc(var(--V8rdkw)*.125),0 0 0 calc(var(--V8rdkw)*.5) rgba(57,76,=
96,.15); color: rgba(28, 39, 48, 0.5); }

.s5Xvtg:not(.agLBbw) .p8DDOg:active + .l_S_Ng:not(.iGjddQ) > ._8CNofA { col=
or: rgba(43, 59, 74, 0.3); opacity: 1; }

.s5Xvtg:not(.agLBbw) .p8DDOg:active + .l_S_Ng.iGjddQ { box-shadow: inset 0 =
0 0 var(--V8rdkw),0 0 0 calc(var(--V8rdkw)*.25) rgba(57,76,96,.15); color: =
var(--dhlyXQ); }

.s5Xvtg:not(.agLBbw) .p8DDOg:active + .l_S_Ng.iGjddQ > ._8CNofA { color: rg=
b(255, 255, 255); opacity: 1; }

.s5Xvtg:not(.agLBbw) .p8DDOg:focus + .l_S_Ng { outline: -webkit-focus-ring-=
color auto calc(var(--V8rdkw)*1/18); outline-offset: calc(var(--V8rdkw)*2/1=
8); }

.aX8dhQ { background: rgba(57, 76, 96, 0.15); position: absolute; }

.aX8dhQ.VGcLng.ZJ0G6w { left: 0px; }

.aX8dhQ.VGcLng.dOI_jA { right: 0px; }

.aX8dhQ.gl1RPg { top: 0px; }

.xhBZaw { display: flex; }

.xhBZaw.jNbTIg { direction: ltr; }

.xhBZaw.gtA7Dw { direction: rtl; }

.Vt2_4w { display: flex; pointer-events: all; }

.Vt2_4w.jNbTIg { direction: ltr; }

.Vt2_4w.gtA7Dw { direction: rtl; }

.An9VeA { display: flex; flex-direction: column; }

._93roJg { pointer-events: all; }

.Tn3nUw { position: sticky; z-index: 1; }

.HBvlug { background-color: rgba(57, 76, 96, 0.15); position: absolute; }

.ru3tFQ { height: 100%; top: 0px; }

.ru3tFQ.jNbTIg { left: 100%; }

.ru3tFQ.gtA7Dw { right: 100%; }

.koz2Hg { top: 100%; width: 100%; }

._83Rssw { align-items: center; box-sizing: border-box; display: flex; just=
ify-content: center; pointer-events: all; }

._83Rssw._2BX0vg { background-color: var(--4RaSjg); }

._83Rssw.JfW_Cg { background-color: rgb(241, 235, 255); }

._83Rssw.isMgNg { background-color: var(--eGVbng); }

._83Rssw.xwWDeQ { background-color: rgb(224, 239, 255); }

._83Rssw.w0EyUQ { background-color: rgb(168, 204, 255); }

._83Rssw._8p5AIA { background-color: rgb(61, 139, 255); }

.ivlMMQ._2BX0vg { color: var(--VcZbvQ); }

.ivlMMQ.JfW_Cg { color: var(--eGVbng); }

.ivlMMQ.isMgNg { color: var(--d1p99w); }

.ivlMMQ.w0EyUQ, .ivlMMQ.xwWDeQ { color: rgb(24, 70, 170); }

.ivlMMQ._8p5AIA { color: rgb(255, 255, 255); }

.d2uLIA { border-block-end: 0.5px solid rgb(217, 217, 217); border-block-st=
art: 1px solid rgb(217, 217, 217); border-inline: 0.5px solid rgb(217, 217,=
 217); }

.JhBzyw { border-block: 0.5px solid rgb(217, 217, 217); border-inline-end: =
0.5px solid rgb(217, 217, 217); border-inline-start: 1px solid rgb(217, 217=
, 217); position: absolute; top: 0px; transform-origin: center top; }

._93roJg.jNbTIg .JhBzyw { left: 0px; }

._93roJg.gtA7Dw .JhBzyw { right: 0px; }

.bx74uQ { align-items: center; display: flex; justify-content: center; posi=
tion: absolute; }

.ze9QCQ { overflow: hidden; position: relative; }

.N7J3UA { align-items: center; display: flex; justify-content: center; posi=
tion: absolute; }

._52RFdg { cursor: move; }

.N7J3UA.ssE9Tg { transform-origin: left top; }

.N7J3UA.OkifGQ { transform-origin: right top; }

.m8CFdg { background-color: var(--d1p99w); border-block-end: 0.5px solid rg=
b(217, 217, 217); border-block-start: 1px solid rgb(217, 217, 217); border-=
inline-end: 0.5px solid rgb(217, 217, 217); border-inline-start: 1px solid =
rgb(217, 217, 217); color: var(--REcY5g); pointer-events: all; }

.G6wL4w.ssE9Tg { border-top-left-radius: 12px; }

.G6wL4w.OkifGQ { border-top-right-radius: 12px; }

.W_E0wA { background-color: var(--eGVbng); color: var(--d1p99w); }

.nstn2A { pointer-events: none; position: absolute; top: 0px; }

.nstn2A.f8jAGQ { left: 0px; }

.nstn2A.NgnL2Q { right: 0px; }

._9sodyg { overflow: hidden; }

.Gi9pfA, ._9sodyg { height: 100%; width: 100%; }

.Gi9pfA { left: 0px; pointer-events: none; position: absolute; top: 0px; }

.OsKKIQ { display: grid; grid-template: "corner-block horizontal-headers" "=
vertical-headers sheet" 1fr / auto 1fr; position: relative; }

.cbOp6Q { user-select: none; }

._688KWg { background: var(--Tp54Vw); grid-area: corner-block; position: re=
lative; z-index: 2; }

.m0cT1w { grid-area: horizontal-headers; }

.m0cT1w, .zm537g { background: var(--Tp54Vw); position: relative; z-index: =
1; }

.zm537g { grid-area: vertical-headers; }

.VDFv_A { grid-area: sheet; height: calc(100% - 32px); position: relative; =
width: calc(100% - 32px); }

.c6a1eQ { pointer-events: none; position: absolute; top: 0px; }

.c6a1eQ.H_CtIQ { left: 0px; }

.c6a1eQ._8_56PQ { right: 0px; }

._3NnFzw { overflow: visible; }

.JMH1ng { overflow: hidden; }
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/html
Content-ID: <frame-F660A1E656C5069C729A4E052AAC2B21@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://www.canva.com/_website-element-widget?token=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIiwia2lkIjoia2lkLTE3Mzc0Mjc0NTY3MjkifQ..jZsc_EVAo_QIjOr_.wXNNiQSe6i1Ow94xpapwc_ILwc7Ow_bGmfixEs8LF8CMpe7sc8Kooj62wwRLR8J8DLJzAlEk491k_DOQr6BllTw4RX-TjEHRW3SlJRhPAaWrf8DVtuvT87EVLMZNRIsghkHUMLAkpxjumPIL6v9x9Rwr_5rwlSBSIdELOoASaF-balUpH1w1MXnKgAPPnLe2ABPwtFBBtNib_MV-C7P2q9wdvP3ijfEZlP26I8ZxcCUGYQRxGYQjSMulHkfre4Bvl_5FW8YHBkDdBb5HbBTpKvasv38RYz661tRGUhrNro3ISc5Cf4_njTbW4GE5toadD1hM_2Z2AWzQOsaeBfKIcBovOxMID27dl_EBxERC3OyYSXEeWJJgozDJDbSs5cNPg0Rk5ko92EU.rMjUm-eJy8pLLwxiHrSiVA

<!DOCTYPE html><html dir=3D"ltr" lang=3D"en" class=3D"theme light EHoceA"><=
head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3DUTF-=
8"><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-73f29dad-b8a4=
-4857-a308-0373e9015ea0@mhtml.blink" /><link rel=3D"stylesheet" type=3D"tex=
t/css" href=3D"cid:css-29854d98-2bc9-4938-a860-62b35a5b49fb@mhtml.blink" />=
<link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-95cdcf93-3fbb-44=
fc-a642-7d1766f27324@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/c=
ss" href=3D"cid:css-eead78e1-2fb6-4ed8-87ef-7ee758160547@mhtml.blink" /><ti=
tle>Website Element Widget</title><meta name=3D"app-name" content=3D"websit=
e_element_widget"><meta name=3D"viewport" content=3D"width=3Ddevice-width, =
initial-scale=3D1"><link href=3D"https://static.canva.com/web/a0684b0780c73=
9e9.vendor.ltr.css" rel=3D"stylesheet" crossorigin=3D"anonymous"><link href=
=3D"https://static.canva.com/web/9d2f901a0442100f.ltr.css" rel=3D"styleshee=
t" crossorigin=3D"anonymous"><link href=3D"https://static.canva.com/web/sta=
tic_font_4.ltr.css" rel=3D"stylesheet"><link href=3D"https://static.canva.c=
om/web/43dac884e15fab6d.runtime.js" rel=3D"preload" as=3D"script" crossorig=
in=3D"anonymous" integrity=3D"sha512-+/c0+ejF4OVfyHBqrcrfFt5FPzmGfgPzr7CHTG=
oAeXBJ3LIiWouHwwd9GkZOFMso6ktBSMAjsB5D2IGWwcefMA=3D=3D" nonce=3D""><link hr=
ef=3D"https://static.canva.com/web/8b151872c2943599.s4le6a.vendor.js" rel=
=3D"preload" as=3D"script" crossorigin=3D"anonymous" integrity=3D"sha512-KJ=
AdcUiZ6jKP2GojrwYTpg99GzeZjLyB5XDqIYGsPO8YNjq8Rx2bjEAfg8gXlL55c6l5yOyPQ2LXo=
UFy03xH6w=3D=3D" nonce=3D""><link href=3D"https://static.canva.com/web/575f=
bfa6188a03ac.vendor.js" rel=3D"preload" as=3D"script" crossorigin=3D"anonym=
ous" integrity=3D"sha512-GlDZzf6cNGkuxvDvlXvtMB2UbuDwpFBMX91GiiqIC8j7Hh1ci1=
9pTWVD/MTEkO9u3YaFlunVT/LBR6KBKrxw6Q=3D=3D" nonce=3D""><link href=3D"https:=
//static.canva.com/web/52252ad6d2e8e414.strings.js" rel=3D"preload" as=3D"s=
cript" crossorigin=3D"anonymous" integrity=3D"sha512-IQ5CjDZyGJrGLzByHi9+X7=
jkx3FbmWN0/ufNY0tZroMC67aVHDFkL4MHcY8SZRQj270ebInSWphWIxRx+xn+2A=3D=3D" non=
ce=3D""><link href=3D"https://static.canva.com/web/648b71cbb3f137e2.js" rel=
=3D"preload" as=3D"script" crossorigin=3D"anonymous" integrity=3D"sha512-zW=
uiosn4PIOfPFNrxw2cfBQBFzubCi4OyOvTohjwRkovQ+1DDkWykPRebyvB6yc8JJ38WlLhlW0Vl=
tmht5AGoA=3D=3D" nonce=3D""><meta name=3D"referrer" content=3D"strict-origi=
n-when-cross-origin"><meta property=3D"fb:app_id" content=3D"52526591417958=
0"><meta property=3D"og:site_name" content=3D"Canva"><meta property=3D"og:t=
itle" content=3D"Website Element Widget"><meta property=3D"og:image" conten=
t=3D"https://static.canva.com/domain-assets/canva/static/images/fb_cover-1.=
jpg"><meta property=3D"og:type" content=3D"website"><meta name=3D"twitter:c=
ard" content=3D"summary_large_image"><meta name=3D"twitter:site" content=3D=
"@canva"><meta name=3D"twitter:creator" content=3D"@canva"><meta name=3D"tw=
itter:title" content=3D"Website Element Widget"><meta name=3D"robots" conte=
nt=3D"noindex"><link rel=3D"shortcut icon" href=3D"https://static.canva.com=
/domain-assets/canva/static/images/favicon-1.ico"><link rel=3D"icon" href=
=3D"https://static.canva.com/domain-assets/canva/static/images/android-192x=
192-2.png" sizes=3D"192x192"><link rel=3D"apple-touch-icon" href=3D"https:/=
/static.canva.com/domain-assets/canva/static/images/apple-touch-120x120-1.p=
ng"><link rel=3D"apple-touch-icon" href=3D"https://static.canva.com/domain-=
assets/canva/static/images/apple-touch-152x152-1.png" sizes=3D"152x152"><li=
nk rel=3D"apple-touch-icon" href=3D"https://static.canva.com/domain-assets/=
canva/static/images/apple-touch-167x167-1.png" sizes=3D"167x167"><link rel=
=3D"apple-touch-icon" href=3D"https://static.canva.com/domain-assets/canva/=
static/images/apple-touch-180x180-1.png" sizes=3D"180x180"><link rel=3D"sty=
lesheet" type=3D"text/css" href=3D"https://static.canva.com/web/b5de2817a09=
dae0e.ltr.css"><link rel=3D"stylesheet" type=3D"text/css" href=3D"https://s=
tatic.canva.com/web/48f7024d7de3a1d6.ltr.css"></head><body><div id=3D"root"=
><div class=3D"yIDCqA"><main class=3D"Qm3myw"><div style=3D"height: 100%; w=
idth: 100%;"><div class=3D"onhyOQ" style=3D"width: 1517px; height: 768px; a=
lign-items: center;"><div class=3D"twbtjQ"><div class=3D"GDnEHQ" style=3D"w=
idth: 1517px; height: 768px;"><div class=3D"o2Yl2g"><div class=3D"_mXnjA" l=
ang=3D"en" style=3D"width: 1517px; height: 768px;"><div class=3D"_6t4CHA"><=
div class=3D"a26Xuw" style=3D"opacity: 0;"></div></div><div style=3D"positi=
on: absolute; top: 76.8px; left: 76.8px; width: 1363.4px; height: 614.4px;"=
></div><div class=3D"DF_utQ _682gpw _0xkaeQ" style=3D"touch-action: pan-x p=
an-y pinch-zoom; width: 1517px; height: 768px; transform: translate(0px, 0p=
x);"><div style=3D"width: 1517px; height: 768px; transform: scale(1, 1); tr=
ansform-origin: 0px 0px;"><div class=3D"hVT_uA PgAXEw"><div class=3D"Rt1H_w=
"><div class=3D"IwXXkw _qImYg JbJFjg _CObZw"></div><div class=3D"_5sVuA"><s=
pan aria-hidden=3D"true" class=3D"NA_Img dkWypw _6ti9_A"><svg xmlns=3D"http=
://www.w3.org/2000/svg" xmlns:xlink=3D"http://www.w3.org/1999/xlink" width=
=3D"24" height=3D"24" viewBox=3D"0 0 24 24"><defs><path id=3D"_265464792__a=
" d=3D"M4 21A9 9 0 0 0 4 3a1 1 0 1 0 0 2 7 7 0 1 1 0 14 1 1 0 0 0 0 2z"></p=
ath></defs><use fill=3D"currentColor" fill-rule=3D"nonzero" transform=3D"ma=
trix(-1 0 0 1 16 0)" xlink:href=3D"#_265464792__a"></use></svg></span></div=
></div></div><div class=3D"S3wQqg lKZixA _8YzbFQ"><div class=3D"uqhtBg"><if=
rame src=3D"cid:frame-0E501AC1AB642E44849F7ACBA8C928A7@mhtml.blink" sandbox=
=3D"allow-same-origin allow-scripts allow-popups allow-forms" allowfullscre=
en=3D"true" width=3D"800" height=3D"450" style=3D"position: absolute; top: =
0; left: 0; width: 100%; height: 100%; border: none; border-radius: 8px;" a=
llow=3D"fullscreen" title=3D"Embedded content"></iframe></div></div></div><=
/div></div></div></div><div class=3D"QhExXw pKfnlA" style=3D"width: 1517px;=
 height: 768px; margin: 0px;"></div></div></div></div></main></div></div><i=
frame height=3D"1" width=3D"1" style=3D"position: absolute; top: 0px; left:=
 0px; border: none; visibility: hidden;"></iframe>
<div class=3D"g6DZMw"><div class=3D"_2UyCZQ"></div></div><div class=3D"_3jk=
TAA"></div><div class=3D"BghEng"><div></div><div></div></div><div class=3D"=
Bymw5Q"></div><div class=3D"Bymw5Q"></div></body></html>
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-73f29dad-b8a4-4857-a308-0373e9015ea0@mhtml.blink

@charset "utf-8";
=0A
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-29854d98-2bc9-4938-a860-62b35a5b49fb@mhtml.blink

@charset "utf-8";
=0A
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-95cdcf93-3fbb-44fc-a642-7d1766f27324@mhtml.blink

@charset "utf-8";

:root { --transparent: rgba(255, 255, 255, 0); --white: hsl(0, 0%, 100%); -=
-th-white: hsl(0, 0%, 100%); --black: hsl(0, 0%, 0%); --th-black: hsl(0, 0%=
, 0%); --lightGrey: hsl(0, 0%, 94%); --th-grey-white: hsl(210, 10%, 97%); -=
-th-grey-light: hsl(210, 10%, 94.8%); --th-grey-medium: hsl(212, 10%, 94%);=
 --th-grey: hsl(216, 22%, 91%); --th-grey-dark: hsl(221, 20%, 78%); --th-sl=
ate: hsl(221, 20%, 33%); --th-slate-light: hsl(222, 20%, 45%); --th-slate-d=
ark: hsl(222, 22%, 18%); --th-slate-alt: #333F57; --th-slate-hover: #3E4A62=
; --th-slate-dark-hover800: hsl(220, 22%, 24%); --th-slate-dark-active800: =
hsl(219, 24%, 26%); --th-slate-dark-hover600: hsl(222, 22%, 21%); --th-slat=
e-dark-active600: hsl(221, 24%, 23%); --th-cool-grey-600: hsl(203, 16%, 44%=
); --th-cool-grey-700: hsl(204, 18%, 30%); --th-cool-grey-750: hsl(203, 18%=
, 32%); --th-cool-grey-800: hsl(209, 20%, 25%); --th-cool-grey-850: hsl(209=
, 20%, 21%); --th-cool-grey-900: hsl(210, 24%, 16%); --fontColorDark: var( =
--th-slate-dark); --fontColorWhite: hsl(0, 0%, 100%); --list-item-hover: hs=
l(225, 20%, 96%); --list-item-light-hover: hsl(210, 20%, 98%); --list-item-=
hover-dark: hsla(222, 22%, 18%, 0.50); --list-item-light-hover-dark: hsla(2=
22, 20%, 33%, 0.50); --greyTransparent: hsla(222, 22%, 18%, 0.12); --whiteT=
ransparent: hsla(0, 0%, 100%, 0.12); --defaultColor: hsl(220, 20%, 91%); --=
defaultColorHover: hsl(220, 19%, 78%); --defaultColorActive: hsl(220, 19%, =
68%); --defaultColorSelected: hsl(221, 20%, 75%); --buttonBorderColor: 2px =
solid hsl(220, 20%, 91%); --buttonBorderColorHover: 2px solid hsl(220, 19%,=
 78%); --buttonBorderColorActive: 2px solid hsl(220, 19%, 68%); --buttonBor=
derColorSelected: 2px solid hsl(221, 20%, 75%); --iconFillColor: var( --th-=
slate-dark ); --primaryColor: hsl(211, 100%, 45%); --primaryColorHover: hsl=
(211, 100%, 35%); --primaryColorActive: hsl(211, 100%, 25%); --primaryButto=
nBorder: 2px solid hsl(211, 100%, 45%); --primaryButtonBorderHover: 2px sol=
id hsl(211, 100%, 35%); --primaryButtonBorderActive: 2px solid hsl(211, 100=
%, 25%); --secondaryColor: var(--th-slate); --secondaryColorHover: hsl(221,=
 20%, 23%); --secondaryColorActive: hsl(221, 20%, 13%); --secondaryButtonBo=
rderColor: 2px solid var(--th-slate); --secondaryButtonBorderColorHover: 2p=
x solid hsl(221, 20%, 23%); --secondaryButtonBorderColorActive: 2px solid h=
sl(221, 20%, 13%); --disabledColor: hsl(0, 0%, 50%); --disabledBackgroundCo=
lor: hsl(0, 0%, 95%); --brandColorGreen: hsl(76, 60%, 52%); --brandColorGre=
enActive: hsl(76, 62%, 40%); --primaryColorGreen: hsl(79, 100%, 24%); --pri=
maryColorGreenHover: hsl(79, 100%, 14%); --primaryColorGreenActive: hsl(79,=
 100%, 4%); --buttonBorderGreen: 2px solid hsl(79, 100%, 24%); --buttonBord=
erGreenHover: 2px solid hsl(79, 100%, 14%); --buttonBorderGreenActive: 2px =
solid hsl(79, 100%, 4%); --brandColorPink: hsl(344, 98%, 59%); --primaryCol=
orPink: #e12362; --primaryColorPinkHover: hsl(340, 76%, 41%); --primaryColo=
rPinkActive: hsl(340, 76%, 31%); --buttonBorderPink: 2px solid hsl(340, 76%=
, 51%); --buttonBorderPinkHover: 2px solid hsl(340, 76%, 41%); --buttonBord=
erPinkActive: 2px solid hsl(340, 76%, 31%); --brandColorTeal: hsl(180, 85%,=
 34%); --primaryColorTeal: hsl(184, 50%, 35%); --primaryColorTealHover: hsl=
(184, 50%, 25%); --primaryColorTealActive: hsl(184, 50%, 15%); --buttonBord=
erTeal: 2px solid hsl(184, 50%, 35%); --buttonBorderTealHover: 2px solid hs=
l(184, 50%, 25%); --buttonBorderTealActive: 2px solid hsl(184, 50%, 15%); -=
-brandColorPurple: hsl(264, 100%, 68%); --primaryColorPurple: hsl(264, 83%,=
 62%); --primaryColorPurpleHover: hsl(264, 83%, 52%); --primaryColorPurpleA=
ctive: hsl(264, 83%, 42%); --buttonBorderPurple: 2px solid hsl(264, 83%, 62=
%); --buttonBorderPurpleHover: 2px solid hsl(264, 83%, 52%); --buttonBorder=
PurpleActive: 2px solid hsl(264, 83%, 42%); --brandColorOrange: hsl(33, 94%=
, 48%); --primaryColorOrange: hsl(15, 79%, 45%); --primaryColorOrangeHover:=
 hsl(15, 80%, 35%); --primaryColorOrangeActive: hsl(15, 80%, 25%); --button=
BorderOrange: 2px solid hsl(15, 79%, 45%); --buttonBorderOrangeHover: 2px s=
olid hsl(15, 80%, 35%); --buttonBorderOrangeActive: 2px solid hsl(15, 80%, =
25%); --brandColorBlue: hsl(197, 100%, 50%); --brandColorBlueActive: hsl(19=
7, 100%, 39%); --brandColorBlueWCAG: hsl(197, 100%, 42%); --primaryColorBlu=
e: hsl(201, 100%, 37%); --primaryColorBlueHover: hsl(201, 100%, 27%); --pri=
maryColorBlueActive: hsl(201, 100%, 17%); --buttonBorderBlue: 2px solid hsl=
(201, 100%, 37%); --buttonBorderBlueHover: 2px solid hsl(201, 100%, 27%); -=
-buttonBorderBlueActive: 2px solid hsl(201, 100%, 17%); --BrandcolorYellow:=
 hsl(41, 90%, 61%); --primaryColorReachDeck: hsl(209, 100%, 39%); --primary=
ColorReachDeckHover: hsl(209, 100%, 29%); --primaryColorReachDeckActive: hs=
l(209, 100%, 19%); --buttonBorderReachDeck: 2px solid hsl(209, 100%, 39%); =
--buttonBorderReachDeckHover: 2px solid hsl(209, 100%, 29%); --buttonBorder=
ReachDeckActive: 2px solid hsl(209, 100%, 19%); --reachDeckEditorColor: hsl=
(112, 100%, 26%); --launchpadButtonLight: hsl(210, 10%, 96%); --launchpadBu=
ttonLightHover: hsl(220, 8%, 92%); --launchpadButtonLightActive: hsl(0, 0%,=
 90%); --ContrastPinkOrbitNoteHover: hsl(343, 81%, 48%); --ContrastPinkOrbi=
tNoteActive: hsl(345, 96%, 42%); --ContrastButtonBorderPink: hsl(345, 96%, =
42%); --primaryColorClaroNavy: hsl(207, 74%, 27%); --primaryColorClaroNavyH=
over: hsl(206, 83%, 21%); --primaryColorClaroNavyActive: hsl(206, 89%, 17%)=
; --buttonBorderClaro: 2px solid hsl(207, 74%, 27%); --buttonBorderClaroHov=
er: 2px solid hsl(206, 83%, 21%); --buttonBorderClaroActive: 2px solid hsl(=
206, 89%, 17%); --primaryColorClaroBlue: hsl(201, 100%, 37%); --primaryColo=
rClaroBlueHover: hsl(201, 100%, 31%); --primaryColorClaroBlueActive: hsl(20=
1, 100%, 27%); --claroDark: hsl(218, 54%, 20%); --claroGrey: hsl(217, 31%, =
68%); --claroBlue: hsl(191, 88%, 40%); --claroBlueAlt: hsl(188, 78%, 50%); =
--claroGreen: hsl(75, 63%, 51%); --altColor: var(--claroGreen); --altColorH=
over: hsl(75, 70%, 40%); --altColorActive: hsl(75, 77%, 33%); --altButtonBo=
rderColor: 2px solid var(--claroGreen); --altButtonBorderColorHover: 2px so=
lid hsl(75, 70%, 40%); --altButtonBorderColorActive: 2px solid hsl(75, 77%,=
 33%); --brandColorLingdys: hsl(0, 82%, 49%); --primaryColorLingdys: hsl(21=
7, 34%, 38%); --primaryColorLingdysHover: hsl(217, 37%, 24%); --primaryColo=
rLingdysActive: hsl(217, 39%, 18%); --buttonBorderLingdys: 2px solid hsl(21=
7, 34%, 38%); --buttonBorderLingdysHover: 2px solid hsl(217, 37%, 24%); --b=
uttonBorderLingdysActive: 2px solid hsl(217, 39%, 18%); --brandColorAppWrit=
er: #F70790; --primaryColorAppWriter: #D8087F; --primaryColorAppWriterHover=
: #B40669; --primaryColorAppWriterActive: #9F055C; --buttonBorderAppwriter:=
 2px solid #D8087F; --buttonBorderAppwriterHover: 2px solid #B40669; --butt=
onBorderAppWriterActive: 2px solid #9F055C; --iconToggleFillOrbitNote: hsl(=
196, 99%, 50%); --textColor: var( --th-slate-dark ); --textColorLight: var(=
 --th-white ); --border: 1px solid var( --th-grey ); --borderDark: 1px soli=
d var( --th-grey-dark ); --infoColor: hsl(194, 77%, 24%); --successColor: h=
sla(134, 71%, 43%, 0.584); --errorColor: hsl(0, 71%, 51%); --warningColor: =
hsl(45, 97%, 51%); --infoBackgroundColor: hsl(180, 100%, 99%); --successBac=
kgroundColor: hsl(78, 100%, 98%); --errorBackgroundColor: hsl(0, 100%, 98%)=
; --warningBackgroundColor: hsl(35, 100%, 98%); --notificationDarkModeBackg=
round: hsl(218, 22%, 37%); --infoBorderColor: hsl(191, 44%, 82%); --success=
BorderColor: hsl(100, 28%, 69%); --errorBorderColor: hsl(0, 37%, 73%); --wa=
rningBorderColor: hsl(41, 30%, 71%); --notificationDarkModeBorder: hsl(217,=
 19%, 41%); --infoTitleColor: hsl(194, 77%, 24%); --successTitleColor: hsl(=
121, 48%, 23%); --errorTitleColor: hsl(1, 47%, 40%); --warningTitleColor: h=
sl(37, 92%, 25%); --infoWarningColor: hsl(194, 77%, 24%); --successWarningC=
olor: hsla(121, 48%, 23%, 0.8); --errorWarningColor: hsla(1, 47%, 40%, 0.8)=
; --warningWarningColor: hsla(37, 92%, 25%, 0.8); --buttonBorderRadius: 30p=
x; --buttonRoundness: 30px; --buttonNoBackgroundTextColor: var( --th-slate-=
dark); --buttonNoBackgroundIconColor: var( --th-slate-dark); --buttonNoBack=
groundColor: transparent; --buttonNoBackgroundColorHover: var(--icon-button=
-background-hover-color); --buttonNoBackgroundColorActive: var(--icon-butto=
n-background-active-color); --buttonNoBackgroundBorder: 2px solid transpare=
nt; --buttonNoBackgroundBorderHover: 2px solid transparent; --buttonNoBackg=
roundBorderActive: 2px solid transparent; --activeDotColor: inherit; --them=
eColorDefault: var(--defaultColor); --themeColorGroundworks: var(--primaryC=
olor); --themeColorReadWrite: var(--primaryColorPurple); --themeColorEquati=
o: var(--primaryColorBlue); --themeColorBrowsealoud: var(--primaryColorOran=
ge); --themeColorWriq: var(--primaryColorTeal); --themeColorFluencyTutor: v=
ar(--primaryColorGreen); --themeColorSnapVerter: var(--primaryColorGreen); =
--themeColorSpeechStream: var(--primaryColorPink); --themeColorTexthelp: va=
r(--primaryColorTeal); --themeColorReachDeck: var(--primaryColorReachDeck);=
 --themeColorPdfReader: var(--primaryColorBlue); --uniloginBackgroundColor:=
 #F7F7F7; --uniloginWindowBackgroundColor: var(--primaryColorBlue); --line-=
height-base: 1.5; --zindex-modal: 1050; --modal-dialog-margin: 2em; --modal=
-content-border-radius: 1px; --modal-inner-padding: 1.5em; --modal-title-pa=
dding: 1.5em; --modal-title-line-height: var(--line-height-base); --modal-c=
ontent-bg: #fff; --modal-content-border-color: rgba(0, 0, 0, .2); --modal-c=
ontent-fallback-border-color: #999; --modal-backdrop-bg: #000; --modal-back=
drop-opacity: .5; --modal-header-border-color: #e5e5e5; --modal-footer-bord=
er-color: var(--modal-header-border-color); --modal-header-background-color=
: #f5f5f5; --select-border: 1px solid #DADADA; --select-background: hsl(0, =
0%, 100%); --select-background-color: #efefef; --select-background-color-ho=
ver: hsl(0, 0%, 97%); --input-border: 1px solid #DADADA; --input-background=
-color: #ffffff; --settings-title-color: var(--primaryColor); --settings-it=
em-background-color: var(--th-white); --settings-item-background-hover-colo=
r: var(--th-grey-medium); --settings-item-background-active-color: var(--th=
-grey); --list-group-background-color: transparent; --list-group-item-backg=
round-color: var(--th-white); --list-group-item-background-hover-color: var=
(--th-grey-light); --list-group-item-background-active-color: var(--th-grey=
); --list-group-item-icon-color: var(--th-slate-dark); --ListGroupSearchIte=
mColor: var(--th-white); --ListGroupSearchItemColorHover: #f9fafb; --ListGr=
oupSearchItemTextColor: var(--th-slate); --ListGroupSearchItemBorderColor: =
hsla(0, 0%, 0%, 0.15); --ListGroupSearchItemAsideColor: hsl(0, 0%, 95%); --=
ListGroupSearchItemAsideTextColor: #000; --toolbar-button-disabled: hsl(0, =
0%, 96.1%); --toolbar-button-background: hsl(0, 0%, 96.1%); --toolbar-butto=
n-hover-background: hsl(0, 0%, 80%); --toolbar-button-color: hsl(0, 0%, 0%)=
; --toolbar-button-hover-active-background: hsl(0, 0%, 70.2%); --toolbar-bu=
tton-default-size: 43px; --toolbar-button-focus-color: hsl(213, 71.3%, 60.4=
%); --toolbar-button-svg-color: hsl(0, 0%, 29%); --toolbar-button-toggle-co=
lor: hsl(264, 100%, 68%); --panel-inner-padding: .7em; --icon-button-backgr=
ound-default-color: hsla(0, 0%, 0%, 0.077); --icon-button-background-hover-=
color: hsla(0, 0%, 0%, 0.125); --icon-button-background-active-color: hsla(=
0, 0%, 0%, 0.187); --icon-button-background-default-color-dark: rgba(255, 2=
55, 255, 0.077); --icon-button-background-hover-color-dark: rgba(255, 255, =
255, 0.146); --icon-button-background-active-color-dark: rgba(255, 255, 255=
, 0.221); --icon-button-border-color: solid 2px transparent; --menuIconFill=
Color: var(--th-slate); --cardIconFillColor: var(--th-slate); --default-men=
u-notify-background-colour: hsl(264, 100%, 68%); --toolbarButtonBackgroundC=
olor: var( --defaultColor); --toolbarButtonBackgroundHoverColor: var( --ico=
n-button-background-hover-color); --toolbarButtonBackgroundActiveColor: var=
( --icon-button-background-active-color); --toolbarIconHoverFill: var( --th=
-slate); --toolbarIconToggleFill: var( --primaryColor); --dashboardContentB=
ackgroundColor: #fff; --dashboardHeaderBackgroundColor: #fff; --dashboardSi=
debarBorderTopColor: var( --lightGrey); --dashboardTextColor: var(--th-slat=
e); --dashboardTitleTextColor: var(--fontColorDark); --dashboardSubTitleTex=
tColor: var(--th-slate-light); --dashboardCardBackgroundColor: var(--white)=
; --dashboardCardBackgroundHoverColor: var(--th-grey-light); --dashboardCar=
dBackgroundActiveColor: var(--lightGrey); --dashboardCardHighlightColor: va=
r(--primaryColor); --dashboardCardBorderColor: var(--lightGrey); --dashboar=
dCardFooterLinkColor: var(--primaryColor); --dashboardCardAuditorColor: hsl=
(208, 100%, 43%); --dashboardCardAuditorLabelColor: hsl(208, 100%, 43%); --=
dashboardCardEditorLabelColor: var(--reachDeckEditorColor); --dashboardCard=
ToolbarColor: var(--primaryColorOrange); --dashboardCardToolbarLabelColor: =
var(--primaryColorOrange); --dashboardPaneBackgroundColor: #fcfcfc; --dashb=
oardPaneBorderColor: rgba(92, 106, 138, 0.4); --dashboardPaneDashedBorderCo=
lor: var(--dashboardDashedBorderLight); --dashboardDashedBorderLight: url("=
data:image/svg+xml,%3csvg width=3D'100%25' height=3D'100%25' xmlns=3D'http:=
//www.w3.org/2000/svg'%3e%3crect width=3D'100%25' height=3D'100%25' fill=3D=
'none' stroke=3D'%235C6A8ACC' stroke-width=3D'2' stroke-dasharray=3D'4%2c 8=
' stroke-dashoffset=3D'0' stroke-linecap=3D'square'/%3e%3c/svg%3e"); --dash=
boardDashedBorderDark: url("data:image/svg+xml,%3csvg width=3D'100%25' heig=
ht=3D'100%25' xmlns=3D'http://www.w3.org/2000/svg'%3e%3crect width=3D'100%2=
5' height=3D'100%25' fill=3D'none' stroke=3D'%23323E52FF' stroke-width=3D'2=
' stroke-dasharray=3D'4%2c 8' stroke-dashoffset=3D'0' stroke-linecap=3D'squ=
are'/%3e%3c/svg%3e"); --icon-opacity: 1; --accordionBackgroundColor: #fff; =
--accordionTextColor: #484848; --accordionTextBottomColor: #484848; --accor=
dionIconColor: var(--toolbarWhite); --accordionBackgroundColorHover: #f9faf=
b; --tableBackgroundColor: none; --tableBackgroundHeaderColor: #F9FAFB; --t=
ableBackgroundAltColor: #f7f7f7; --tableBackgroundHoverColor: hsl(210, 20%,=
 98%); --tableBorderColor: #E2E2E3; --tableTextColor: #484848; --buttonLink=
TextColor: var( --primaryColor) !important; --buttonLinkIconColor: var( --p=
rimaryColor) !important; }

.th-wq, .th-th { --toolbarBackgroundColor: var(--defaultColor); --themeColo=
rDefault: var(--defaultColor); --themeColorPrimary: var(--themeColorWriq); =
--themeColorSecondary: var(--secondaryColor); --dashboardTopColor: var(--br=
andColorTeal); --dashboardTitleColor: var(--themeColorWriq); --iconFillColo=
r: var(--white); --buttonBackgroundColor: var(--defaultColor); --buttonBack=
groundHoverColor: var(--defaultColorHover); --buttonBackgroundActiveColor: =
var(--defaultColorActive); --buttonTextColor: var(--fontColorDark); --butto=
nTextHoverColor: var(--fontColorDark); --buttonTextActiveColor: var(--fontC=
olorDark); --buttonTextVisitedColor: var(--fontColorDark); --buttonBorder: =
var(--buttonBorder); --buttonBorderHover: var(--buttonBorderColorHover); --=
buttonBorderRadius: var(--buttonRoundness); --buttonIconFillColor: var(--bl=
ack); --primaryButtonBackgroundColor: var(--primaryColorTeal); --primaryBut=
tonBackgroundHoverColor: var(--primaryColorTealHover); --primaryButtonBackg=
roundActiveColor: var(--primaryColorTealActive); --primaryButtonBorderActiv=
e: var(--buttonBorderTealActive); --primaryButtonTextColor: var(--fontColor=
White); --primaryButtonTextHoverColor: var(--fontColorWhite); --primaryButt=
onTextActiveColor: var(--fontColorWhite); --primaryButtonTextVisitedColor: =
var(--fontColorWhite); --primaryButtonBorder: var(--buttonBorderTeal); --pr=
imaryButtonBorderHover: var(--buttonBorderTealHover); --primaryButtonBorder=
Radius: var(--buttonRoundness); --primaryButtonIconFillColor: var(--white);=
 --secondaryButtonBackgroundColor: var(--secondaryColor); --secondaryButton=
BackgroundHoverColor: var(--secondaryColorHover); --secondaryButtonBackgrou=
ndActiveColor: var(--secondaryColorActive); --secondaryButtonTextColor: var=
(--fontColorWhite); --secondaryButtonTextHoverColor: var(--fontColorWhite);=
 --secondaryButtonTextActiveColor: var(--fontColorWhite); --secondaryButton=
TextVisitedColor: var(--fontColorWhite); --secondaryButtonBorder: var(--sec=
ondaryButtonBorder); --secondaryButtonBorderHover: var(--secondaryButtonBor=
derColorHover); --secondaryButtonBorderRadius: var(--buttonRoundness); --se=
condaryButtonIconFillColor: var(--white); --table-hover-item: var(--list-it=
em-light-hover); --settingsTitleColor: var(--themeColorPrimary); }

.th-rw, .th-wa { --themeColorDefault: var(--defaultColor); --themeColorPrim=
ary: var(--themeColorReadWrite); --themeColorSecondary: var(--secondaryColo=
r); --toolbarBackgroundColor: var(--defaultColor); --toolbarIconFill: var(-=
-th-slate); --toolbarIconHoverFill: var(--th-slate); --toolbarIconActiveFil=
l: var(--th-slate); --toolbarIconToggledHoverFill: var(--primaryColorPurple=
); --toolbarIconToggleFill: var(--primaryColorPurple); --toolbarIconToggleH=
overFill: var(--primaryColorPurple); --dashboardTopColor: var(--brandColorP=
urple); --dashboardTitleColor: var(--themeColorReadWrite); --iconFillColor:=
 var(--th-slate-dark); --buttonBackgroundColor: var(--defaultColor); --butt=
onBackgroundHoverColor: var(--defaultColorHover); --buttonBackgroundActiveC=
olor: var(--defaultColorActive); --buttonTextColor: var(--fontColorDark); -=
-buttonTextHoverColor: var(--fontColorDark); --buttonTextActiveColor: var(-=
-fontColorDark); --buttonTextVisitedColor: var(--fontColorDark); --buttonBo=
rder: var(--buttonBorder); --buttonBorderHover: var(--buttonBorderColorHove=
r); --buttonBorderActive: var(--buttonBorderColorActive); --buttonBorderRad=
ius: var(--buttonRoundness); --buttonIconFillColor: var(--black); --primary=
ButtonBackgroundColor: var(--primaryColorPurple); --primaryButtonBackground=
HoverColor: var(--primaryColorPurpleHover); --primaryButtonBackgroundActive=
Color: var(--primaryColorPurpleActive); --primaryButtonBorderActive: var(--=
buttonBorderPurpleActive); --primaryButtonTextColor: var(--fontColorWhite);=
 --primaryButtonTextHoverColor: var(--fontColorWhite); --primaryButtonTextA=
ctiveColor: var(--fontColorWhite); --primaryButtonTextVisitedColor: var(--f=
ontColorWhite); --primaryButtonBorder: var(--buttonBorderPurple); --primary=
ButtonBorderHover: var(--buttonBorderPurpleHover); --primaryButtonBorderRad=
ius: var(--buttonRoundness); --primaryButtonIconFillColor: var(--white); --=
secondaryButtonBackgroundColor: var(--secondaryColor); --secondaryButtonBac=
kgroundHoverColor: var(--secondaryColorHover); --secondaryButtonBackgroundA=
ctiveColor: var(--secondaryColorActive); --secondaryButtonTextColor: var(--=
fontColorWhite); --secondaryButtonTextHoverColor: var(--fontColorWhite); --=
secondaryButtonTextActiveColor: var(--fontColorWhite); --secondaryButtonTex=
tVisitedColor: var(--fontColorWhite); --secondaryButtonBorder: var(--second=
aryButtonBorder); --secondaryButtonBorderHover: var(--secondaryButtonBorder=
ColorHover); --secondaryButtonBorderRadius: var(--buttonRoundness); --secon=
daryButtonIconFillColor: var(--white); --table-hover-item: var(--list-item-=
light-hover); --settingsTitleColor: var(--themeColorPrimary); --menuNotifyB=
ackgroundColour: var(--brandColorPurple); --uniloginBackgroundColor: #FAF7F=
F; --uniloginWindowBackgroundColor: var(--primaryColorPurple); }

.th-pr { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--themeColorPdfReader); --themeColorSecondary: var(--secondaryColor); --pr=
imaryButtonBackgroundColor: var(--primaryColorBlue); --primaryButtonBackgro=
undHoverColor: var(--primaryColorBlueHover); --primaryButtonBackgroundActiv=
eColor: var(--primaryColorBlueActive); --primaryButtonBorderActive: var(--b=
uttonBorderBlueActive); --primaryButtonTextColor: var(--fontColorWhite); --=
primaryButtonTextHoverColor: var(--fontColorWhite); --primaryButtonTextActi=
veColor: var(--fontColorWhite); --primaryButtonTextVisitedColor: var(--font=
ColorWhite); --primaryButtonBorder: var(--buttonBorderBlue); --primaryButto=
nBorderHover: var(--buttonBorderBlueHover); --primaryButtonBorderRadius: va=
r(--buttonRoundness); --primaryButtonIconFillColor: var(--white); --toolbar=
BackgroundColor: var(--th-grey); --toolbarButtonBackgroundColor: var(--th-g=
rey); --toolbarButtonBackgroundHoverColor: var(--ContrastPinkOrbitNoteHover=
); --toolbarButtonBackgroundActiveColor: var(--ContrastPinkOrbitNoteActive)=
; --toolbarButtonBorderActive: var(--ContrastButtonBorderPink); --toolbarIc=
onFill: var(--th-slate); --toolbarIconHoverFill: var(--white); --toolbarIco=
nActiveFill: var(--white); --toolbarIconToggleFill: var(--ContrastPinkOrbit=
NoteActive); --toolbarIconToggleHoverFill: var(--white); --toolbarIconToggl=
edHoverFill: var(--white); --iconButtonBackgroundDefaultColor: var(--icon-b=
utton-background-default-color); --iconButtonBackgroundHoverColor: var(--ic=
on-button-background-hover-color); --iconButtonBackgroundActiveColor: var(-=
-icon-button-background-active-color); --iconButtonBorderColor: 2px solid t=
ransparent; --iconFillColor: var(--th-slate); --panelBackgroundColor: var(-=
-th-grey-light); --panelBackgroundColorLight: var(--white); --panelBackgrou=
ndColorDark: var(--th-grey); --fontColor: var(--th-slate-dark); --borderCol=
or: 1px solid var(--th-grey-dark); --settingsTitleColor: var(--themeColorPr=
imary); --menuNotifyBackgroundColour: var(--brandColorPink); --dashboardTop=
Color: var(--primaryColorBlue); --dashboardTitleColor: var(--themeColorEqua=
tio); --cardIconFillColor: var(--primaryColorBlue); }

.th-eq { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--themeColorEquatio); --themeColorSecondary: var(--secondaryColor); --dash=
boardTopColor: var(--brandColorBlue); --dashboardTitleColor: var(--themeCol=
orEquatio); --iconFillColor: var(--th-slate-dark); --buttonBackgroundColor:=
 var(--defaultColor); --buttonBackgroundHoverColor: var(--defaultColorHover=
); --buttonBackgroundActiveColor: var(--defaultColorActive); --buttonTextCo=
lor: var(--fontColorDark); --buttonTextHoverColor: var(--fontColorDark); --=
buttonTextActiveColor: var(--fontColorDark); --buttonTextVisitedColor: var(=
--fontColorDark); --buttonBorder: var(--buttonBorder); --buttonBorderHover:=
 var(--buttonBorderColorHover); --buttonBorderRadius: var(--buttonRoundness=
); --buttonIconFillColor: var(--black); --primaryButtonBackgroundColor: var=
(--primaryColorBlue); --primaryButtonBackgroundHoverColor: var(--primaryCol=
orBlueHover); --primaryButtonBackgroundActiveColor: var(--primaryColorBlueA=
ctive); --primaryButtonBorderActive: var(--buttonBorderBlueActive); --prima=
ryButtonTextColor: var(--fontColorWhite); --primaryButtonTextHoverColor: va=
r(--fontColorWhite); --primaryButtonTextActiveColor: var(--fontColorWhite);=
 --primaryButtonTextVisitedColor: var(--fontColorWhite); --primaryButtonBor=
der: var(--buttonBorderBlue); --primaryButtonBorderHover: var(--buttonBorde=
rBlueHover); --primaryButtonBorderRadius: var(--buttonRoundness); --primary=
ButtonIconFillColor: var(--white); --secondaryButtonBackgroundColor: var(--=
secondaryColor); --secondaryButtonBackgroundHoverColor: var(--secondaryColo=
rHover); --secondaryButtonBackgroundActiveColor: var(--secondaryColorActive=
); --secondaryButtonTextColor: var(--fontColorWhite); --secondaryButtonText=
HoverColor: var(--fontColorWhite); --secondaryButtonTextActiveColor: var(--=
fontColorWhite); --secondaryButtonTextVisitedColor: var(--fontColorWhite); =
--secondaryButtonBorder: var(--secondaryButtonBorder); --secondaryButtonBor=
derHover: var(--secondaryButtonBorderColorHover); --secondaryButtonBorderRa=
dius: var(--buttonRoundness); --secondaryButtonIconFillColor: var(--white);=
 --table-hover-item: var(--list-item-light-hover); --settingsTitleColor: va=
r(--themeColorPrimary); --uniloginBackgroundColor: #F2F9FF; --uniloginWindo=
wBackgroundColor: var(--brandColorBlueWCAG); }

.th-ba { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--themeColorBrowsealoud); --themeColorSecondary: var(--secondaryColor); --=
toolbarBackgroundColor: var(--th-grey); --toolbarIconButtonFillColor: var(-=
-th-slate); --toolbarButtonBackgroundColor: var(--th-grey); --toolbarButton=
BackgroundHoverColor: var(--primaryColorOrangeHover); --toolbarButtonBackgr=
oundActiveColor: var(--primaryColorOrangeActive); --toolbarButtonBorderActi=
ve: var(--buttonBorderOrange); --toolbarIconFill: var(--th-slate); --toolba=
rIconHoverFill: var(--th-slate); --toolbarIconActiveFill: var(--primaryColo=
rBlue); --toolbarIconToggleFill: var(--primaryColorBlue); --toolbarIconTogg=
leHoverFill: var(--white); --dashboardTopColor: var(--brandColorOrange); --=
dashboardTitleColor: var(--themeColorBrowsealoud); --iconFillColor: var(--w=
hite); --buttonBackgroundColor: var(--defaultColor); --buttonBackgroundHove=
rColor: var(--defaultColorHover); --buttonBackgroundActiveColor: var(--defa=
ultColorActive); --buttonTextColor: var(--fontColorDark); --buttonTextHover=
Color: var(--fontColorDark); --buttonTextActiveColor: var(--fontColorDark);=
 --buttonTextVisitedColor: var(--fontColorDark); --buttonBorder: var(--butt=
onBorder); --buttonBorderHover: var(--buttonBorderColorHover); --buttonBord=
erRadius: var(--buttonRoundness); --buttonBorderIconFillColor: var(--black)=
; --primaryButtonBackgroundColor: var(--primaryColorOrange); --primaryButto=
nBackgroundHoverColor: var(--primaryColorOrangeHover); --primaryButtonBackg=
roundActiveColor: var(--primaryColorOrangeActive); --primaryButtonBorderAct=
ive: var(--buttonBorderOrangeActive); --primaryButtonTextColor: var(--fontC=
olorWhite); --primaryButtonTextHoverColor: var(--fontColorWhite); --primary=
ButtonTextActiveColor: var(--fontColorWhite); --primaryButtonTextVisitedCol=
or: var(--fontColorWhite); --primaryButtonBorder: var(--buttonBorderOrange)=
; --primaryButtonBorderHover: var(--buttonBorderOrangeHover); --primaryButt=
onBorderRadius: var(--buttonRoundness); --primaryButtonIconFillColor: var(-=
-white); --secondaryButtonBackgroundColor: var(--secondaryColor); --seconda=
ryButtonBackgroundHoverColor: var(--secondaryColorHover); --secondaryButton=
BackgroundActiveColor: var(--secondaryColorActive); --secondaryButtonTextCo=
lor: var(--fontColorWhite); --secondaryButtonTextHoverColor: var(--fontColo=
rWhite); --secondaryButtonTextActiveColor: var(--fontColorWhite); --seconda=
ryButtonTextVisitedColor: var(--fontColorWhite); --secondaryButtonBorder: v=
ar(--secondaryButtonBorder); --secondaryButtonBorderHover: var(--secondaryB=
uttonBorderColorHover); --secondaryButtonBorderRadius: var(--buttonRoundnes=
s); --secondaryButtonIconFillColor: var(--white); --table-hover-item: var(-=
-list-item-light-hover); --settingsTitleColor: var(--themeColorPrimary); --=
menuNotifyBackgroundColour: var(--white); }

.th-ba .gw-menu-notification--inline { --menuNotifyBackgroundColour: var(--=
themeColorBrowsealoud); }

.th-at { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--themeColorReachDeck); --themeColorSecondary: var(--secondaryColor); --to=
olbarBackgroundColor: var(--defaultColor); --toolbarIconFill: var(--th-slat=
e); --toolbarIconHoverFill: var(--th-slate); --toolbarIconActiveFill: var(-=
-th-slate); --toolbarIconToggledHoverFill: var(--primaryColorBlue); --toolb=
arIconToggleFill: var(--primaryColorBlue); --toolbarIconToggleHoverFill: va=
r(--primaryColorBlue); --dashboardTitleColor: var(--th-slate-dark); --iconF=
illColor: var(--th-slate-dark); --buttonBackgroundColor: var(--defaultColor=
); --buttonBackgroundHoverColor: var(--defaultColorHover); --buttonBackgrou=
ndActiveColor: var(--defaultColorActive); --buttonTextColor: var(--fontColo=
rDark); --buttonTextHoverColor: var(--fontColorDark); --buttonTextActiveCol=
or: var(--fontColorDark); --buttonTextVisitedColor: var(--fontColorDark); -=
-buttonBorder: var(--buttonBorder); --buttonBorderHover: var(--buttonBorder=
ColorHover); --buttonBorderRadius: var(--buttonRoundness); --buttonBorderIc=
onFillColor: var(--black); --primaryButtonBackgroundColor: var(--primaryCol=
orReachDeck); --primaryButtonBackgroundHoverColor: var(--primaryColorReachD=
eckHover); --primaryButtonBackgroundActiveColor: var(--primaryColorReachDec=
kActive); --primaryButtonBorderActive: var(--buttonBorderReachDeckActive); =
--primaryButtonTextColor: var(--fontColorWhite); --primaryButtonTextHoverCo=
lor: var(--fontColorWhite); --primaryButtonTextActiveColor: var(--fontColor=
White); --primaryButtonTextVisitedColor: var(--fontColorWhite); --primaryBu=
ttonBorder: var(--buttonBorderReachDeck); --primaryButtonBorderHover: var(-=
-buttonBorderReachDeckHover); --primaryButtonBorderRadius: var(--buttonRoun=
dness); --primaryButtonIconFillColor: var(--white); --secondaryButtonBackgr=
oundColor: var(--secondaryColor); --secondaryButtonBackgroundHoverColor: va=
r(--secondaryColorHover); --secondaryButtonBackgroundActiveColor: var(--sec=
ondaryColorActive); --secondaryButtonTextColor: var(--fontColorWhite); --se=
condaryButtonTextHoverColor: var(--fontColorWhite); --secondaryButtonTextAc=
tiveColor: var(--fontColorWhite); --secondaryButtonTextVisitedColor: var(--=
fontColorWhite); --secondaryButtonBorder: var(--secondaryButtonBorder); --s=
econdaryButtonBorderHover: var(--secondaryButtonBorderColorHover); --second=
aryButtonBorderRadius: var(--buttonRoundness); --secondaryButtonIconFillCol=
or: var(--white); --dashboardTopColor: #E12362; --dashboardContentBackgroun=
dColor: #F2F5F9; --tableBackgroundHeaderColor: #DFE1E5; --table-hover-item:=
 var(--list-item-light-hover); --settingsTitleColor: var(--themeColorPrimar=
y); }

.th-rd { font-size: 10px; --themeColorDefault: var(--defaultColor); --theme=
ColorPrimary: var(--themeColorReachDeck); --themeColorSecondary: var(--seco=
ndaryColor); --toolbarBackgroundColor: var(--defaultColor); --toolbarIconFi=
ll: var(--th-slate); --toolbarIconHoverFill: var(--th-slate); --toolbarIcon=
ActiveFill: var(--th-slate); --toolbarIconToggledHoverFill: var(--primaryCo=
lorBlue); --toolbarIconToggleFill: var(--primaryColorBlue); --toolbarIconTo=
ggleHoverFill: var(--primaryColorBlue); --dashboardTopColor: var(--th-grey)=
; --dashboardTitleColor: var(--th-slate-dark); --iconFillColor: var(--th-sl=
ate-dark); --buttonBackgroundColor: var(--defaultColor); --buttonBackground=
HoverColor: var(--defaultColorHover); --buttonBackgroundActiveColor: var(--=
defaultColorActive); --buttonTextColor: var(--fontColorDark); --buttonTextH=
overColor: var(--fontColorDark); --buttonTextActiveColor: var(--fontColorDa=
rk); --buttonTextVisitedColor: var(--fontColorDark); --buttonBorder: var(--=
buttonBorder); --buttonBorderHover: var(--buttonBorderColorHover); --button=
BorderRadius: var(--buttonRoundness); --buttonBorderIconFillColor: var(--bl=
ack); --primaryButtonBackgroundColor: var(--primaryColorReachDeck); --prima=
ryButtonBackgroundHoverColor: var(--primaryColorReachDeckHover); --primaryB=
uttonBackgroundActiveColor: var(--primaryColorReachDeckActive); --primaryBu=
ttonBorderActive: var(--buttonBorderReachDeckActive); --primaryButtonTextCo=
lor: var(--fontColorWhite); --primaryButtonTextHoverColor: var(--fontColorW=
hite); --primaryButtonTextActiveColor: var(--fontColorWhite); --primaryButt=
onTextVisitedColor: var(--fontColorWhite); --primaryButtonBorder: var(--but=
tonBorderReachDeck); --primaryButtonBorderHover: var(--buttonBorderReachDec=
kHover); --primaryButtonBorderRadius: var(--buttonRoundness); --primaryButt=
onIconFillColor: var(--white); --secondaryButtonBackgroundColor: var(--seco=
ndaryColor); --secondaryButtonBackgroundHoverColor: var(--secondaryColorHov=
er); --secondaryButtonBackgroundActiveColor: var(--secondaryColorActive); -=
-secondaryButtonTextColor: var(--fontColorWhite); --secondaryButtonTextHove=
rColor: var(--fontColorWhite); --secondaryButtonTextActiveColor: var(--font=
ColorWhite); --secondaryButtonTextVisitedColor: var(--fontColorWhite); --se=
condaryButtonBorder: var(--secondaryButtonBorder); --secondaryButtonBorderH=
over: var(--secondaryButtonBorderColorHover); --secondaryButtonBorderRadius=
: var(--buttonRoundness); --secondaryButtonIconFillColor: var(--white); --t=
able-hover-item: var(--list-item-light-hover); --settingsTitleColor: var(--=
themeColorPrimary); }

.th-ss { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--themeColorSpeechStream); --themeColorSecondary: var(--secondaryColor); -=
-dashboardTopColor: var(--brandColorPink); --dashboardTitleColor: var(--the=
meColorSpeechStream); --iconFillColor: var(--th-slate-dark); --buttonBackgr=
oundColor: var(--defaultColor); --buttonBackgroundHoverColor: var(--default=
ColorHover); --buttonBackgroundActiveColor: var(--defaultColorActive); --bu=
ttonTextColor: var(--fontColorDark); --buttonTextHoverColor: var(--fontColo=
rDark); --buttonTextActiveColor: var(--fontColorDark); --buttonTextVisitedC=
olor: var(--fontColorDark); --buttonBorder: var(--buttonBorder); --buttonBo=
rderHover: var(--buttonBorderColorHover); --buttonBorderRadius: var(--butto=
nRoundness); --buttonBorderIconFillColor: var(--black); --primaryButtonBack=
groundColor: var(--themeColorSpeechStream); --primaryButtonBackgroundHoverC=
olor: var(--primaryColorPinkHover); --primaryButtonBackgroundActiveColor: v=
ar(--primaryColorPinkActive); --primaryButtonBorderActive: var(--buttonBord=
erPinkActive); --primaryButtonTextColor: var(--fontColorWhite); --primaryBu=
ttonTextHoverColor: var(--fontColorWhite); --primaryButtonTextActiveColor: =
var(--fontColorWhite); --primaryButtonTextVisitedColor: var(--fontColorWhit=
e); --primaryButtonBorder: var(--buttonBorderPink); --primaryButtonBorderHo=
ver: var(--buttonBorderPinkHover); --primaryButtonBorderRadius: var(--butto=
nRoundness); --primaryButtonIconFillColor: var(--white); --secondaryButtonB=
ackgroundColor: var(--secondaryColor); --secondaryButtonBackgroundHoverColo=
r: var(--secondaryColorHover); --secondaryButtonBackgroundActiveColor: var(=
--secondaryColorActive); --secondaryButtonTextColor: var(--fontColorWhite);=
 --secondaryButtonTextHoverColor: var(--fontColorWhite); --secondaryButtonT=
extActiveColor: var(--fontColorWhite); --secondaryButtonTextVisitedColor: v=
ar(--fontColorWhite); --secondaryButtonBorder: var(--secondaryButtonBorder)=
; --secondaryButtonBorderHover: var(--secondaryButtonBorderColorHover); --s=
econdaryButtonBorderRadius: var(--buttonRoundness); --secondaryButtonIconFi=
llColor: var(--white); --table-hover-item: var(--list-item-light-hover); --=
settingsTitleColor: var(--themeColorPrimary); }

.th-st { --uniloginBackgroundColor: #F2F9FF; --uniloginWindowBackgroundColo=
r: #2A3953; }

.th-sv, .th-ft { --themeColorDefault: var(--defaultColor); --themeColorPrim=
ary: var(--themeColorFluencyTutor); --themeColorSecondary: var(--secondaryC=
olor); --dashboardTopColor: var(--brandColorGreen); --dashboardTitleColor: =
var(--themeColorFluencyTutor); --iconFillColor: var(--th-slate-dark); --but=
tonBackgroundColor: var(--defaultColor); --buttonBackgroundHoverColor: var(=
--defaultColorHover); --buttonBackgroundActiveColor: var(--defaultColorActi=
ve); --buttonTextColor: var(--fontColorDark); --buttonTextHoverColor: var(-=
-fontColorDark); --buttonTextActiveColor: var(--fontColorDark); --buttonTex=
tVisitedColor: var(--fontColorDark); --buttonBorder: var(--buttonBorder); -=
-buttonBorderHover: var(--buttonBorderColorHover); --buttonBorderRadius: va=
r(--buttonRoundness); --buttonBorderIconFillColor: var(--black); --primaryB=
uttonBackgroundColor: var(--themeColorFluencyTutor); --primaryButtonBackgro=
undHoverColor: var(--primaryColorGreenHover); --primaryButtonBackgroundActi=
veColor: var(--primaryColorGreenActive); --primaryButtonBorderActive: var(-=
-buttonBorderGreenActive); --primaryButtonTextColor: var(--fontColorWhite);=
 --primaryButtonTextHoverColor: var(--fontColorWhite); --primaryButtonTextA=
ctiveColor: var(--fontColorWhite); --primaryButtonTextVisitedColor: var(--f=
ontColorWhite); --primaryButtonBorder: var(--buttonBorderGreen); --primaryB=
uttonBorderHover: var(--buttonBorderGreenHover); --primaryButtonBorderRadiu=
s: var(--buttonRoundness); --primaryButtonIconFillColor: var(--white); --se=
condaryButtonBackgroundColor: var(--secondaryColor); --secondaryButtonBackg=
roundHoverColor: var(--secondaryColorHover); --secondaryButtonBackgroundAct=
iveColor: var(--secondaryColorActive); --secondaryButtonTextColor: var(--fo=
ntColorWhite); --secondaryButtonTextHoverColor: var(--fontColorWhite); --se=
condaryButtonTextActiveColor: var(--fontColorWhite); --secondaryButtonTextV=
isitedColor: var(--fontColorWhite); --secondaryButtonBorder: var(--secondar=
yButtonBorder); --secondaryButtonBorderHover: var(--secondaryButtonBorderCo=
lorHover); --secondaryButtonBorderRadius: var(--buttonRoundness); --seconda=
ryButtonIconFillColor: var(--white); --table-hover-item: var(--list-item-li=
ght-hover); --settingsTitleColor: var(--themeColorPrimary); }

.th-cr { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--primaryColorClaroNavy); --themeColorSecondary: var(--secondaryColor); --=
buttonBackgroundColor: var(--defaultColor); --buttonBackgroundHoverColor: v=
ar(--defaultColorHover); --buttonBackgroundActiveColor: var(--defaultColorA=
ctive); --buttonTextColor: var(--fontColorDark); --buttonTextHoverColor: va=
r(--fontColorDark); --buttonTextActiveColor: var(--fontColorDark); --button=
TextVisitedColor: var(--fontColorDark); --buttonBorder: var(--buttonBorder)=
; --buttonBorderHover: var(--buttonBorderColorHover); --buttonBorderRadius:=
 var(--buttonRoundness); --buttonBorderIconFillColor: var(--black); --prima=
ryButtonBackgroundColor: var(--primaryColorClaroNavy); --primaryButtonBackg=
roundHoverColor: var(--primaryColorClaroNavyHover); --primaryButtonBackgrou=
ndActiveColor: var(--primaryColorClaroNavyActive); --primaryButtonBorderAct=
ive: var(--buttonBorderClaroActive); --primaryButtonTextColor: var(--fontCo=
lorWhite); --primaryButtonTextHoverColor: var(--fontColorWhite); --primaryB=
uttonTextActiveColor: var(--fontColorWhite); --primaryButtonTextVisitedColo=
r: var(--fontColorWhite); --primaryButtonBorder: var(--buttonBorderClaro); =
--primaryButtonBorderHover: var(--buttonBorderClaroHover); --primaryButtonB=
orderRadius: var(--buttonRoundness); --primaryButtonIconFillColor: var(--wh=
ite); --altButtonBackgroundColor: var(--altColor); --altButtonBackgroundHov=
erColor: var(--altColorHover); --altButtonBackgroundActiveColor: var(--altC=
olorActive); --altButtonTextColor: var(--fontColorWhite); --altButtonTextHo=
verColor: var(--fontColorWhite); --altButtonTextActiveColor: var(--fontColo=
rWhite); --altButtonTextVisitedColor: var(--fontColorWhite); --altButtonBor=
der: var(--altButtonBorder); --altButtonBorderHover: var(--altButtonBorderC=
olorHover); --altButtonBorderRadius: var(--buttonRoundness); --altButtonIco=
nFillColor: var(--white); --uniloginBackgroundColor: #F2F9FF; --uniloginWin=
dowBackgroundColor: var(--themeColorPrimary); }

.th-wh { background: rgb(246, 246, 246); --themeColorDefault: var(--default=
Color); --themeColorPrimary: var(--primaryColorClaroNavy); --themeColorSeco=
ndary: var(--secondaryColor); --buttonBackgroundColor: var(--defaultColor);=
 --buttonBackgroundHoverColor: var(--defaultColorHover); --buttonBackground=
ActiveColor: var(--defaultColorActive); --buttonTextColor: var(--fontColorD=
ark); --buttonTextHoverColor: var(--fontColorDark); --buttonTextActiveColor=
: var(--fontColorDark); --buttonTextVisitedColor: var(--fontColorDark); --b=
uttonBorder: var(--buttonBorder); --buttonBorderHover: var(--buttonBorderCo=
lorHover); --buttonBorderRadius: var(--buttonRoundness); --buttonBorderIcon=
FillColor: var(--black); --primaryButtonBackgroundColor: var(--primaryColor=
ClaroBlue); --primaryButtonBackgroundHoverColor: var(--primaryColorClaroBlu=
eHover); --primaryButtonBackgroundActiveColor: var(--primaryColorClaroBlueA=
ctive); --primaryButtonBorderActive: var(--buttonBorderClaroActive); --prim=
aryButtonTextColor: var(--fontColorWhite); --primaryButtonTextHoverColor: v=
ar(--fontColorWhite); --primaryButtonTextActiveColor: var(--fontColorWhite)=
; --primaryButtonTextVisitedColor: var(--fontColorWhite); --primaryButtonBo=
rder: var(--primaryColorClaroBlue); --primaryButtonBorderHover: var(--prima=
ryColorClaroBlueHover); --primaryButtonBorderRadius: var(--buttonRoundness)=
; --primaryButtonIconFillColor: var(--white); --altButtonBackgroundColor: v=
ar(--altColor); --altButtonBackgroundHoverColor: var(--altColorHover); --al=
tButtonBackgroundActiveColor: var(--altColorActive); --altButtonTextColor: =
var(--fontColorWhite); --altButtonTextHoverColor: var(--fontColorWhite); --=
altButtonTextActiveColor: var(--fontColorWhite); --altButtonTextVisitedColo=
r: var(--fontColorWhite); --altButtonBorder: var(--altButtonBorder); --altB=
uttonBorderHover: var(--altButtonBorderColorHover); --altButtonBorderRadius=
: var(--buttonRoundness); --altButtonIconFillColor: var(--white); --unilogi=
nBackgroundColor: #F2F9FF; --uniloginWindowBackgroundColor: var(--primaryCo=
lorClaroNavy); }

.th-lds { --themeColorDefault: var(--defaultColor); --themeColorPrimary: va=
r(--primaryColorLingdys); --themeColorSecondary: var(--secondaryColor); --b=
uttonBackgroundColor: var(--defaultColor); --buttonBackgroundHoverColor: va=
r(--defaultColorHover); --buttonBackgroundActiveColor: var(--defaultColorAc=
tive); --buttonTextColor: var(--fontColorDark); --buttonTextHoverColor: var=
(--fontColorDark); --buttonTextActiveColor: var(--fontColorDark); --buttonT=
extVisitedColor: var(--fontColorDark); --buttonBorder: var(--buttonBorder);=
 --buttonBorderHover: var(--buttonBorderColorHover); --buttonBorderRadius: =
var(--buttonRoundness); --buttonBorderIconFillColor: var(--black); --primar=
yButtonBackgroundColor: var(--primaryColorLingdys); --primaryButtonBackgrou=
ndHoverColor: var(--primaryColorLingdysHover); --primaryButtonBackgroundAct=
iveColor: var(--primaryColorLingdysActive); --primaryButtonBorderActive: va=
r(--buttonBorderLingdysActive); --primaryButtonTextColor: var(--fontColorWh=
ite); --primaryButtonTextHoverColor: var(--fontColorWhite); --primaryButton=
TextActiveColor: var(--fontColorWhite); --primaryButtonTextVisitedColor: va=
r(--fontColorWhite); --primaryButtonBorder: var(--buttonBorderLingdys); --p=
rimaryButtonBorderHover: var(--buttonBorderLingdysHover); --primaryButtonBo=
rderRadius: var(--buttonRoundness); --primaryButtonIconFillColor: var(--whi=
te); --altButtonBackgroundColor: var(--altColor); --altButtonBackgroundHove=
rColor: var(--altColorHover); --altButtonBackgroundActiveColor: var(--altCo=
lorActive); --altButtonTextColor: var(--fontColorWhite); --altButtonTextHov=
erColor: var(--fontColorWhite); --altButtonTextActiveColor: var(--fontColor=
White); --altButtonTextVisitedColor: var(--fontColorWhite); --altButtonBord=
er: var(--altButtonBorder); --altButtonBorderHover: var(--altButtonBorderCo=
lorHover); --altButtonBorderRadius: var(--buttonRoundness); --altButtonIcon=
FillColor: var(--white); --uniloginBackgroundColor: #F2F9FF; --uniloginWind=
owBackgroundColor: var(--themeColorPrimary); }

.th-aw { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--primaryColorClaroNavy); --themeColorSecondary: var(--secondaryColor); --=
buttonBackgroundColor: var(--defaultColor); --buttonBackgroundHoverColor: v=
ar(--defaultColorHover); --buttonBackgroundActiveColor: var(--defaultColorA=
ctive); --buttonTextColor: var(--fontColorDark); --buttonTextHoverColor: va=
r(--fontColorDark); --buttonTextActiveColor: var(--fontColorDark); --button=
TextVisitedColor: var(--fontColorDark); --buttonBorder: var(--buttonBorder)=
; --buttonBorderHover: var(--buttonBorderColorHover); --buttonBorderRadius:=
 var(--buttonRoundness); --buttonBorderIconFillColor: var(--black); --prima=
ryButtonBackgroundColor: var(--primaryColorAppWriter); --primaryButtonBackg=
roundHoverColor: var(--primaryColorAppWriterHover); --primaryButtonBackgrou=
ndActiveColor: var(--primaryColorAppWriterActive); --primaryButtonBorderAct=
ive: var(--buttonBorderAppWriterActive); --primaryButtonTextColor: var(--fo=
ntColorWhite); --primaryButtonTextHoverColor: var(--fontColorWhite); --prim=
aryButtonTextActiveColor: var(--fontColorWhite); --primaryButtonTextVisited=
Color: var(--fontColorWhite); --primaryButtonBorder: var(--buttonBorderAppW=
riter); --primaryButtonBorderHover: var(--buttonBorderAppWriterHover); --pr=
imaryButtonBorderRadius: var(--buttonRoundness); --primaryButtonIconFillCol=
or: var(--white); --altButtonBackgroundColor: var(--altColor); --altButtonB=
ackgroundHoverColor: var(--altColorHover); --altButtonBackgroundActiveColor=
: var(--altColorActive); --altButtonTextColor: var(--fontColorWhite); --alt=
ButtonTextHoverColor: var(--fontColorWhite); --altButtonTextActiveColor: va=
r(--fontColorWhite); --altButtonTextVisitedColor: var(--fontColorWhite); --=
altButtonBorder: var(--altButtonBorder); --altButtonBorderHover: var(--altB=
uttonBorderColorHover); --altButtonBorderRadius: var(--buttonRoundness); --=
altButtonIconFillColor: var(--white); --uniloginBackgroundColor: #F7F7F7; -=
-uniloginWindowBackgroundColor: var(--primaryColorAppWriter); }

.dark-mode { --toolbarBackgroundColor: var(--th-slate-dark); --toolbarButto=
nBackgroundColor: var(--th-slate-dark); --toolbarButtonBackgroundHoverColor=
: var(--icon-button-background-hover-color-dark); --toolbarButtonBackground=
ActiveColor: var(--icon-button-background-active-color-dark); --toolbarButt=
onBorderActive: var(--buttonBorderPink); --toolbarIconFill: var(--white); -=
-toolbarIconHoverFill: var(--white); --toolbarIconActiveFill: var(--white);=
 --dashboardHeaderBackgroundColor: var(--th-slate-dark); --dashboardSidebar=
BorderTopColor: var(--th-slate); --dashboardSidebarBackgroundColor: var(--t=
h-slate-dark); --dashboardContentBackgroundColor: var(--th-slate); --dashbo=
ardCardBackgroundColor: var(--th-slate-dark); --dashboardCardBackgroundHove=
rColor: var(--th-slate-dark-hover600); --dashboardCardBackgroundActiveColor=
: var(--th-slate-dark-active600); --dashboardCardHighlightColor: var(--bran=
dColorBlue); --dashboardTextColor: var(--th-white); --dashboardTitleTextCol=
or: var(--th-white); --dashboardSubTitleTextColor: var(--th-white); --menuI=
conFillColor: var(--white); --iconButtonBackgroundDefaultColor: var(--icon-=
button-background-default-color-dark); --iconButtonBackgroundHoverColor: va=
r(--icon-button-background-hover-color-dark); --iconButtonBackgroundActiveC=
olor: var(--icon-button-background-active-color-dark); --iconButtonBorderCo=
lor: 2px solid transparent; --iconFillColor: var(--white); --buttonLinkText=
Color: var(--white); --buttonLinkIconColor: var(--white); --buttonNoBackgro=
undTextColor: var(--white); --buttonNoBackgroundIconColor: var(--white); --=
buttonNoBackgroundColor: transparent; --buttonNoBackgroundColorHover: var(-=
-icon-button-background-hover-color-dark); --buttonNoBackgroundColorActive:=
 var(--icon-button-background-active-color-dark); --buttonNoBackgroundBorde=
r: 2px solid transparent; --buttonNoBackgroundBorderHover: 2px solid transp=
arent; --buttonNoBackgroundBorderActive: 2px solid transparent; --panelBack=
groundColor: var(--th-slate); --panelBackgroundColorLight: var(--th-slate-l=
ight); --panelBackgroundColorDark: var(--th-slate-dark); --fontColor: var(-=
-textColorLight); --borderColor: 1px solid var(--th-slate-light); --infoBac=
kgroundColor: var(--notificationDarkModeBackground); --successBackgroundCol=
or: var(--notificationDarkModeBackground); --errorBackgroundColor: var(--no=
tificationDarkModeBackground); --warningBackgroundColor: var(--notification=
DarkModeBackground); --infoBorderColor: var(--notificationDarkModeBorder); =
--successBorderColor: var(--notificationDarkModeBorder); --errorBorderColor=
: var(--notificationDarkModeBorder); --warningBorderColor: var(--notificati=
onDarkModeBorder); --infoWarningColor: #fff; --successWarningColor: #fff; -=
-errorWarningColor: #fff; --warningWarningColor: #fff; --infoTitleColor: #f=
ff; --successTitleColor: #fff; --errorTitleColor: #fff; --warningTitleColor=
: #fff; --accordionBackgroundColor: var(--th-slate-dark); --accordionTextCo=
lor: #fff; --accordionTextBottomColor: #f5f5f5; --accordionIconColor: var(-=
-toolbarWhite); --accordionBackgroundColorHover: var(--th-slate-dark-hover6=
00); --tableBackgroundColor: var(--th-slate); --tableBackgroundHeaderColor:=
 var(--th-slate-alt); --tableBackgroundAltColor: var(--th-slate-alt); --tab=
leBackgroundHoverColor: var(--th-slate-hover); --tableBorderColor: var(--th=
-slate-dark); --tableTextColor: #fff; --ListGroupSearchItemColor: var(--th-=
slate-dark); --ListGroupSearchItemColorHover: var(--th-slate-dark-hover800)=
; --ListGroupSearchItemTextColor: var(--th-white); --ListGroupSearchItemBor=
derColor: rgba(0, 0, 0, 0.225); --ListGroupSearchItemAsideColor: var(--th-s=
late-dark); --ListGroupSearchItemAsideTextColor: #fff; --inputBorder: 1px s=
olid var(--th-slate); --inputTextColor: var( --th-white); --inputBackground=
Color: var(--th-cool-grey-800); --modalHeaderBackgroundColor: var(--th-cool=
-grey-800); --modalContentBackgroundColor: var(--th-cool-grey-700); --modal=
ContentBorderColorHeader: var(--th-cool-grey-700); --modalContentBorderColo=
rFooter: var(--th-cool-grey-700); --modalTextColor: var(--th-white); --sett=
ingsDialogBackgroundColor: var(--th-cool-grey-700); --settingsDialogMenuBac=
kgroundColor: var(--th-cool-grey-800); --settingsDialogItemSelectedBackgrou=
ndColor: var(--th-slate-dark); --settingsDialogItemBackgroundColorHover: va=
r(--th-cool-grey-700); --settingsDialogItemBackgroundColorActive: var(--th-=
cool-grey-600); --settingsTitleColor: #fff; --selectBorder: 1px solid var( =
--slate-light); --selectBackgroundColor: var( --th-slate); --selectBackgrou=
ndColorHover: rgba(255, 255, 255, 0.146); --selectBackgroundColorActive: rg=
ba(255, 255, 255, 0.221); --listGroupBackgroundColor: transparent; --listGr=
oupItemTextColor: var(--th-white); --listGroupItemBackgroundColor: var(--th=
-cool-grey-800); --listGroupItemActionsBackgroundColor: var(--th-cool-grey-=
850); --listGroupItemBackgroundColorHover: var(--th-cool-grey-700); --listG=
roupItemBackgroundColorActive: var(--th-cool-grey-600); --listGroupItemIcon=
Color: var(--th-white); --listGroupItemArrowColor: var(--th-cool-grey-800);=
 }

.dark-mode.th-rw { --toolbarIconActiveFill: var(--white); --toolbarIconTogg=
ledHoverFill: var(--brandColorPurple); --toolbarIconToggleFill: var(--brand=
ColorPurple); --toolbarIconToggleHoverFill: var(--brandColorPurple); }

.dark-mode.th-pr { --toolbarButtonBackgroundHoverColor: var(--primaryColorB=
lue); --toolbarButtonBackgroundActiveColor: var(--primaryColorBlueHover); -=
-toolbarButtonBorderActive: var(--buttonBorderBlueActive); --toolbarIconTog=
gleFill: var(--iconToggleFillOrbitNote); --textColor: var(--textColorLight)=
; --cardIconFillColor: var(--brandColorBlue); --primaryButtonBackgroundColo=
r: var(--primaryColor); --primaryButtonBackgroundHoverColor: var(--primaryC=
olorHover); --primaryButtonBackgroundActiveColor: var(--primaryColorActive)=
; --primaryButtonBorderActive: var(--primaryButtonBorderActive); --primaryB=
uttonBorder: var(--primaryButtonBorder); --primaryButtonBorderHover: var(--=
primaryButtonBorderHover); --dashboardTopColor: var(--primaryColorBlue); --=
dashboardTitleColor: var(--themeColorEquatio); --dashboardPaneBackgroundCol=
or: var(--th-slate-dark); --dashboardPaneBorderColor: var(--th-slate-dark);=
 --dashboardPaneDashedBorderColor: var(--dashboardDashedBorderDark); --list=
GroupItemBackgroundColor: var(--th-slate-dark); --listGroupItemBackgroundCo=
lorHover: var(--th-slate-dark-hover800); --listGroupItemBackgroundColorActi=
ve: var(--th-slate-dark-active800); --listGroupTileBackgroundColorActive: v=
ar(--th-slate-dark-active800); --list-item-hover: var(--listGroupItemBackgr=
oundColorHover); }

.dark-mode.th-rd { --toolbarIconToggledHoverFill: var(--brandColorBlue); --=
toolbarIconToggleFill: var(--brandColorBlue); --toolbarIconToggleHoverFill:=
 var(--brandColorBlue); --dashboardTopColor: var(--th-slate); --dashboardCa=
rdAuditorColor: var(--primaryColorBlue); --dashboardCardAuditorLabelColor: =
var(--th-grey); --dashboardCardEditorColor: var(--reachDeckEditorColor); --=
dashboardCardEditorLabelColor: var(--th-grey); --dashboardCardToolbarColor:=
 var(--primaryColorOrange); --dashboardCardToolbarLabelColor: var(--th-grey=
); --dashboardCardBorderColor: var(--th-slate-light); --dashboardCardFooter=
LinkColor: hsl(197, 100%, 50%); --icon-opacity: .9; --cardIconFillColor: va=
r(--th-white); --listGroupItemBackgroundColor: var(--th-slate-dark); --list=
GroupItemBackgroundColorHover: var(--th-slate-dark-hover800); --listGroupIt=
emBackgroundColorActive: var(--th-slate-dark-active800); --listGroupTileBac=
kgroundColorActive: var(--th-slate-dark-active800); --list-item-hover: var(=
--listGroupItemBackgroundColorHover); }

.dark-mode .gw-select { background: url("data:image/svg+xml,<svg xmlns=3D'h=
ttp://www.w3.org/2000/svg' xmlns:xlink=3D'http://www.w3.org/1999/xlink' hei=
ght=3D'22px' width=3D'22px' viewBox=3D'0 0 18 18'>%3Cpath d=3D'M7.41 7.84L1=
2 12.42l4.59-4.58L18 9.25l-6 6-6-6z' fill=3D'%23fff'/%3E%3Cpath d=3D'M0-.75=
h24v24H0z' fill=3D'none'/%3E</svg>") right 0.9em top 40% / 1.3em no-repeat,=
 0px 0px / 100% repeat transparent; border: 1px solid rgb(255, 255, 255); c=
olor: rgb(255, 255, 255); }

.dark-mode .gw-select > option { background: rgb(67, 78, 101); }

@media (prefers-color-scheme: dark) {
  :root .day.dark-scheme { background: rgb(51, 51, 51); color: white; }
  :root .night.dark-scheme { background: black; color: rgb(221, 221, 221); =
}
}

@media (prefers-color-scheme: light) {
  :root .day.light-scheme { background: white; color: rgb(85, 85, 85); }
  :root .night.light-scheme { background: rgb(238, 238, 238); color: black;=
 }
}

.th-rw { --listGroupItemBackgroundColorActive: white; --squareButtonBackgro=
undHover: #f5f5f5; --squareButtonIconFillColor: rgb(36, 42, 56); --squareBu=
ttonActiveBackGroundColor: #EFEFEF; --squareButtonIconTickColor: #506C7E; }

.dark-mode { --listGroupItemBackgroundColorFocus: rgb(63, 79, 90); --modalT=
extColorFocus: white; --listGroupItemBackgroundColorActive: rgb(36, 45, 51)=
; --modalTextColorActive: white; --squareButtonBackgroundHover: rgb(56, 71,=
 81); --squareButtonIconFillColor: white; --squareButtonActiveBackGroundCol=
or: #24323E; --squareButtonIconTickColor: #FFF; }

.dark-mode.th-rw { --toolbarIconButtonFillColor: var(--white); }

.gw-toolbar--s1 { --fontSize: 5px; }

.gw-toolbar--s2 { --fontSize: 10px; }

.gw-toolbar--s3 { --fontSize: 15px; }

.gw-toolbar--s4 { --fontSize: 20px; }

.gw-listitem-fontsize-s10 { --gw-listitem-fontsize: 10px !important; }

.gw-listitem-fontsize-s11 { --gw-listitem-fontsize: 11px !important; }

.gw-listitem-fontsize-s12 { --gw-listitem-fontsize: 12px !important; }

.gw-listitem-fontsize-s13 { --gw-listitem-fontsize: 13px !important; }

.gw-listitem-fontsize-s14 { --gw-listitem-fontsize: 14px !important; }

.gw-listitem-fontsize-s15 { --gw-listitem-fontsize: 15px !important; }

.gw-listitem-fontsize-s16 { --gw-listitem-fontsize: 16px !important; }

.gw-listitem-fontsize-s17 { --gw-listitem-fontsize: 17px !important; }

.gw-listitem-fontsize-s18 { --gw-listitem-fontsize: 18px !important; }

.gw-listitem-fontsize-s19 { --gw-listitem-fontsize: 19px !important; }

.gw-listitem-fontsize-s20 { --gw-listitem-fontsize: 20px !important; }

.gw-listitem-fontsize-s21 { --gw-listitem-fontsize: 21px !important; }

.gw-listitem-fontsize-s22 { --gw-listitem-fontsize: 22px !important; }

.gw-listitem-fontsize-s23 { --gw-listitem-fontsize: 23px !important; }

.gw-listitem-fontsize-s24 { --gw-listitem-fontsize: 24px !important; }

:root { --fontSize: 10px; }

.gw-info { --notification-bg-color: var(--infoBackgroundColor); --notificat=
ion-border-color: var(--infoBorderColor); --notification-color: var(--infoT=
itleColor); }

.gw-success { --notification-bg-color: var(--successBackgroundColor); --not=
ification-border-color: var(--successBorderColor); --notification-color: va=
r(--successTitleColor); }

.gw-error { --notification-bg-color: var(--errorBackgroundColor); --notific=
ation-border-color: var(--errorBorderColor); --notification-color: var(--er=
rorTitleColor); }

.gw-warning { --notification-bg-color: var(--warningBackgroundColor); --not=
ification-border-color: var(--warningBorderColor); --notification-color: va=
r(--warningTitleColor); }

.th-rw { --toolbarIconToggleFill: var(--primaryColorPurple); --toolbarIconT=
oggleHoverFill: var(--primaryColorPurple); }

.gw-toolbar--undocked { --toolbarWidth: fit-content; --toolbarDisplay: bloc=
k; --toolbarPosition: fixed; }

.gw-ul--small { --liWidth: 150px; }

.gw-ul--medium { --liWidth: 300px; }

.gw-ul--large { --liWidth: 450px; }
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-eead78e1-2fb6-4ed8-87ef-7ee758160547@mhtml.blink

@charset "utf-8";
=0A
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static.canva.com/web/a0684b0780c739e9.vendor.ltr.css

@charset "utf-8";

.ql-container { box-sizing: border-box; font-family: Helvetica, Arial, sans=
-serif; font-size: 13px; height: 100%; margin: 0px; position: relative; }

.ql-container.ql-disabled .ql-tooltip { visibility: hidden; }

.ql-container:not(.ql-disabled) li[data-list=3D"checked"] > .ql-ui, .ql-con=
tainer:not(.ql-disabled) li[data-list=3D"unchecked"] > .ql-ui { cursor: poi=
nter; }

.ql-clipboard { height: 1px; left: -100000px; overflow-y: hidden; position:=
 absolute; top: 50%; }

.ql-clipboard p { margin: 0px; padding: 0px; }

.ql-editor { overflow-wrap: break-word; box-sizing: border-box; counter-res=
et: list-0 0 list-1 0 list-2 0 list-3 0 list-4 0 list-5 0 list-6 0 list-7 0=
 list-8 0 list-9 0; height: 100%; line-height: 1.42; outline: none; overflo=
w-y: auto; padding: 12px 15px; tab-size: 4; text-align: left; white-space: =
pre-wrap; }

.ql-editor > * { cursor: text; }

.ql-editor blockquote, .ql-editor h1, .ql-editor h2, .ql-editor h3, .ql-edi=
tor h4, .ql-editor h5, .ql-editor h6, .ql-editor ol, .ql-editor p, .ql-edit=
or pre { margin: 0px; padding: 0px; }

@supports (counter-set:none) {
  .ql-editor h1, .ql-editor h2, .ql-editor h3, .ql-editor h4, .ql-editor h5=
, .ql-editor h6, .ql-editor p { counter-set: list-0 0 list-1 0 list-2 0 lis=
t-3 0 list-4 0 list-5 0 list-6 0 list-7 0 list-8 0 list-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor h1, .ql-editor h2, .ql-editor h3, .ql-editor h4, .ql-editor h5=
, .ql-editor h6, .ql-editor p { counter-reset: list-0 0 list-1 0 list-2 0 l=
ist-3 0 list-4 0 list-5 0 list-6 0 list-7 0 list-8 0 list-9 0; }
}

.ql-editor table { border-collapse: collapse; }

.ql-editor td { border: 1px solid rgb(0, 0, 0); padding: 2px 5px; }

.ql-editor li, .ql-editor ol { padding-left: 1.5em; }

.ql-editor li { list-style-type: none; position: relative; }

.ql-editor li > .ql-ui::before { display: inline-block; margin-left: -1.5em=
; margin-right: 0.3em; text-align: right; white-space: nowrap; width: 1.2em=
; }

@supports (display:contents) {
  .ql-editor li[data-list=3D"bullet"] > .ql-ui, .ql-editor li[data-list=3D"=
ordered"] > .ql-ui { display: contents; }
}

.ql-editor li[data-list=3D"checked"] > .ql-ui, .ql-editor li[data-list=3D"u=
nchecked"] > .ql-ui { color: rgb(119, 119, 119); }

.ql-editor li[data-list=3D"bullet"] > .ql-ui::before { content: "=E2=80=A2"=
; }

.ql-editor li[data-list=3D"checked"] > .ql-ui::before { content: "=E2=98=91=
"; }

.ql-editor li[data-list=3D"unchecked"] > .ql-ui::before { content: "=E2=98=
=90"; }

@supports (counter-set:none) {
  .ql-editor li[data-list] { counter-set: list-1 0 list-2 0 list-3 0 list-4=
 0 list-5 0 list-6 0 list-7 0 list-8 0 list-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor li[data-list] { counter-reset: list-1 0 list-2 0 list-3 0 list=
-4 0 list-5 0 list-6 0 list-7 0 list-8 0 list-9 0; }
}

.ql-editor li[data-list=3D"ordered"] { counter-increment: list-0 1; }

.ql-editor li[data-list=3D"ordered"] > .ql-ui::before { content: counter(li=
st-0) ". "; }

.ql-editor li[data-list=3D"ordered"].ql-indent-1 { counter-increment: list-=
1 1; }

.ql-editor li[data-list=3D"ordered"].ql-indent-1 > .ql-ui::before { content=
: counter(list-1, lower-alpha) ". "; }

@supports (counter-set:none) {
  .ql-editor li[data-list].ql-indent-1 { counter-set: list-2 0 list-3 0 lis=
t-4 0 list-5 0 list-6 0 list-7 0 list-8 0 list-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor li[data-list].ql-indent-1 { counter-reset: list-2 0 list-3 0 l=
ist-4 0 list-5 0 list-6 0 list-7 0 list-8 0 list-9 0; }
}

.ql-editor li[data-list=3D"ordered"].ql-indent-2 { counter-increment: list-=
2 1; }

.ql-editor li[data-list=3D"ordered"].ql-indent-2 > .ql-ui::before { content=
: counter(list-2, lower-roman) ". "; }

@supports (counter-set:none) {
  .ql-editor li[data-list].ql-indent-2 { counter-set: list-3 0 list-4 0 lis=
t-5 0 list-6 0 list-7 0 list-8 0 list-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor li[data-list].ql-indent-2 { counter-reset: list-3 0 list-4 0 l=
ist-5 0 list-6 0 list-7 0 list-8 0 list-9 0; }
}

.ql-editor li[data-list=3D"ordered"].ql-indent-3 { counter-increment: list-=
3 1; }

.ql-editor li[data-list=3D"ordered"].ql-indent-3 > .ql-ui::before { content=
: counter(list-3) ". "; }

@supports (counter-set:none) {
  .ql-editor li[data-list].ql-indent-3 { counter-set: list-4 0 list-5 0 lis=
t-6 0 list-7 0 list-8 0 list-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor li[data-list].ql-indent-3 { counter-reset: list-4 0 list-5 0 l=
ist-6 0 list-7 0 list-8 0 list-9 0; }
}

.ql-editor li[data-list=3D"ordered"].ql-indent-4 { counter-increment: list-=
4 1; }

.ql-editor li[data-list=3D"ordered"].ql-indent-4 > .ql-ui::before { content=
: counter(list-4, lower-alpha) ". "; }

@supports (counter-set:none) {
  .ql-editor li[data-list].ql-indent-4 { counter-set: list-5 0 list-6 0 lis=
t-7 0 list-8 0 list-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor li[data-list].ql-indent-4 { counter-reset: list-5 0 list-6 0 l=
ist-7 0 list-8 0 list-9 0; }
}

.ql-editor li[data-list=3D"ordered"].ql-indent-5 { counter-increment: list-=
5 1; }

.ql-editor li[data-list=3D"ordered"].ql-indent-5 > .ql-ui::before { content=
: counter(list-5, lower-roman) ". "; }

@supports (counter-set:none) {
  .ql-editor li[data-list].ql-indent-5 { counter-set: list-6 0 list-7 0 lis=
t-8 0 list-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor li[data-list].ql-indent-5 { counter-reset: list-6 0 list-7 0 l=
ist-8 0 list-9 0; }
}

.ql-editor li[data-list=3D"ordered"].ql-indent-6 { counter-increment: list-=
6 1; }

.ql-editor li[data-list=3D"ordered"].ql-indent-6 > .ql-ui::before { content=
: counter(list-6) ". "; }

@supports (counter-set:none) {
  .ql-editor li[data-list].ql-indent-6 { counter-set: list-7 0 list-8 0 lis=
t-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor li[data-list].ql-indent-6 { counter-reset: list-7 0 list-8 0 l=
ist-9 0; }
}

.ql-editor li[data-list=3D"ordered"].ql-indent-7 { counter-increment: list-=
7 1; }

.ql-editor li[data-list=3D"ordered"].ql-indent-7 > .ql-ui::before { content=
: counter(list-7, lower-alpha) ". "; }

@supports (counter-set:none) {
  .ql-editor li[data-list].ql-indent-7 { counter-set: list-8 0 list-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor li[data-list].ql-indent-7 { counter-reset: list-8 0 list-9 0; =
}
}

.ql-editor li[data-list=3D"ordered"].ql-indent-8 { counter-increment: list-=
8 1; }

.ql-editor li[data-list=3D"ordered"].ql-indent-8 > .ql-ui::before { content=
: counter(list-8, lower-roman) ". "; }

@supports (counter-set:none) {
  .ql-editor li[data-list].ql-indent-8 { counter-set: list-9 0; }
}

@supports not (counter-set:none) {
  .ql-editor li[data-list].ql-indent-8 { counter-reset: list-9 0; }
}

.ql-editor li[data-list=3D"ordered"].ql-indent-9 { counter-increment: list-=
9 1; }

.ql-editor li[data-list=3D"ordered"].ql-indent-9 > .ql-ui::before { content=
: counter(list-9) ". "; }

.ql-editor .ql-indent-1:not(.ql-direction-rtl) { padding-left: 3em; }

.ql-editor li.ql-indent-1:not(.ql-direction-rtl) { padding-left: 4.5em; }

.ql-editor .ql-indent-1.ql-direction-rtl.ql-align-right { padding-right: 3e=
m; }

.ql-editor li.ql-indent-1.ql-direction-rtl.ql-align-right { padding-right: =
4.5em; }

.ql-editor .ql-indent-2:not(.ql-direction-rtl) { padding-left: 6em; }

.ql-editor li.ql-indent-2:not(.ql-direction-rtl) { padding-left: 7.5em; }

.ql-editor .ql-indent-2.ql-direction-rtl.ql-align-right { padding-right: 6e=
m; }

.ql-editor li.ql-indent-2.ql-direction-rtl.ql-align-right { padding-right: =
7.5em; }

.ql-editor .ql-indent-3:not(.ql-direction-rtl) { padding-left: 9em; }

.ql-editor li.ql-indent-3:not(.ql-direction-rtl) { padding-left: 10.5em; }

.ql-editor .ql-indent-3.ql-direction-rtl.ql-align-right { padding-right: 9e=
m; }

.ql-editor li.ql-indent-3.ql-direction-rtl.ql-align-right { padding-right: =
10.5em; }

.ql-editor .ql-indent-4:not(.ql-direction-rtl) { padding-left: 12em; }

.ql-editor li.ql-indent-4:not(.ql-direction-rtl) { padding-left: 13.5em; }

.ql-editor .ql-indent-4.ql-direction-rtl.ql-align-right { padding-right: 12=
em; }

.ql-editor li.ql-indent-4.ql-direction-rtl.ql-align-right { padding-right: =
13.5em; }

.ql-editor .ql-indent-5:not(.ql-direction-rtl) { padding-left: 15em; }

.ql-editor li.ql-indent-5:not(.ql-direction-rtl) { padding-left: 16.5em; }

.ql-editor .ql-indent-5.ql-direction-rtl.ql-align-right { padding-right: 15=
em; }

.ql-editor li.ql-indent-5.ql-direction-rtl.ql-align-right { padding-right: =
16.5em; }

.ql-editor .ql-indent-6:not(.ql-direction-rtl) { padding-left: 18em; }

.ql-editor li.ql-indent-6:not(.ql-direction-rtl) { padding-left: 19.5em; }

.ql-editor .ql-indent-6.ql-direction-rtl.ql-align-right { padding-right: 18=
em; }

.ql-editor li.ql-indent-6.ql-direction-rtl.ql-align-right { padding-right: =
19.5em; }

.ql-editor .ql-indent-7:not(.ql-direction-rtl) { padding-left: 21em; }

.ql-editor li.ql-indent-7:not(.ql-direction-rtl) { padding-left: 22.5em; }

.ql-editor .ql-indent-7.ql-direction-rtl.ql-align-right { padding-right: 21=
em; }

.ql-editor li.ql-indent-7.ql-direction-rtl.ql-align-right { padding-right: =
22.5em; }

.ql-editor .ql-indent-8:not(.ql-direction-rtl) { padding-left: 24em; }

.ql-editor li.ql-indent-8:not(.ql-direction-rtl) { padding-left: 25.5em; }

.ql-editor .ql-indent-8.ql-direction-rtl.ql-align-right { padding-right: 24=
em; }

.ql-editor li.ql-indent-8.ql-direction-rtl.ql-align-right { padding-right: =
25.5em; }

.ql-editor .ql-indent-9:not(.ql-direction-rtl) { padding-left: 27em; }

.ql-editor li.ql-indent-9:not(.ql-direction-rtl) { padding-left: 28.5em; }

.ql-editor .ql-indent-9.ql-direction-rtl.ql-align-right { padding-right: 27=
em; }

.ql-editor li.ql-indent-9.ql-direction-rtl.ql-align-right { padding-right: =
28.5em; }

.ql-editor li.ql-direction-rtl { padding-right: 1.5em; }

.ql-editor li.ql-direction-rtl > .ql-ui::before { margin-left: 0.3em; margi=
n-right: -1.5em; text-align: left; }

.ql-editor table { table-layout: fixed; width: 100%; }

.ql-editor table td { outline: none; }

.ql-editor .ql-code-block-container { font-family: monospace; }

.ql-editor .ql-video { display: block; max-width: 100%; }

.ql-editor .ql-video.ql-align-center { margin: 0px auto; }

.ql-editor .ql-video.ql-align-right { margin: 0px 0px 0px auto; }

.ql-editor .ql-bg-black { background-color: rgb(0, 0, 0); }

.ql-editor .ql-bg-red { background-color: rgb(230, 0, 0); }

.ql-editor .ql-bg-orange { background-color: rgb(255, 153, 0); }

.ql-editor .ql-bg-yellow { background-color: rgb(255, 255, 0); }

.ql-editor .ql-bg-green { background-color: rgb(0, 138, 0); }

.ql-editor .ql-bg-blue { background-color: rgb(0, 102, 204); }

.ql-editor .ql-bg-purple { background-color: rgb(153, 51, 255); }

.ql-editor .ql-color-white { color: rgb(255, 255, 255); }

.ql-editor .ql-color-red { color: rgb(230, 0, 0); }

.ql-editor .ql-color-orange { color: rgb(255, 153, 0); }

.ql-editor .ql-color-yellow { color: rgb(255, 255, 0); }

.ql-editor .ql-color-green { color: rgb(0, 138, 0); }

.ql-editor .ql-color-blue { color: rgb(0, 102, 204); }

.ql-editor .ql-color-purple { color: rgb(153, 51, 255); }

.ql-editor .ql-font-serif { font-family: Georgia, "Times New Roman", serif;=
 }

.ql-editor .ql-font-monospace { font-family: Monaco, "Courier New", monospa=
ce; }

.ql-editor .ql-size-small { font-size: 0.75em; }

.ql-editor .ql-size-large { font-size: 1.5em; }

.ql-editor .ql-size-huge { font-size: 2.5em; }

.ql-editor .ql-direction-rtl { direction: rtl; text-align: inherit; }

.ql-editor .ql-align-center { text-align: center; }

.ql-editor .ql-align-justify { text-align: justify; }

.ql-editor .ql-align-right { text-align: right; }

.ql-editor .ql-ui { position: absolute; }

.ql-editor.ql-blank::before { color: rgba(0, 0, 0, 0.6); content: attr(data=
-placeholder); font-style: italic; left: 15px; pointer-events: none; positi=
on: absolute; right: 15px; }
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static.canva.com/web/9d2f901a0442100f.ltr.css

@charset "utf-8";

._94P4tA { outline: none; }

.theme { color-scheme: var(--4h-m_A); }

.light { --4h-m_A: light; --Zpa-KA: #00c4cc; --eGVbng: #8b3dff; --M5_pvA: #=
7731d8; --boKKWg: #612dae; --oqurdw: rgba(64,87,109,.07); --d1p99w: #fff; -=
-17LfHw: rgba(36,49,61,.4); --EgWgfg: rgba(13,18,22,0); --X3--Zg: rgba(64,8=
7,109,.07); --xfy86Q: rgba(57,76,96,.15); --p53f_Q: rgba(13,18,22,0); --REc=
Y5g: #0d1216; --XajtPQ: rgba(36,49,61,.4); --FVk7Ew: rgba(165,112,255,.15);=
 --2-zmYA: rgba(165,112,255,.15); --ySYdsQ: rgba(165,112,255,.2); --aMXh3A:=
 rgba(64,87,109,.07); --_RN1Dg: #612dae; --8fGzbw: rgba(36,49,61,.4); --ob8=
tTA: rgba(13,18,22,0); --MghLXQ: rgba(64,87,109,.07); --3R4u8w: rgba(57,76,=
96,.15); --TwiLcg: rgba(13,18,22,0); --QeQ0Dw: #0d1216; --TZOI7A: rgba(36,4=
9,61,.4); --SZMkXA: rgba(165,112,255,.15); --1zesEA: rgba(165,112,255,.15);=
 --AMxRgw: rgba(165,112,255,.2); --BZ60Jw: rgba(64,87,109,.07); --8Ex5gA: #=
612dae; --spIP2A: rgba(36,49,61,.4); --KtXlRg: rgba(17,23,29,.6); --QADODw:=
 rgba(13,18,22,.7); --kTBxcw: rgba(13,18,22,.86); --HxK_kw: rgba(17,23,29,.=
6); --6u-yJQ: #fff; --J0YKvA: hsla(0,0%,100%,.7); --yrvb-A: rgba(57,76,96,.=
15); --nwNs8w: rgba(43,59,74,.3); ---tf09g: rgba(57,76,96,.15); --x0GzuQ: r=
gba(57,76,96,.15); --VfoYEg: #fff; --nbAwww: hsla(0,0%,100%,.5); --Shm3YQ: =
rgba(64,87,109,.07); --z7Xq7A: rgba(57,76,96,.15); --m9sa8w: rgba(53,71,90,=
.2); --aj4L_w: rgba(64,87,109,.07); --pj2xMA: #0d1216; --3YOFOw: rgba(36,49=
,61,.4); --c23L8g: #8b3dff; --scq9vQ: #e7dbff; --feCw5g: #fff; --FMoRFg: #0=
d1216; --7psRVw: #008008; --QVtuYg: #36a137; --71VQUQ: #096d11; --Lf8mkA: r=
gba(64,87,109,.07); --Ii7YFw: #c3eac4; --W6KtsA: #fff; --WCLNrQ: #0d1216; -=
-Unijpw: rgba(36,49,61,.4); --DXueYw: #1962ff; --3KQj6A: #3d8bff; --Czi__Q:=
 #1855d8; ---vsWXQ: rgba(64,87,109,.07); --pYULlw: #cce1ff; --MjnIDA: #fff;=
 --v7HVIg: #0d1216; --vD3B3g: rgba(36,49,61,.4); --23ZOVQ: #ad5a00; --VbVKH=
g: #d17600; --zvQOHA: #944f05; --21KaLA: rgba(64,87,109,.07); --ydZUSA: #ff=
d9ad; --5uESMg: #fff; --OQ2gpA: #0d1216; --87SmIg: rgba(36,49,61,.4); --jTT=
_jQ: #db142c; --2hPbag: #fd4958; --nRrzRQ: #b61629; ---Xfh1Q: rgba(64,87,10=
9,.07); --1MO0IQ: #ffd6d8; --eLjurg: #fff; --fs4QpA: #0d1216; ---Evg2A: rgb=
a(36,49,61,.4); --Tp54Vw: #f0f1f5; --pf_JRQ: rgba(240,241,245,.7); --ys5XGg=
: rgba(240,241,245,0); --dVucJw: #f6f7f8; --u6VULg: rgba(246,247,248,.7); -=
-cm5OeQ: rgba(246,247,248,0); --C-q6Ig: #fff; --Pj6GZQ: hsla(0,0%,100%,.7);=
 --r6MHXQ: hsla(0,0%,100%,0); --4RaSjg: #fff; --F6F2NQ: hsla(0,0%,100%,.7);=
 --389KIw: hsla(0,0%,100%,0); --VNXpSw: #0d1216; --5F8MFw: rgba(13,18,22,.8=
6); --JEAqPw: rgba(13,18,22,.7); --3V_biw: rgba(17,23,29,.6); --P69qRQ: #00=
8008; --fg0S1Q: #1962ff; --MRX9rw: #ad5a00; --bk41Zw: #db142c; --kTTJvw: #b=
61629; --llP47A: #db142c; ---8UyGw: #8b3dff; ---1ShxA: #7731d8; --FFgy5g: #=
8b3dff; --Zya5eQ: rgba(53,71,90,.2); --9_Lxmw: rgba(28,39,48,.5); --xAYPzA:=
 #8b3dff; --VjFOWQ: rgba(57,76,96,.15); --nOtbOg: #db142c; --OuCkCQ: rgba(5=
7,76,96,.15); ---UopgA: rgba(28,39,48,.5); --620Maw: var(--Zya5eQ); --TBPmD=
Q: var(--xAYPzA); --UzSy6g: var(--VjFOWQ); --olfr3Q: rgba(28,39,48,.5); }

.dark { --4h-m_A: dark; --Zpa-KA: #00c4cc; --eGVbng: #8b3dff; --M5_pvA: #77=
31d8; --boKKWg: #612dae; --oqurdw: hsla(0,0%,100%,.07); --d1p99w: #fff; --1=
7LfHw: hsla(0,0%,100%,.4); --EgWgfg: hsla(0,0%,100%,0); --X3--Zg: hsla(0,0%=
,100%,.07); --xfy86Q: hsla(0,0%,100%,.15); --p53f_Q: hsla(0,0%,100%,0); --R=
EcY5g: #fff; --XajtPQ: hsla(0,0%,100%,.4); --FVk7Ew: rgba(165,112,255,.3); =
--2-zmYA: rgba(165,112,255,.3); --ySYdsQ: rgba(165,112,255,.2); --aMXh3A: h=
sla(0,0%,100%,.15); --_RN1Dg: #fff; --8fGzbw: hsla(0,0%,100%,.4); --ob8tTA:=
 hsla(0,0%,100%,0); --MghLXQ: hsla(0,0%,100%,.07); --3R4u8w: hsla(0,0%,100%=
,.15); --TwiLcg: hsla(0,0%,100%,0); --QeQ0Dw: #fff; --TZOI7A: hsla(0,0%,100=
%,.4); --SZMkXA: rgba(165,112,255,.3); --1zesEA: rgba(165,112,255,.3); --AM=
xRgw: rgba(165,112,255,.2); --BZ60Jw: hsla(0,0%,100%,.15); --8Ex5gA: #fff; =
--spIP2A: hsla(0,0%,100%,.4); --KtXlRg: rgba(17,23,29,.6); --QADODw: rgba(1=
3,18,22,.7); --kTBxcw: rgba(13,18,22,.86); --HxK_kw: rgba(17,23,29,.6); --6=
u-yJQ: #fff; --J0YKvA: hsla(0,0%,100%,.4); --yrvb-A: hsla(0,0%,100%,.15); -=
-nwNs8w: hsla(0,0%,100%,.3); ---tf09g: hsla(0,0%,100%,.15); --x0GzuQ: hsla(=
0,0%,100%,.15); --VfoYEg: #fff; --nbAwww: hsla(0,0%,100%,.4); --Shm3YQ: hsl=
a(0,0%,100%,.07); --z7Xq7A: hsla(0,0%,100%,.15); --m9sa8w: hsla(0,0%,100%,.=
2); --aj4L_w: hsla(0,0%,100%,.07); --pj2xMA: #fff; --3YOFOw: hsla(0,0%,100%=
,.4); --c23L8g: #8b3dff; --scq9vQ: #4a2e7f; --feCw5g: #fff; --FMoRFg: #fff;=
 --7psRVw: #008008; --QVtuYg: #36a137; --71VQUQ: #096d11; --Lf8mkA: hsla(0,=
0%,100%,.07); --Ii7YFw: #16461a; --W6KtsA: #fff; --WCLNrQ: #fff; --Unijpw: =
hsla(0,0%,100%,.4); --DXueYw: #1962ff; --3KQj6A: #3d8bff; --Czi__Q: #1855d8=
; ---vsWXQ: hsla(0,0%,100%,.07); --pYULlw: #1d3b7c; --MjnIDA: #fff; --v7HVI=
g: #fff; --vD3B3g: hsla(0,0%,100%,.4); --23ZOVQ: #ad5a00; --VbVKHg: #d17600=
; --zvQOHA: #944f05; --21KaLA: hsla(0,0%,100%,.07); --ydZUSA: #563715; --5u=
ESMg: #fff; --OQ2gpA: #fff; --87SmIg: hsla(0,0%,100%,.4); --jTT_jQ: #db142c=
; --2hPbag: #fd4958; --nRrzRQ: #b61629; ---Xfh1Q: hsla(0,0%,100%,.07); --1M=
O0IQ: #721d27; --eLjurg: #fff; --fs4QpA: #fff; ---Evg2A: hsla(0,0%,100%,.4)=
; --Tp54Vw: #0d1216; --pf_JRQ: rgba(13,18,22,.7); --ys5XGg: rgba(13,18,22,0=
); --dVucJw: #18191b; --u6VULg: rgba(24,25,27,.7); --cm5OeQ: rgba(24,25,27,=
0); --C-q6Ig: #18191b; --Pj6GZQ: rgba(24,25,27,.7); --r6MHXQ: rgba(24,25,27=
,0); --4RaSjg: #252627; --F6F2NQ: rgba(37,38,39,.7); --389KIw: rgba(37,38,3=
9,0); --VNXpSw: hsla(0,0%,100%,.9); --5F8MFw: hsla(0,0%,100%,.8); --JEAqPw:=
 hsla(0,0%,100%,.7); --3V_biw: hsla(0,0%,100%,.5); --P69qRQ: #61bd62; --fg0=
S1Q: #6ba9ff; --MRX9rw: #ec9909; --bk41Zw: #fd4958; --kTTJvw: #ff8088; --ll=
P47A: #fd4958; ---8UyGw: #a570ff; ---1ShxA: #bc97fc; --FFgy5g: #a570ff; --Z=
ya5eQ: hsla(0,0%,100%,.2); --9_Lxmw: hsla(0,0%,100%,.5); --xAYPzA: #a570ff;=
 --VjFOWQ: hsla(0,0%,100%,.15); --nOtbOg: #fd4958; --OuCkCQ: hsla(0,0%,100%=
,.15); ---UopgA: hsla(0,0%,100%,.4); --620Maw: var(--Zya5eQ); --TBPmDQ: var=
(--xAYPzA); --UzSy6g: var(--VjFOWQ); --olfr3Q: rgba(28,39,48,.5); }

._5_MXiw, .cD74fQ { position: relative; }

.cD74fQ { z-index: 0; }

._4A33GA { border: 8px solid rgb(255, 255, 255); image-rendering: pixelated=
; width: calc(100% - 16px); }

.dXLCMQ { border: none; width: 100%; }

.Bymw5Q { opacity: 0; overflow: visible; pointer-events: none; position: fi=
xed; width: 100%; }

.Bymw5Q, .XG__3w { box-sizing: border-box; left: 0px; top: 0px; }

.XG__3w { position: absolute; }

.G9PzwQ { display: grid; min-width: fit-content; width: 100%; }

.G9PzwQ, ._5k9jWw { box-sizing: border-box; line-height: 0; }

._5k9jWw { display: inline-grid; min-height: 100%; min-width: 100%; }

.ODPgFw, ._2oKAKQ, .z_CH3w { box-sizing: border-box; line-height: 0; }

.ixP4uQ { height: 100%; }

.ixP4uQ, .vztVyw { width: 100%; }

._3YWZwA, .ixP4uQ, .vztVyw { box-sizing: border-box; line-height: 0; }

._3YWZwA { min-height: 5px; min-width: 5px; }

._pFsfA { clip: rect(1px, 1px, 1px, 1px); border: 0px; height: 1px; left: 0=
px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; top: =
0px; white-space: nowrap; width: 1px; }

.light { --Kd3K9A: #8b3dff; --DVEAGQ: #7630d7; --V0s6Og: #612dae; --PqRKXQ:=
 #fff; --R-jrhg: #0e131800; --GXtk9g: #40576d12; --xGXQgA: #394c6026; --oAd=
upw: #0e1318; --8-4niA: #35475a33; --wd-tZA: #0e131800; --ntzWpQ: #40576d12=
; --BorQ6g: #394c6026; --O8dBuQ: #0e1318; --EvA8JQ: #11171d99; --gIrJLw: #0=
e1318b2; --XxI4hg: #0d1216db; --SvgSpA: #11171d99; --N8Oz5g: #fff; --4zRigw=
: #ffffffb2; --wv7owA: #db142c; --m9I-bA: #b61629; --Hxdoag: #911826; --pxB=
f3A: #fff; --1sn2Sg: #a370fc26; --4HnQxA: #a370fc26; --NRjSsw: #a370fc33; -=
-GviWcg: #4a2e7e; --kl47TA: #8b3dff; --gFgXSg: #40576d12; --wBWOJg: #1c2730=
80; --BVrlVA: #394c6026; --KwfPsg: #0e131800; --p5yS_g: #1c273080; --jz0LSw=
: #008009; --CJur3Q: #fff; --UfNqTg: #c3eac4; --QcueGQ: #133416; --bdtRFA: =
#1a62ff; --YrdGEw: #fff; --_bpjsw: #cce1ff; --x3uTOw: #182c59; --Am6Phw: #a=
d5a00; --X8oIbA: #fff; --G_qVww: #ffd9ad; --HfWZ1A: #3e2a14; --43wRQw: #db1=
42c; --9luNoA: #fff; --qKGzFw: #ffd6d8; --CMMUiA: #501b21; --RzZG4Q: #8b3df=
f; --M8YsdQ: #fff; --xc412Q: #e7dbff; --XZIM8Q: #352459; --6Hmmng: #11171d9=
9; --SxhHZg: #fff; --3ifkTA: #fff; --W1_3nw: #40576d12; --igdHlg: #35475a33=
; --IzK8tQ: #1c273080; --_kLulA: #1c273080; --uHakiw: #8b3dff; --TCEPKw: #3=
94c6026; --BhjlKg: #db142c; --j6I-wg: #8b3dff; --I7Yc2g: #7630d7; --Mm01yw:=
 #612dae; --4sJsqA: #394c6026; --hBXVcA: #fff; --xcCO9w: #1c273080; --Wcghm=
A: #8b3dff; --ezSU3w: #fff; --ooFCBA: #c1c5cd; --8jnd6g: #8b3dff; ---2QwGw:=
 #7630d7; --KgLrHA: #612dae; --jDAtXQ: #1c273080; --FOH6ww: #db142c; --jyDi=
sg: #b61629; --QclmLg: #911826; --VcZbvQ: #0e1318; --UpESEg: #0d1216db; --P=
RQgyw: #0e1318b2; --TJtBjA: #11171d99; --vCqPYw: #008009; --NRkSiw: #db142c=
; --gdRMVA: #1a62ff; --cVPmKw: #ad5a00; --enMi_w: #394c6026; --4DkvNQ: #3d8=
bff; --xwa5zw: #394c6026; --2yga1g: #40576d12; --0ypBAQ: #35475a33; --P1hAv=
A: #24313d66; --1z_vxQ: #24313d66; }

.dark { --Kd3K9A: #8b3dff; --DVEAGQ: #7630d7; --V0s6Og: #612dae; --PqRKXQ: =
#fff; --R-jrhg: #ffffff00; --GXtk9g: #ffffff12; --xGXQgA: #ffffff26; --oAdu=
pw: #fff; --8-4niA: #ffffff33; --wd-tZA: #ffffff00; --ntzWpQ: #ffffff12; --=
BorQ6g: #ffffff26; --O8dBuQ: #fff; --EvA8JQ: #11171d99; --gIrJLw: #0e1318b2=
; --XxI4hg: #0d1216db; --SvgSpA: #11171d99; --N8Oz5g: #fff; --4zRigw: #ffff=
ffb2; --wv7owA: #db142c; --m9I-bA: #b61629; --Hxdoag: #911826; --pxBf3A: #f=
ff; --1sn2Sg: #a370fc4d; --4HnQxA: #a370fc4d; --NRjSsw: #a370fc33; --GviWcg=
: #fff; --kl47TA: #a370fc; --gFgXSg: #ffffff12; --wBWOJg: #ffffff80; --BVrl=
VA: #ffffff26; --KwfPsg: #ffffff00; --p5yS_g: #ffffff80; --jz0LSw: #008009;=
 --CJur3Q: #fff; --UfNqTg: #16461a; --QcueGQ: #fff; --bdtRFA: #1a62ff; --Yr=
dGEw: #fff; --_bpjsw: #1d3b7c; --x3uTOw: #fff; --Am6Phw: #ad5a00; --X8oIbA:=
 #fff; --G_qVww: #563715; --HfWZ1A: #fff; --43wRQw: #db142c; --9luNoA: #fff=
; --qKGzFw: #721d27; --CMMUiA: #fff; --RzZG4Q: #8b3dff; --M8YsdQ: #fff; --x=
c412Q: #4a2e7e; --XZIM8Q: #fff; --6Hmmng: #11171d99; --SxhHZg: #fff; --3ifk=
TA: #0e1318; --W1_3nw: #ffffff12; --igdHlg: #ffffff33; --IzK8tQ: #ffffff80;=
 --_kLulA: #1c273080; --uHakiw: #a370fc; --TCEPKw: #ffffff26; --BhjlKg: #fd=
4958; --j6I-wg: #8b3dff; --I7Yc2g: #7630d7; --Mm01yw: #612dae; --4sJsqA: #f=
fffff26; --hBXVcA: #fff; --xcCO9w: #ffffff80; --WcghmA: #a370fc; --ezSU3w: =
#fff; --ooFCBA: #47494d; --8jnd6g: #a370fc; ---2QwGw: #8b3dff; --KgLrHA: #a=
370fc; --jDAtXQ: #ffffff80; --FOH6ww: #fd4958; --jyDisg: #db142c; --QclmLg:=
 #fd4958; --VcZbvQ: #ffffffe5; --UpESEg: #ffffffcc; --PRQgyw: #ffffffb2; --=
TJtBjA: #ffffff80; --vCqPYw: #36a138; --NRkSiw: #fd4958; --gdRMVA: #3d8bff;=
 --cVPmKw: #d17600; --enMi_w: #ffffff26; --4DkvNQ: #3d8bff; --xwa5zw: #ffff=
ff26; --2yga1g: #ffffff12; --0ypBAQ: #ffffff33; --P1hAvA: #ffffff66; --1z_v=
xQ: #24313d66; }

.dkWypw { align-items: center; box-sizing: border-box; display: inline-flex=
; pointer-events: none; }

.dkWypw::before { content: "=E2=80=8B"; line-height: 1; width: 0px; }

.dkWypw > svg { display: block; height: 100%; width: 100%; }

.R3BUpw { height: calc(var(----lgQg, .1rem)*8*1.5); width: calc(var(----lgQ=
g, .1rem)*8*1.5); }

.uRWxVA { height: calc(var(----lgQg, .1rem)*8*2); width: calc(var(----lgQg,=
 .1rem)*8*2); }

.NA_Img { height: calc(var(----lgQg, .1rem)*8*3); width: calc(var(----lgQg,=
 .1rem)*8*3); }

.JRkz2A { height: calc(var(----lgQg, .1rem)*8*4); width: calc(var(----lgQg,=
 .1rem)*8*4); }

@keyframes _vsOSw {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

._6ti9_A { animation: 0.5s linear 0s infinite normal none running _vsOSw; }

[dir=3D"rtl"] .lmfTqA { transform: scaleX(-1); }

.RMcv3A { color: var(--VcZbvQ); }

.M1IlTw { color: var(--UpESEg); }

.EpS93g { color: var(--PRQgyw); }

._7_8FQQ { color: var(--vCqPYw); }

.Tb7P_g { color: var(--NRkSiw); }

.BMOCzQ { background-color: unset; border: 0px; box-sizing: border-box; lis=
t-style: none; margin: 0px; padding: 0px; }

.Nuu2Ig { justify-content: normal; }

.MYb60A { justify-content: center; }

.TjbMBg { justify-content: start; }

._WIyVQ { justify-content: flex-start; }

.Q8_z9Q { justify-content: end; }

.YgHDng { justify-content: flex-end; }

._1lVsiA { justify-content: space-between; }

.XJKpHg { align-items: stretch; }

.FQ64gg { align-items: center; }

.k3y7hg { align-items: start; }

.My5POw { align-items: flex-start; }

.YnRqTQ { align-items: end; }

.qF5pUA { align-items: flex-end; }

.ZoItOA { align-self: stretch; }

.F3q9DQ { align-self: center; }

.S_apYQ { align-self: start; }

.j0D3Ew { align-self: flex-start; }

.Q_CMqA { align-self: end; }

.hL0dIg { align-self: flex-end; }

.light { --xpFk1A: #f6f7f8; }

.dark { --xpFk1A: hsla(0,0%,100%,.15); }

.x1Lyuw { background-image: linear-gradient(45deg,var(--xpFk1A) 25%,transpa=
rent 25%),linear-gradient(-45deg,var(--xpFk1A) 25%,transparent 25%),linear-=
gradient(45deg,transparent 75%,var(--xpFk1A) 75%),linear-gradient(-45deg,tr=
ansparent 75%,var(--xpFk1A) 75%); background-position: 0px 0px, 0px 8px, 8p=
x -8px, -8px 0px; background-size: 16px 16px; }

.light { --iBIYpw: #f0f1f5; --Ypt7xQ: #fff; --LIE6Cw: #fff; --Ps9yUA: #fff;=
 --uU7oTw: 0px 0px 0px 0.5px #40576d12,0px 1px 2px 0px #182c5923,0px 2px 4p=
x 0px #182c5923; --galhog: 0px 0px 0px 0.5px #40576d12,0px 2px 4px 0px #182=
c5923,0px 6px 12px 0px #182c5912; --JF44pw: 0px 0px 0px 0.5px #40576d12,0px=
 8px 16px 0px #182c5923,0px 24px 24px 0px #182c5912; }

.dark { --iBIYpw: #0e1318; --Ypt7xQ: #18191b; --LIE6Cw: #202122; --Ps9yUA: =
#27282a; --uU7oTw: 0px 0.5px 0px 0px inset #ffffff12,0px 0px 0px 0.5px inse=
t #ffffff12,0px 1px 2px 0px #0000004d,0px 2px 4px 0px #0000004d; --galhog: =
0px 0.5px 0px 0px inset #ffffff12,0px 0px 0px 0.5px inset #ffffff12,0px 2px=
 4px 0px #0000004d,0px 4px 8px 0px #00000033; --JF44pw: 0px 0.5px 0px 0px i=
nset #ffffff12,0px 0px 0px 0.5px inset #ffffff12,0px 6px 12px 0px #0000004d=
,0px 24px 24px 0px #00000033; }

.i1Kwzg { background-color: var(--Tp54Vw); }

.zPPL6g { background-color: var(--dVucJw); }

.LgUr1Q { background-color: var(--C-q6Ig); }

.ESGcVw { background-color: var(--4RaSjg); }

.F6SHtg { background-color: var(--KtXlRg); color: var(--6u-yJQ); }

.zBi1vw { background-color: var(--yrvb-A); color: var(--VfoYEg); }

.Rs_tKg { background-color: var(--c23L8g); color: var(--feCw5g); }

.myvuYA { background-color: var(--7psRVw); color: var(--W6KtsA); }

.rgwUqw { background-color: var(--DXueYw); color: var(--MjnIDA); }

.xAPXoQ { background-color: var(--23ZOVQ); color: var(--5uESMg); }

.Az5YEQ { background-color: var(--jTT_jQ); color: var(--eLjurg); }

.jhljBg { background-color: var(--Shm3YQ); color: var(--pj2xMA); }

.XVipSQ { background-color: var(--scq9vQ); color: var(--FMoRFg); }

.sI2_9Q { background-color: var(--Ii7YFw); color: var(--WCLNrQ); }

.NUKeTg { background-color: var(--pYULlw); color: var(--v7HVIg); }

.WoF2rw { background-color: var(--ydZUSA); color: var(--OQ2gpA); }

._19NBqA { background-color: var(--1MO0IQ); color: var(--fs4QpA); }

._eD79w, .tyD8aA { color: var(--VcZbvQ); }

.tyD8aA { background-color: var(--iBIYpw); }

.ErJPMA { background-color: var(--Ypt7xQ); }

.ErJPMA, .c0EG6A { color: var(--VcZbvQ); }

.c0EG6A { background-color: var(--LIE6Cw); }

.sH7S_w { background-color: var(--Ps9yUA); color: var(--VcZbvQ); }

._7V4E4A { background-color: var(--2yga1g); color: var(--UpESEg); }

.KCsbQQ { background-color: var(--6Hmmng); color: var(--SxhHZg); }

.zD6b1w { background-color: var(--RzZG4Q); color: var(--M8YsdQ); }

.TcD_aA { background-color: var(--xc412Q); color: var(--XZIM8Q); }

.o0YYEw { background-color: var(--jz0LSw); color: var(--CJur3Q); }

.MgbtnA { background-color: var(--UfNqTg); color: var(--QcueGQ); }

.IIePHw { background-color: var(--bdtRFA); color: var(--YrdGEw); }

.cVcxYQ { background-color: var(--_bpjsw); color: var(--x3uTOw); }

.lCAPSQ { background-color: var(--Am6Phw); color: var(--X8oIbA); }

.AmLXDg { background-color: var(--G_qVww); color: var(--HfWZ1A); }

._9aYc7A { background-color: var(--43wRQw); color: var(--9luNoA); }

.dQ4dsw { background-color: var(--qKGzFw); color: var(--CMMUiA); }

.rCi29A { border-radius: 4px; }

.DL9KoQ { border-radius: 8px; }

._4zl_cQ { border-radius: 4px; }

.V9xfvg { border-radius: 8px; }

.GsIi1Q, ._33V9zw { border-radius: 12px; }

.g1WJ2g { border-radius: 16px; }

.IUu7Aw, .aysH_g { border-radius: 9999px; }

.tRjaYw { border-radius: 8px; }

._syqYQ { border-radius: 4px; }

.EIF_Bg { border-radius: 8px; }

.QQFTFg { border-radius: 12px; }

.SRINcQ { border-radius: 16px; }

.h54RrQ { border-radius: 12px; }

.C6oUyQ { border-radius: 16px; }

._3tecCQ { border-radius: 24px; }

._4tv94w { border: 1px solid var(--Zya5eQ); }

._8ofCoQ { border: 1px solid var(--nOtbOg); }

.WvC7Pg { border: 1px solid var(--OuCkCQ); }

._2_CDOA { border-top: 1px solid var(--Zya5eQ); }

.hqrL3g { border-top: 1px solid var(--nOtbOg); }

.Lg3wpw { border-top: 1px solid var(--OuCkCQ); }

.pC_IVw { border-top: none; }

.XQKGUw { border-bottom: 1px solid var(--Zya5eQ); }

.m2FTxA { border-bottom: 1px solid var(--nOtbOg); }

.r9m5QA { border-bottom: 1px solid var(--OuCkCQ); }

.qTxuVA { border-bottom: none; }

._4U9KeQ { border-left: 1px solid var(--Zya5eQ); }

.sM0Wzw { border-left: 1px solid var(--nOtbOg); }

.mEfUnQ { border-left: 1px solid var(--OuCkCQ); }

.RM3_kQ { border-left: none; }

._94pt3w { border-right: 1px solid var(--Zya5eQ); }

.YVw1eQ { border-right: 1px solid var(--nOtbOg); }

.ZUO7Pg { border-right: 1px solid var(--OuCkCQ); }

.GiYUqg { border-right: none; }

._6Mu4Ow { --s_rwAw: block; --SxQ6Sw: var(--s_rwAw); display: var(--SxQ6Sw)=
; }

@media (min-width: 600px) {
  ._6Mu4Ow { --zOX1XQ: var(--s_rwAw); --SxQ6Sw: var(--zOX1XQ); }
}

@media (min-width: 900px) {
  ._6Mu4Ow { --as7hUg: var(--zOX1XQ); --SxQ6Sw: var(--as7hUg); }
}

@media (min-width: 1200px) {
  ._6Mu4Ow { --kXeS7A: var(--as7hUg); --SxQ6Sw: var(--kXeS7A); }
}

@media (min-width: 1650px) {
  ._6Mu4Ow { --VZZcaw: var(--kXeS7A); --SxQ6Sw: var(--VZZcaw); }
}

.uN3EIA { --YRbscg: row; --zyHMJw: var(--YRbscg); flex-direction: var(--zyH=
MJw); }

@media (min-width: 600px) {
  .uN3EIA { --wRJ75A: var(--YRbscg); --zyHMJw: var(--wRJ75A); }
}

@media (min-width: 900px) {
  .uN3EIA { --TMclnQ: var(--wRJ75A); --zyHMJw: var(--TMclnQ); }
}

@media (min-width: 1200px) {
  .uN3EIA { --OFo3eA: var(--TMclnQ); --zyHMJw: var(--OFo3eA); }
}

@media (min-width: 1650px) {
  .uN3EIA { --dnYgsA: var(--OFo3eA); --zyHMJw: var(--dnYgsA); }
}

.dVqu4w { flex-wrap: nowrap; }

.pveEpQ { flex-wrap: wrap; }

.xIj74g { flex: initial; }

.hu5DGQ { flex: 1 1 auto; }

._6O8ZXw { flex: 0 0 auto; }

.LuBWVA { outline: none; }

.EC2pjw { --gms-pw: 0; --K2KHEw: var(--gms-pw); --TPsgaw: var(--K2KHEw); --=
Mekl7w: var(--TPsgaw); --Wk647Q: var(--K2KHEw); --X15W8A: var(--Wk647Q); --=
KtVHvQ: var(--X15W8A); --C1_mkw: var(--KtVHvQ); --WtUbjw: var(--X15W8A); --=
u2iVmg: var(--WtUbjw); --sW1q4A: var(--Mekl7w); --oqA4yg: var(--sW1q4A); --=
ICTGkg: var(--Mekl7w); --eA7tvg: var(--ICTGkg); padding: var(--C1_mkw) var(=
--eA7tvg) var(--u2iVmg) var(--oqA4yg); }

@media (min-width: 600px) {
  .EC2pjw { --Q-8Emw: var(--gms-pw); --K2KHEw: var(--Q-8Emw); --nz9hsg: var=
(--TPsgaw); --Mekl7w: var(--nz9hsg); --JmGtVw: var(--Wk647Q); --X15W8A: var=
(--JmGtVw); --PA24dg: var(--KtVHvQ); --C1_mkw: var(--PA24dg); --RqXq5w: var=
(--WtUbjw); --u2iVmg: var(--RqXq5w); --3B6sKw: var(--sW1q4A); --oqA4yg: var=
(--3B6sKw); --o5XTkw: var(--ICTGkg); --eA7tvg: var(--o5XTkw); }
}

@media (min-width: 900px) {
  .EC2pjw { --zP7nhA: var(--Q-8Emw); --K2KHEw: var(--zP7nhA); --qzBk5g: var=
(--nz9hsg); --Mekl7w: var(--qzBk5g); --EoUpRQ: var(--JmGtVw); --X15W8A: var=
(--EoUpRQ); --xjBzlA: var(--PA24dg); --C1_mkw: var(--xjBzlA); --B-z5rw: var=
(--RqXq5w); --u2iVmg: var(--B-z5rw); --RRW4Dw: var(--3B6sKw); --oqA4yg: var=
(--RRW4Dw); --W-Ed8g: var(--o5XTkw); --eA7tvg: var(--W-Ed8g); }
}

@media (min-width: 1200px) {
  .EC2pjw { --_lpgvw: var(--zP7nhA); --K2KHEw: var(--_lpgvw); --OX94wg: var=
(--qzBk5g); --Mekl7w: var(--OX94wg); --JL2GSQ: var(--EoUpRQ); --X15W8A: var=
(--JL2GSQ); --PTJJWA: var(--xjBzlA); --C1_mkw: var(--PTJJWA); --U3-cIw: var=
(--B-z5rw); --u2iVmg: var(--U3-cIw); --U-aFQw: var(--RRW4Dw); --oqA4yg: var=
(--U-aFQw); --SEaAcQ: var(--W-Ed8g); --eA7tvg: var(--SEaAcQ); }
}

@media (min-width: 1650px) {
  .EC2pjw { --Ki5L7Q: var(--_lpgvw); --K2KHEw: var(--Ki5L7Q); --WKVoBg: var=
(--OX94wg); --Mekl7w: var(--WKVoBg); --VTpDVA: var(--JL2GSQ); --X15W8A: var=
(--VTpDVA); --43j-jg: var(--PTJJWA); --C1_mkw: var(--43j-jg); --agG3uA: var=
(--U3-cIw); --u2iVmg: var(--agG3uA); --eji4Jg: var(--U-aFQw); --oqA4yg: var=
(--eji4Jg); --_gJ-qQ: var(--SEaAcQ); --eA7tvg: var(--_gJ-qQ); }
}

.bu_JgA { position: relative; }

._5DYjkQ { position: absolute; }

.TwIyqg { position: sticky; }

._4WqHSA { inset: 0px; }

.ZmEN8g { left: 0px; }

.HwOMuA { right: 0px; }

.EPf9bw { top: 0px; }

._5BaZ9A { bottom: 0px; }

.light { --wlsoXA: 0px 0px 0px 1px rgba(64,87,109,.04),0px 6px 20px -4px rg=
ba(64,87,109,.3); --ej6pBg: 0px 0px 0px 1px rgba(64,87,109,.04),0px 12px 40=
px -8px rgba(64,87,109,.3); --3LGewA: 0px 0px 0px 1px rgba(64,87,109,.04),0=
px 2px 4px -1px rgba(64,87,109,.3); }

.dark { --wlsoXA: 0px 0px 0px 1px #3b3c3d,0px 6px 20px -4px rgba(0,0,0,.45)=
; --ej6pBg: 0px 0px 0px 1px #3b3c3d,0px 12px 40px -8px rgba(0,0,0,.45); --3=
LGewA: 0px 0px 0px 1px #3b3c3d,0px 2px 4px -1px rgba(0,0,0,.45); }

.rXzsBA { box-shadow: var(--wlsoXA); }

.D8KGAg { box-shadow: var(--ej6pBg); }

.teY_TQ { box-shadow: var(--3LGewA); }

.nX6ucw { box-shadow: var(--JF44pw); }

.DWbj1A { box-shadow: var(--galhog); }

._6w60mg { box-shadow: var(--uU7oTw); }

.fOwrSw { width: 100%; }

._8CKO_A { height: 100%; }

.iRA8VA { min-width: 0px; }

._1BdlIg { min-width: 44px; }

._6W88FA { min-height: 0px; }

.z44fNQ { min-height: 44px; }

.bGU_UA { display: block; }

.lRNj2A { display: grid; height: 100%; }

.tq_GuQ { --ODN7ig: 0px; --xzVIoQ: var(--ODN7ig); --MDiH4g: var(--xzVIoQ); =
--cqVKuA: var(--MDiH4g); --WHMN3A: var(--xzVIoQ); --DAc5KA: var(--WHMN3A); =
--9D8kEw: var(--DAc5KA); --SDc9Dw: var(--9D8kEw); --aLHwgA: var(--DAc5KA); =
--51vLnw: var(--aLHwgA); --kxq1gA: var(--cqVKuA); --WBWqqg: var(--kxq1gA); =
--wsix4w: var(--cqVKuA); --np7iJA: var(--wsix4w); margin: calc(var(--SDc9Dw=
)*-1) calc(var(--np7iJA)*-1) calc(var(--51vLnw)*-1) calc(var(--WBWqqg)*-1);=
 }

@media (min-width: 600px) {
  .tq_GuQ { --D21EiQ: var(--ODN7ig); --xzVIoQ: var(--D21EiQ); --575ttw: var=
(--MDiH4g); --cqVKuA: var(--575ttw); --mNFMcQ: var(--WHMN3A); --DAc5KA: var=
(--mNFMcQ); --zzPIIQ: var(--9D8kEw); --SDc9Dw: var(--zzPIIQ); --tywInA: var=
(--aLHwgA); --51vLnw: var(--tywInA); --y5UJtw: var(--kxq1gA); --WBWqqg: var=
(--y5UJtw); --HyG-pg: var(--wsix4w); --np7iJA: var(--HyG-pg); }
}

@media (min-width: 900px) {
  .tq_GuQ { --ijDDvw: var(--D21EiQ); --xzVIoQ: var(--ijDDvw); --r733uA: var=
(--575ttw); --cqVKuA: var(--r733uA); --Ycn3FA: var(--mNFMcQ); --DAc5KA: var=
(--Ycn3FA); --iLYaiA: var(--zzPIIQ); --SDc9Dw: var(--iLYaiA); --ugWqWA: var=
(--tywInA); --51vLnw: var(--ugWqWA); --Fq9RDQ: var(--y5UJtw); --WBWqqg: var=
(--Fq9RDQ); --2e8GwA: var(--HyG-pg); --np7iJA: var(--2e8GwA); }
}

@media (min-width: 1200px) {
  .tq_GuQ { --XB2g3A: var(--ijDDvw); --xzVIoQ: var(--XB2g3A); --dlcQ6Q: var=
(--r733uA); --cqVKuA: var(--dlcQ6Q); ---W4B1g: var(--Ycn3FA); --DAc5KA: var=
(---W4B1g); --V4bSzA: var(--iLYaiA); --SDc9Dw: var(--V4bSzA); --MqGEqA: var=
(--ugWqWA); --51vLnw: var(--MqGEqA); --ysWWIg: var(--Fq9RDQ); --WBWqqg: var=
(--ysWWIg); --qUFzUw: var(--2e8GwA); --np7iJA: var(--qUFzUw); }
}

@media (min-width: 1650px) {
  .tq_GuQ { --GKew2A: var(--XB2g3A); --xzVIoQ: var(--GKew2A); --AqlUDA: var=
(--dlcQ6Q); --cqVKuA: var(--AqlUDA); --5lEbBw: var(---W4B1g); --DAc5KA: var=
(--5lEbBw); --3ls_Pg: var(--V4bSzA); --SDc9Dw: var(--3ls_Pg); --FooBVw: var=
(--MqGEqA); --51vLnw: var(--FooBVw); --Lp9AXw: var(--ysWWIg); --WBWqqg: var=
(--Lp9AXw); --vjU7Yg: var(--qUFzUw); --np7iJA: var(--vjU7Yg); }
}

.Ka9auQ { display: flex; flex-direction: row; }

.Ka9auQ.jwmuTw { flex-direction: row-reverse; }

.aDc6Yg { box-sizing: border-box; flex: 1 1 0%; min-width: 0px; }

.Ka9auQ { --Z_Miqg: flex-start; --LsJ77A: var(--Z_Miqg); --TPF5Nw: stretch;=
 --80mGfw: var(--TPF5Nw); --8-Ea9Q: unset; --TW9Q9A: var(--8-Ea9Q); --PmK0M=
A: 0; --HlviUw: var(--PmK0MA); align-items: var(--80mGfw); height: var(--TW=
9Q9A); justify-content: var(--LsJ77A); margin-left: calc(var(--HlviUw)*-1);=
 }

.Ka9auQ > .aDc6Yg { padding-left: var(--HlviUw); }

@media (min-width: 600px) {
  .Ka9auQ { --4oSEuQ: var(--Z_Miqg); --LsJ77A: var(--4oSEuQ); --WwWNzA: var=
(--TPF5Nw); --80mGfw: var(--WwWNzA); --efSz5g: var(--8-Ea9Q); --TW9Q9A: var=
(--efSz5g); --FG1HiQ: var(--PmK0MA); --HlviUw: var(--FG1HiQ); }
}

@media (min-width: 900px) {
  .Ka9auQ { --pIKbQw: var(--4oSEuQ); --LsJ77A: var(--pIKbQw); --UM5n7g: var=
(--WwWNzA); --80mGfw: var(--UM5n7g); --l378dw: var(--efSz5g); --TW9Q9A: var=
(--l378dw); --ZDk_QQ: var(--FG1HiQ); --HlviUw: var(--ZDk_QQ); }
}

@media (min-width: 1200px) {
  .Ka9auQ { --oqjoXw: var(--pIKbQw); --LsJ77A: var(--oqjoXw); --lQFlpg: var=
(--UM5n7g); --80mGfw: var(--lQFlpg); --iZ6hVQ: var(--l378dw); --TW9Q9A: var=
(--iZ6hVQ); --uQwNcw: var(--ZDk_QQ); --HlviUw: var(--uQwNcw); }
}

@media (min-width: 1650px) {
  .Ka9auQ { --Lizo3w: var(--oqjoXw); --LsJ77A: var(--Lizo3w); --ocKd3w: var=
(--lQFlpg); --80mGfw: var(--ocKd3w); --CqswqA: var(--iZ6hVQ); --TW9Q9A: var=
(--CqswqA); --pv1EXQ: var(--uQwNcw); --HlviUw: var(--pv1EXQ); }
}

.oNSf9w { flex: 0 0 auto; }

._3EHl7w { flex: 0 1 auto; }

._7ukmsg { flex: 0 0 calc(100%*var(--J6soRA)); }

.Ka9auQ.OeIiPQ { flex-direction: column; margin-left: 0px; }

.Ka9auQ.OeIiPQ > .aDc6Yg { display: flex; flex: 0 0 auto; justify-content: =
var(--LsJ77A); padding-left: 0px; width: 100%; }

.Ka9auQ.OeIiPQ > .aDc6Yg + .aDc6Yg { padding-top: var(--HlviUw); }

@media (max-width: 599px) {
  .Ka9auQ._94CIA { flex-direction: column; margin-left: 0px; }
  .Ka9auQ._94CIA > .aDc6Yg { display: flex; flex: 0 0 auto; justify-content=
: var(--LsJ77A); padding-left: 0px; width: 100%; }
  .Ka9auQ._94CIA > .aDc6Yg + .aDc6Yg { padding-top: var(--HlviUw); }
}

@media (max-width: 899px) {
  .Ka9auQ.D69X7w { flex-direction: column; margin-left: 0px; }
  .Ka9auQ.D69X7w > .aDc6Yg { display: flex; flex: 0 0 auto; justify-content=
: var(--LsJ77A); padding-left: 0px; width: 100%; }
  .Ka9auQ.D69X7w > .aDc6Yg + .aDc6Yg { padding-top: var(--HlviUw); }
}

@media (max-width: 1199px) {
  .Ka9auQ.bF3aMg { flex-direction: column; margin-left: 0px; }
  .Ka9auQ.bF3aMg > .aDc6Yg { display: flex; flex: 0 0 auto; justify-content=
: var(--LsJ77A); padding-left: 0px; width: 100%; }
  .Ka9auQ.bF3aMg > .aDc6Yg + .aDc6Yg { padding-top: var(--HlviUw); }
}

@media (max-width: 1649px) {
  .Ka9auQ._99XVeA { flex-direction: column; margin-left: 0px; }
  .Ka9auQ._99XVeA > .aDc6Yg { display: flex; flex: 0 0 auto; justify-conten=
t: var(--LsJ77A); padding-left: 0px; width: 100%; }
  .Ka9auQ._99XVeA > .aDc6Yg + .aDc6Yg { padding-top: var(--HlviUw); }
}

._99GB9Q { margin: 0px auto; width: 100%; }

.hMc6MQ { max-width: 752px; }

.rzX2Ng { max-width: 1288px; }

.XIyMlA { height: 100%; }

.SwlpcA { --lIX0Wg: 0; --yi87cg: var(--lIX0Wg); --ohDgOg: var(--yi87cg); --=
hx4cXA: var(--yi87cg); --UOvbuw: var(--ohDgOg); --fqqbsg: var(--hx4cXA); co=
lumn-gap: ; row-gap: ; --S8wiIA: 1; --039ymw: var(--S8wiIA); --PsEauw: auto=
; --Kt27rA: var(--PsEauw); --QrbJUA: stretch; --vUMXuQ: var(--QrbJUA); --tF=
xMoA: stretch; --DZcelw: var(--tFxMoA); align-items: var(--vUMXuQ); display=
: grid; grid-auto-rows: var(--Kt27rA); grid-template-columns: repeat(var(--=
039ymw),minmax(0,1fr)); justify-items: var(--DZcelw); list-style: none; mar=
gin: 0px; padding: 0px; width: 100%; }

@media (min-width: 600px) {
  .SwlpcA { --ewtwaQ: var(--lIX0Wg); --yi87cg: var(--ewtwaQ); --NSTj4A: var=
(--ohDgOg); --UOvbuw: var(--NSTj4A); --p2o2Vg: var(--hx4cXA); --fqqbsg: var=
(--p2o2Vg); --l9ar2Q: var(--S8wiIA); --039ymw: var(--l9ar2Q); --3l1REQ: var=
(--PsEauw); --Kt27rA: var(--3l1REQ); --0-W-hw: var(--QrbJUA); --vUMXuQ: var=
(--0-W-hw); --Ey-7Iw: var(--tFxMoA); --DZcelw: var(--Ey-7Iw); }
}

@media (min-width: 900px) {
  .SwlpcA { --Bgy4yg: var(--ewtwaQ); --yi87cg: var(--Bgy4yg); --0WShwg: var=
(--NSTj4A); --UOvbuw: var(--0WShwg); --e8tE0A: var(--p2o2Vg); --fqqbsg: var=
(--e8tE0A); --CcBh2g: var(--l9ar2Q); --039ymw: var(--CcBh2g); --gLfeDA: var=
(--3l1REQ); --Kt27rA: var(--gLfeDA); --ZRmpDA: var(--0-W-hw); --vUMXuQ: var=
(--ZRmpDA); --bTWRfA: var(--Ey-7Iw); --DZcelw: var(--bTWRfA); }
}

@media (min-width: 1200px) {
  .SwlpcA { --3XakiA: var(--Bgy4yg); --yi87cg: var(--3XakiA); --YSP4xg: var=
(--0WShwg); --UOvbuw: var(--YSP4xg); --NQHGsg: var(--e8tE0A); --fqqbsg: var=
(--NQHGsg); --tKeWqQ: var(--CcBh2g); --039ymw: var(--tKeWqQ); --uFii4Q: var=
(--gLfeDA); --Kt27rA: var(--uFii4Q); --dQS_dA: var(--ZRmpDA); --vUMXuQ: var=
(--dQS_dA); --l2u9pQ: var(--bTWRfA); --DZcelw: var(--l2u9pQ); }
}

@media (min-width: 1650px) {
  .SwlpcA { --ZS7sgA: var(--3XakiA); --yi87cg: var(--ZS7sgA); --mP4KDg: var=
(--YSP4xg); --UOvbuw: var(--mP4KDg); --N5TPJA: var(--NQHGsg); --fqqbsg: var=
(--N5TPJA); --O5dT7A: var(--tKeWqQ); --039ymw: var(--O5dT7A); --bEL8Kw: var=
(--uFii4Q); --Kt27rA: var(--bEL8Kw); --ADQKyA: var(--dQS_dA); --vUMXuQ: var=
(--ADQKyA); --BjJaRg: var(--l2u9pQ); --DZcelw: var(--BjJaRg); }
}

.IZ4ahw { display: flex; flex-direction: column; min-width: 0px; }

.lJVQMg { display: flex; flex-flow: wrap; list-style: none; margin: 0px; pa=
dding: 0px; pointer-events: none; }

.eAUiHA { min-width: 0px; pointer-events: auto; }

.lJVQMg { --9en39A: start; --sV-EpA: var(--9en39A); --WF3kKw: flex-start; -=
-iXQvmQ: var(--WF3kKw); --dVJz5A: 0; --8L3TXg: var(--dVJz5A); align-items: =
var(--iXQvmQ); justify-content: var(--sV-EpA); margin-left: calc(var(--8L3T=
Xg)*-1); margin-top: calc(var(--8L3TXg)*-1); }

.lJVQMg > .eAUiHA { margin-left: var(--8L3TXg); margin-top: var(--8L3TXg); =
}

@media (min-width: 600px) {
  .lJVQMg { --PH7IiA: var(--9en39A); --sV-EpA: var(--PH7IiA); --lerH5Q: var=
(--WF3kKw); --iXQvmQ: var(--lerH5Q); --17nzkQ: var(--dVJz5A); --8L3TXg: var=
(--17nzkQ); }
}

@media (min-width: 900px) {
  .lJVQMg { --So7e7w: var(--PH7IiA); --sV-EpA: var(--So7e7w); --Svcfig: var=
(--lerH5Q); --iXQvmQ: var(--Svcfig); --fBHifw: var(--17nzkQ); --8L3TXg: var=
(--fBHifw); }
}

@media (min-width: 1200px) {
  .lJVQMg { --7u37BA: var(--So7e7w); --sV-EpA: var(--7u37BA); --g8CPjw: var=
(--Svcfig); --iXQvmQ: var(--g8CPjw); --YHMflA: var(--fBHifw); --8L3TXg: var=
(--YHMflA); }
}

@media (min-width: 1650px) {
  .lJVQMg { --JN3vyg: var(--7u37BA); --sV-EpA: var(--JN3vyg); --_CLt_A: var=
(--g8CPjw); --iXQvmQ: var(--_CLt_A); --s1K7lQ: var(--YHMflA); --8L3TXg: var=
(--s1K7lQ); }
}

.lJVQMg.iSphvA { flex-direction: column; margin-left: 0px; }

.lJVQMg.iSphvA > .eAUiHA { display: flex; justify-content: var(--sV-EpA); m=
argin-left: 0px; width: 100%; }

@media (max-width: 599px) {
  .lJVQMg.Cr51Kw { flex-direction: column; margin-left: 0px; }
  .lJVQMg.Cr51Kw > .eAUiHA { display: flex; justify-content: var(--sV-EpA);=
 margin-left: 0px; width: 100%; }
}

@media (max-width: 899px) {
  .lJVQMg._VmLag { flex-direction: column; margin-left: 0px; }
  .lJVQMg._VmLag > .eAUiHA { display: flex; justify-content: var(--sV-EpA);=
 margin-left: 0px; width: 100%; }
}

@media (max-width: 1199px) {
  .lJVQMg.GJAJOA { flex-direction: column; margin-left: 0px; }
  .lJVQMg.GJAJOA > .eAUiHA { display: flex; justify-content: var(--sV-EpA);=
 margin-left: 0px; width: 100%; }
}

@media (max-width: 1649px) {
  .lJVQMg.tlsSCw { flex-direction: column; margin-left: 0px; }
  .lJVQMg.tlsSCw > .eAUiHA { display: flex; justify-content: var(--sV-EpA);=
 margin-left: 0px; width: 100%; }
}

.jv_R6g { --NZu1Zw: 0; --B5MwdA: var(--NZu1Zw); row-gap: ; --okeDpw: stretc=
h; --lbR7PA: var(--okeDpw); display: grid; grid-template-columns: minmax(0p=
x, 1fr); justify-items: var(--lbR7PA); list-style: none; margin: 0px; paddi=
ng: 0px; width: 100%; }

@media (min-width: 600px) {
  .jv_R6g { --yjD9-g: var(--NZu1Zw); --B5MwdA: var(--yjD9-g); --Wdux6Q: var=
(--okeDpw); --lbR7PA: var(--Wdux6Q); }
}

@media (min-width: 900px) {
  .jv_R6g { --p9uXxg: var(--yjD9-g); --B5MwdA: var(--p9uXxg); --XmSfTQ: var=
(--Wdux6Q); --lbR7PA: var(--XmSfTQ); }
}

@media (min-width: 1200px) {
  .jv_R6g { --5eb_tQ: var(--p9uXxg); --B5MwdA: var(--5eb_tQ); --70FeaQ: var=
(--XmSfTQ); --lbR7PA: var(--70FeaQ); }
}

@media (min-width: 1650px) {
  .jv_R6g { --BaEeNQ: var(--5eb_tQ); --B5MwdA: var(--BaEeNQ); --TabT5g: var=
(--70FeaQ); --lbR7PA: var(--TabT5g); }
}

._8aVEnQ { display: block; flex-shrink: 0; }

._8aVEnQ.jNvgTA { display: inline-block; height: auto; min-height: 1px; }

._8aVEnQ.fI4kiw { min-width: 1px; width: auto; }

._8aVEnQ { --FnDW1g: 0; --_0I23A: var(--FnDW1g); height: var(--_0I23A); wid=
th: var(--_0I23A); }

@media (min-width: 600px) {
  ._8aVEnQ { --wVd3QA: var(--FnDW1g); --_0I23A: var(--wVd3QA); }
}

@media (min-width: 900px) {
  ._8aVEnQ { --av-YnA: var(--wVd3QA); --_0I23A: var(--av-YnA); }
}

@media (min-width: 1200px) {
  ._8aVEnQ { --Gwh4IA: var(--av-YnA); --_0I23A: var(--Gwh4IA); }
}

@media (min-width: 1650px) {
  ._8aVEnQ { --F5plrA: var(--Gwh4IA); --_0I23A: var(--F5plrA); }
}

.DcyBDA { display: flex; height: 100%; place-items: center; width: 100%; }

@font-face { font-display: swap; font-family: "Canva Sans"; font-style: nor=
mal; font-weight: 400 700; src: url("images/a9b8e7902ec1ab885d382156f33738e=
5.woff2") format("woff2"), url("images/013277426f0d555d96c7a75503df5754.wof=
f") format("woff"); unicode-range: U+B1-B3, U+B9, U+BC-BE, U+394, U+3A9, U+=
3BC, U+3C0, U+2044, U+2070, U+2074-2089, U+2126, U+212E, U+2153-2154, U+215=
B-215E, U+2202, U+2206, U+220F, U+2211-2212, U+2215, U+2219, U+221A, U+221E=
, U+222B, U+2248, U+2260, U+2264-2265, U+25CA; }

@font-face { font-display: swap; font-family: "Canva Sans"; font-style: nor=
mal; font-weight: 400 700; src: url("images/d97a6ffa507b670a5b1664f98fc1183=
d.woff2") format("woff2"), url("images/1de7434d86166b0614ff3d61cda11a54.wof=
f") format("woff"); unicode-range: U+A1, U+AA-AB, U+AF, U+B8, U+BA-BB, U+BF=
, U+C0-D6, U+D8-F6, U+F8-148, U+14A-17E, U+192, U+1B5-1B6, U+1FC-1FD, U+218=
-21B, U+237, U+2C6-2C7, U+2C9, U+2D8-2DD, U+1E80-1E85, U+1E9E, U+1EF2-1EF3,=
 U+2030, U+2039-203A, U+20AC, U+20BA, U+2113; }

@font-face { font-display: swap; font-family: "Canva Sans"; font-style: nor=
mal; font-weight: 400 700; src: url("images/cff149ee1e9d2be50ac77bcd86769d0=
5.woff2") format("woff2"), url("images/f93a5165fac252ecfd593929c4e6146f.wof=
f") format("woff"); unicode-range: U+20-7E, U+A0, U+A2-A9, U+AC-AE, U+B0, U=
+B4-B7, U+D7, U+F7, U+300-304, U+306-308, U+30A-30C, U+312, U+326-328, U+20=
13-2014, U+2018-201A, U+201C-201E, U+2020-2022, U+2026, U+2117, U+2120, U+2=
122, U+2190-2199, U+FB01-FB02, U+FEFF, U+FFFC-FFFD; }

@font-face { font-display: swap; font-family: "Noto Sans Variable"; font-st=
yle: normal; font-weight: 125 950; src: url("images/621675e6be83f675d33562d=
2ff7a0f63.woff2") format("woff2"); unicode-range: U+600-6FF; }

@font-face { font-display: swap; font-family: "Noto Sans Variable"; font-st=
yle: normal; font-weight: 125 950; src: url("images/762fe37b99d49707e783d62=
81412d12f.woff2") format("woff2"); unicode-range: U+590-5FF; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 400; src: url("images/d83221ee6a6841b17a754f68b6c5a3de.wof=
f2") format("woff2"); unicode-range: U+900-97F; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 600; src: url("images/e237b20d624e9275cdc02a523ab7f983.wof=
f2") format("woff2"); unicode-range: U+900-97F; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 700; src: url("images/3b5447850810ff964de17bcd37e03d5a.wof=
f2") format("woff2"); unicode-range: U+900-97F; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 400; src: url("images/a13025bc22c0d623507f155005c54563.wof=
f2") format("woff2"), url("images/ad480883f297c3606af00979ee4c4483.woff") f=
ormat("woff"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, =
U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 600; src: url("images/477aad26d9a5a64609483931aa0a7a05.wof=
f2") format("woff2"), url("images/0e2be7bf67e32755fd73a605a2afd13b.woff") f=
ormat("woff"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, =
U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 700; src: url("images/85b2d625d97d50571765987bbac33850.wof=
f2") format("woff2"), url("images/3f03afd80eaf13ee58a7d0945b7d0963.woff") f=
ormat("woff"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, =
U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 400; src: url("images/02bba2de1b5f7fc3b564b21521e774d0.wof=
f2") format("woff2"), url("images/163124370f3e2ded710887a156ab3fa3.woff") f=
ormat("woff"); unicode-range: U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 600; src: url("images/0b41617d3a05bbbe23065ec719e26fd1.wof=
f2") format("woff2"), url("images/650cef2d886ef4ca5c18d3c107546daf.woff") f=
ormat("woff"); unicode-range: U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 700; src: url("images/d4b0974727cae80b9c6d087e56a9a4e4.wof=
f2") format("woff2"), url("images/771cbf29ddc3145dda326afee4b10fb8.woff") f=
ormat("woff"); unicode-range: U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 400; src: url("images/6c9b9f4b28322c7473667e0fc1690675.wof=
f2") format("woff2"), url("images/79359a454d1de78942f3c2c687fc67ea.woff") f=
ormat("woff"); unicode-range: U+1F00-1FFF; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 600; src: url("images/a8f52f1cd47135bfc86b1f313868708d.wof=
f2") format("woff2"), url("images/e3e13973dcf74ace522a4b8ef447a7de.woff") f=
ormat("woff"); unicode-range: U+1F00-1FFF; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 700; src: url("images/ca4237378da57e1e318978281e7fee60.wof=
f2") format("woff2"), url("images/d7669ff2d0106ad99a7a55c4d540478c.woff") f=
ormat("woff"); unicode-range: U+1F00-1FFF; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 400; src: url("images/d56fc13fe0dc1327dceed816b07dbec3.wof=
f2") format("woff2"), url("images/311ec631b3b3a7f88c724351af8bcef4.woff") f=
ormat("woff"); unicode-range: U+370-3FF; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 600; src: url("images/c9972caeca3358fa2841a115105a8544.wof=
f2") format("woff2"), url("images/c3a91206711602c9b5f54e9514244e64.woff") f=
ormat("woff"); unicode-range: U+370-3FF; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 700; src: url("images/dafb7fee1db6b7ae9b1184239b11acf5.wof=
f2") format("woff2"), url("images/d6cbb5c42a1149e38e1fb7a238032bc8.woff") f=
ormat("woff"); unicode-range: U+370-3FF; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 400; src: url("images/964b01a520402dcf8405de90289c35f4.wof=
f2") format("woff2"), url("images/4badd42f0e1cdba66ffbd5cc91aa4365.woff") f=
ormat("woff"); unicode-range: U+17F, U+1F0, U+1FA-1FB, U+1FE-1FF, U+1E00-1E=
01, U+1E3E-1E3F; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 600; src: url("images/58cf708f2cc4d2b3bbf7e6add25f5c20.wof=
f2") format("woff2"), url("images/4f9f09e9c9bc053cc21f7cf7f5590904.woff") f=
ormat("woff"); unicode-range: U+17F, U+1F0, U+1FA-1FB, U+1FE-1FF, U+1E00-1E=
01, U+1E3E-1E3F; }

@font-face { font-display: swap; font-family: "Noto Sans"; font-style: norm=
al; font-weight: 700; src: url("images/4bdcf0ce1296b448409c024e57fdcdb9.wof=
f2") format("woff2"), url("images/005dabb12cdb5c5deabd1782c3ff196d.woff") f=
ormat("woff"); unicode-range: U+17F, U+1F0, U+1FA-1FB, U+1FE-1FF, U+1E00-1E=
01, U+1E3E-1E3F; }

@font-face { font-display: swap; font-family: "Noto Sans Vietnamese"; font-=
style: normal; font-weight: 400; src: url("images/f4113bb9d3def37ca7f5c7cd2=
341ec33.woff2") format("woff2"), url("images/614a39a4813512a63e905b12dc5f41=
ba.woff") format("woff"); unicode-range: U+20-5F, U+61-7A, U+7C, U+A0, U+A7=
, U+A9, U+C0-C3, U+C8-CA, U+CC-CD, U+D2-D5, U+D9-DA, U+DD, U+E0-E3, U+E8-EA=
, U+EC-ED, U+F2-F5, U+F9-FA, U+FD, U+102-103, U+110-111, U+128-129, U+168-1=
69, U+1A0-1A1, U+1AF-1B0, U+300-303, U+306, U+309, U+31B, U+323, U+1EA0-1EF=
9, U+2010-2011, U+2013-2014, U+2018-2019, U+201C-201D, U+2020-2021, U+2026,=
 U+2030, U+20AB; }

@font-face { font-display: swap; font-family: "Noto Sans Vietnamese"; font-=
style: normal; font-weight: 600; src: url("images/5989cf357de7427311e305768=
91372df.woff2") format("woff2"), url("images/b3571e313b47ed988fc8429322af76=
77.woff") format("woff"); unicode-range: U+20-5F, U+61-7A, U+7C, U+A0, U+A7=
, U+A9, U+C0-C3, U+C8-CA, U+CC-CD, U+D2-D5, U+D9-DA, U+DD, U+E0-E3, U+E8-EA=
, U+EC-ED, U+F2-F5, U+F9-FA, U+FD, U+102-103, U+110-111, U+128-129, U+168-1=
69, U+1A0-1A1, U+1AF-1B0, U+300-303, U+306, U+309, U+31B, U+323, U+1EA0-1EF=
9, U+2010-2011, U+2013-2014, U+2018-2019, U+201C-201D, U+2020-2021, U+2026,=
 U+2030, U+20AB; }

@font-face { font-display: swap; font-family: "Noto Sans Vietnamese"; font-=
style: normal; font-weight: 700; src: url("images/5d050a324d95a6a18dae93e08=
c01bd6b.woff2") format("woff2"), url("images/08f3a04653878f9b2369ec3c327d7c=
46.woff") format("woff"); unicode-range: U+20-5F, U+61-7A, U+7C, U+A0, U+A7=
, U+A9, U+C0-C3, U+C8-CA, U+CC-CD, U+D2-D5, U+D9-DA, U+DD, U+E0-E3, U+E8-EA=
, U+EC-ED, U+F2-F5, U+F9-FA, U+FD, U+102-103, U+110-111, U+128-129, U+168-1=
69, U+1A0-1A1, U+1AF-1B0, U+300-303, U+306, U+309, U+31B, U+323, U+1EA0-1EF=
9, U+2010-2011, U+2013-2014, U+2018-2019, U+201C-201D, U+2020-2021, U+2026,=
 U+2030, U+20AB; }

._11DV9Q { -webkit-font-smoothing: antialiased; }

.fUFQXw { margin: 0px; overflow-wrap: break-word; }

.Je1eGw { -webkit-box-orient: vertical; display: -webkit-box; overflow: hid=
den; }

.bG0Uaw { text-wrap: balance; }

.lWke4A { text-wrap: pretty; }

.snQKTg { display: block; max-width: 100%; overflow: hidden; text-overflow:=
 ellipsis; white-space: nowrap; }

.mKhvSg { user-select: text; }

.MHu4Kw { text-transform: uppercase; }

.xKgPgA { outline: none; }

._7ATl0g, ._8yjy_A, .iXAxTg, .tIMMkQ { font-feature-settings: "ss02", "ss03=
"; font-variation-settings: "opsz" 100; }

._5Gynyg, .liTStw, .zB3q8Q { font-variation-settings: "opsz" 0; }

._5Gynyg, ._7ATl0g, ._8yjy_A, .iXAxTg, .liTStw, .tIMMkQ, .zB3q8Q { -webkit-=
font-smoothing: antialiased; text-size-adjust: none; font-family: "Canva Sa=
ns", "Noto Sans Variable", "Noto Sans", -apple-system, BlinkMacSystemFont, =
"Segoe UI", Helvetica, Arial, sans-serif; font-weight: 700; margin: 0px; ov=
erflow-wrap: break-word; }

[lang|=3D"vi"] .Gmat4w, [lang|=3D"vi"] .JYIidw, [lang|=3D"vi"] .VgvqkQ, [la=
ng|=3D"vi"] ._2a6tNg, [lang|=3D"vi"] ._5Gynyg, [lang|=3D"vi"] ._7ATl0g, [la=
ng|=3D"vi"] ._7yv_Gw, [lang|=3D"vi"] ._8yjy_A, [lang|=3D"vi"] .aWBg0w, [lan=
g|=3D"vi"] .c74n_Q, [lang|=3D"vi"] .iXAxTg, [lang|=3D"vi"] .jqn1OA, [lang|=
=3D"vi"] .liTStw, [lang|=3D"vi"] .nbfwjw, [lang|=3D"vi"] .qXoAGw, [lang|=3D=
"vi"] .tIMMkQ, [lang|=3D"vi"] .zB3q8Q { font-family: "Noto Sans Vietnamese"=
, -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-ser=
if; }

.tIMMkQ { font-size: calc(var(----lgQg, .1rem)*8/8*64); line-height: calc(v=
ar(----lgQg, .1rem)*8/8*84); }

.iXAxTg { font-size: calc(var(----lgQg, .1rem)*8/8*48); line-height: calc(v=
ar(----lgQg, .1rem)*8/8*64); }

._8yjy_A { font-size: calc(var(----lgQg, .1rem)*8/8*32); line-height: calc(=
var(----lgQg, .1rem)*8/8*42); }

._7ATl0g { font-size: calc(var(----lgQg, .1rem)*8/8*24); line-height: calc(=
var(----lgQg, .1rem)*8/8*32); }

._5Gynyg { font-size: calc(var(----lgQg, .1rem)*8/8*18); line-height: calc(=
var(----lgQg, .1rem)*8/8*24); }

.liTStw { font-size: calc(var(----lgQg, .1rem)*8/8*14); font-weight: 700; l=
ine-height: calc(var(----lgQg, .1rem)*8/8*20); }

.zB3q8Q { font-size: calc(var(----lgQg, .1rem)*8/8*12); font-weight: 600; l=
ine-height: calc(var(----lgQg, .1rem)*8/8*18); }

.Gmat4w, .JYIidw, .VgvqkQ, ._2a6tNg, ._7yv_Gw, .aWBg0w, .c74n_Q, .jqn1OA, .=
nbfwjw, .qXoAGw { -webkit-font-smoothing: antialiased; text-size-adjust: no=
ne; font-family: "Canva Sans", "Noto Sans Variable", "Noto Sans", -apple-sy=
stem, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif; font-va=
riation-settings: "opsz" 0; font-weight: 400; margin: 0px; overflow-wrap: b=
reak-word; }

.Gmat4w { font-size: calc(var(----lgQg, .1rem)*8/8*24); line-height: calc(v=
ar(----lgQg, .1rem)*8/8*36); }

._7yv_Gw { font-size: calc(var(----lgQg, .1rem)*8/8*21); line-height: calc(=
var(----lgQg, .1rem)*8/8*32); }

.jqn1OA, .qXoAGw { font-size: calc(var(----lgQg, .1rem)*8/8*16); line-heigh=
t: calc(var(----lgQg, .1rem)*8/8*26); }

.VgvqkQ, .aWBg0w { font-size: calc(var(----lgQg, .1rem)*8/8*14); line-heigh=
t: calc(var(----lgQg, .1rem)*8/8*22); }

.JYIidw, ._2a6tNg { font-size: calc(var(----lgQg, .1rem)*8/8*12); line-heig=
ht: calc(var(----lgQg, .1rem)*8/8*20); }

.c74n_Q, .nbfwjw { font-size: calc(var(----lgQg, .1rem)*8/8*11); font-weigh=
t: 600; letter-spacing: calc(var(----lgQg, .1rem)*8/8*.1); line-height: cal=
c(var(----lgQg, .1rem)*8/8*16); }

.VgvqkQ, .aWBg0w b, .aWBg0w strong, .jqn1OA b, .jqn1OA strong, .qXoAGw { fo=
nt-weight: 600; }

.VgvqkQ b, .VgvqkQ strong { font-weight: 700; }

.JYIidw b, .JYIidw strong, ._2a6tNg { font-weight: 600; }

.c74n_Q, .nbfwjw b, .nbfwjw strong { font-weight: 700; }

@media (max-width: 599px) {
  .tIMMkQ { font-size: calc(var(----lgQg, .1rem)*8/8*48); line-height: calc=
(var(----lgQg, .1rem)*8/8*64); }
  .iXAxTg { font-size: calc(var(----lgQg, .1rem)*8/8*32); line-height: calc=
(var(----lgQg, .1rem)*8/8*42); }
  ._8yjy_A { font-size: calc(var(----lgQg, .1rem)*8/8*24); line-height: cal=
c(var(----lgQg, .1rem)*8/8*32); }
  ._7ATl0g { font-size: calc(var(----lgQg, .1rem)*8/8*20); line-height: cal=
c(var(----lgQg, .1rem)*8/8*26); }
  ._5Gynyg { font-size: calc(var(----lgQg, .1rem)*8/8*16); line-height: cal=
c(var(----lgQg, .1rem)*8/8*24); }
  .Gmat4w { font-size: calc(var(----lgQg, .1rem)*8/8*21); line-height: calc=
(var(----lgQg, .1rem)*8/8*32); }
  ._7yv_Gw { font-size: calc(var(----lgQg, .1rem)*8/8*18); line-height: cal=
c(var(----lgQg, .1rem)*8/8*28); }
}

.V5s4kA:not(:last-child) { margin-bottom: 8px; }

.VFEjzg { text-align: inherit; }

.aZskFA { text-align: start; }

.B8t6MQ { text-align: center; }

._5NNwYA { text-align: end; }

._6Qh8tg { ---oI_WA: start; --9tGPDg: var(---oI_WA); text-align: var(--9tGP=
Dg); }

@media (min-width: 600px) {
  ._6Qh8tg { --JYyxTg: var(---oI_WA); --9tGPDg: var(--JYyxTg); }
}

@media (min-width: 900px) {
  ._6Qh8tg { --_mu1OA: var(--JYyxTg); --9tGPDg: var(--_mu1OA); }
}

@media (min-width: 1200px) {
  ._6Qh8tg { --xbU4Pw: var(--_mu1OA); --9tGPDg: var(--xbU4Pw); }
}

@media (min-width: 1650px) {
  ._6Qh8tg { --Y10-TA: var(--xbU4Pw); --9tGPDg: var(--Y10-TA); }
}

.u16U_g { color: var(--VcZbvQ); }

.Ywwu0g { color: var(--UpESEg); }

.QxuLlQ { color: var(--PRQgyw); }

.mHp84g { color: var(--NRkSiw); }

.NYWksw { color: var(--gdRMVA); }

.XO4CLg { color: var(--cVPmKw); }

.JLdG4g { color: var(--vCqPYw); }

.T5LNnw { color: inherit; }

.light { --Wc1zKQ: rgba(64,87,109,.07); }

.dark { --Wc1zKQ: hsla(0,0%,100%,.15); }

.gr4YYw { direction: ltr; display: inline-flex; }

.gr4YYw .FLBiAQ { margin: 0px 2px; }

.gr4YYw .FLBiAQ:first-child { margin-left: 0px; }

.gr4YYw .FLBiAQ:last-child { margin-right: 0px; }

.FLBiAQ { border-radius: 4px; box-sizing: border-box; display: inline-block=
; }

.FLBiAQ.Iu18wQ { height: calc(var(----lgQg, .1rem)*8*2); line-height: calc(=
var(----lgQg, .1rem)*8*2); padding: 0px 4px; }

.FLBiAQ._3L5FYw { height: calc(var(----lgQg, .1rem)*8*3); line-height: calc=
(var(----lgQg, .1rem)*8*3); padding: 0px 8px; }

.FLBiAQ.g5oiAA { padding: 0px; text-align: center; }

.FLBiAQ.Iu18wQ.g5oiAA { width: calc(var(----lgQg, .1rem)*8*2); }

.FLBiAQ._3L5FYw.g5oiAA { width: calc(var(----lgQg, .1rem)*8*3); }

.FLBiAQ { background-color: var(--Wc1zKQ); color: var(--VcZbvQ); }

.lRiAhg { height: 100vh; left: 0px; position: fixed; top: 0px; width: 100vw=
; }

.IRiUGg { pointer-events: none; }

.FJA3UA { display: contents; }

.Jk3VHQ { box-shadow: inset 0 0 0 1px var(--OuCkCQ); box-sizing: border-box=
; max-width: 256px; min-height: 24px; }

.W2jr_g { height: 100%; width: 100%; }

.SgV0LQ, .wzcRhw { overflow-wrap: anywhere; }

.Id25FA { pointer-events: none; }

.wlcUXw { display: block; margin: -1px; }

._1TGi_Q { fill: rgb(37, 38, 39); }

.WaZAtA { fill: rgba(255, 255, 255, 0.15); }

.DJQkSg, ._7V44Gw { margin: 4px 0px; }

._833hQ { background: none; border: none; color: inherit; cursor: pointer; =
font: inherit; height: 100%; margin: 0px; padding: 0px; text-transform: inh=
erit; user-select: none; width: 100%; }

.LQzFZw { --mgu_Pg: transparent; --E4StsQ: transparent; --FUwsWA: var(--mgu=
_Pg); --y9w-wA: var(--mgu_Pg); --YOyfXQ: var(--mgu_Pg); --cQPFXw: var(--E4S=
tsQ); --xWQ3Xw: var(--y9w-wA); --a7z0ig: var(--E4StsQ); --1E1JAw: var(--FUw=
sWA); --7P7eLw: var(--xWQ3Xw); --YTzbKA: var(--YOyfXQ); --DlUg2Q: var(--cQP=
FXw); --kqElOA: 0px; --aYAjow: 0px; --yku7aA: transparent; --YH_Pkg: var(--=
yku7aA); --VyR2dQ: var(--yku7aA); --AGdIGA: var(--YH_Pkg); align-items: cen=
ter; background-color: var(--mgu_Pg); border: var(--kqElOA) solid var(--yku=
7aA); border-radius: 8px; box-sizing: border-box; color: var(--E4StsQ); cur=
sor: pointer; display: inline-flex; height: calc(var(----lgQg, .1rem)*8*5);=
 max-width: 100%; min-width: 80px; vertical-align: middle; }

.LQzFZw.aqbYPg:hover { background-color: var(--FUwsWA); }

.LQzFZw.LQzFZw:active { background-color: var(--y9w-wA); }

.LQzFZw.LQzFZw.j5ZKaw { background-color: var(--mgu_Pg); }

.LQzFZw.LQzFZw.bfFHbg { background-color: var(--YOyfXQ); color: var(--cQPFX=
w); }

.LQzFZw.ne53xg { background-color: var(--xWQ3Xw); border-color: var(--VyR2d=
Q); color: var(--a7z0ig); }

.LQzFZw.ne53xg.aqbYPg:hover { background-color: var(--1E1JAw); }

.LQzFZw.LQzFZw.ne53xg:active { background-color: var(--7P7eLw); }

.LQzFZw.LQzFZw.ne53xg.bfFHbg { background-color: var(--YTzbKA); border-colo=
r: var(--AGdIGA); color: var(--DlUg2Q); }

.LQzFZw.i0zbxA, .LQzFZw.i0zbxA.aqbYPg:hover, .LQzFZw.i0zbxA:active { backgr=
ound-color: var(--y9w-wA); color: var(--E4StsQ); }

.LQzFZw.ne53xg.i0zbxA, .LQzFZw.ne53xg.i0zbxA.aqbYPg:hover, .LQzFZw.ne53xg.i=
0zbxA:active { background-color: var(--7P7eLw); color: var(--a7z0ig); }

.rV61VQ { --mgu_Pg: var(--eGVbng); --E4StsQ: var(--d1p99w); --FUwsWA: var(-=
-M5_pvA); --y9w-wA: var(--boKKWg); --YOyfXQ: var(--oqurdw); --cQPFXw: var(-=
-17LfHw); }

.Z3nT2A { --mgu_Pg: var(--EgWgfg); --E4StsQ: var(--REcY5g); --FUwsWA: var(-=
-X3--Zg); --y9w-wA: var(--xfy86Q); --YOyfXQ: var(--p53f_Q); --cQPFXw: var(-=
-XajtPQ); --xWQ3Xw: var(--FVk7Ew); --a7z0ig: var(--_RN1Dg); --1E1JAw: var(-=
-2-zmYA); --7P7eLw: var(--ySYdsQ); --YTzbKA: var(--aMXh3A); --DlUg2Q: var(-=
-8fGzbw); --kqElOA: 1px; --yku7aA: var(--620Maw); --VyR2dQ: var(--TBPmDQ); =
--AGdIGA: var(--UzSy6g); }

.unS_Qw { --mgu_Pg: var(--ob8tTA); --E4StsQ: var(--QeQ0Dw); --FUwsWA: var(-=
-MghLXQ); --y9w-wA: var(--3R4u8w); --YOyfXQ: var(--TwiLcg); --cQPFXw: var(-=
-TZOI7A); --xWQ3Xw: var(--SZMkXA); --a7z0ig: var(--8Ex5gA); --1E1JAw: var(-=
-1zesEA); --7P7eLw: var(--AMxRgw); --YTzbKA: var(--BZ60Jw); --DlUg2Q: var(-=
-spIP2A); }

._9KQGjA { --mgu_Pg: var(--KtXlRg); --E4StsQ: var(--6u-yJQ); --FUwsWA: var(=
--QADODw); --y9w-wA: var(--kTBxcw); --YOyfXQ: var(--HxK_kw); --cQPFXw: var(=
--J0YKvA); }

.e7m_OA { --mgu_Pg: var(--jTT_jQ); --E4StsQ: var(--eLjurg); --FUwsWA: var(-=
-2hPbag); --y9w-wA: var(--nRrzRQ); --YOyfXQ: var(---Xfh1Q); --cQPFXw: var(-=
--Evg2A); }

.XUExdA { --mgu_Pg: transparent; --E4StsQ: var(--8jnd6g); --cQPFXw: var(--P=
RQgyw); }

.Ao21pw { --mgu_Pg: transparent; --E4StsQ: var(--UpESEg); --cQPFXw: var(--P=
RQgyw); }

._9U4ptw { --mgu_Pg: hsla(0,0%,100%,.9); --E4StsQ: #0d1216; --FUwsWA: #fff;=
 --y9w-wA: hsla(0,0%,100%,.8); --YOyfXQ: #ffffffb2; --cQPFXw: #0e1318b2; }

.zLV7FA { --mgu_Pg: hsla(0,0%,100%,.15); --E4StsQ: #fff; --FUwsWA: hsla(0,0=
%,100%,.15); --y9w-wA: hsla(0,0%,100%,.2); --YOyfXQ: hsla(0,0%,100%,.15); -=
-cQPFXw: hsla(0,0%,100%,.7); }

.pzABOw { --mgu_Pg: transparent; --E4StsQ: #fff; --FUwsWA: hsla(0,0%,100%,.=
15); --y9w-wA: hsla(0,0%,100%,.15); --YOyfXQ: transparent; --cQPFXw: hsla(0=
,0%,100%,.7); }

._3FvZZg.LQzFZw { transition: background-color 0.1s linear 0s, border-color=
 0.1s linear 0s, color 0.1s linear 0s; }

.mr_06Q { isolation: isolate; position: relative; }

.mr_06Q::before { border-radius: 8px; content: ""; height: 100%; left: 50%;=
 min-height: 44px; min-width: 44px; position: absolute; top: 50%; transform=
: translate(-50%, -50%); width: 100%; }

.V_p1oA.mr_06Q::before { border-radius: 9999px; }

._8ERLTg { outline: none; }

.O93RRw, .h69Neg { min-width: unset; }

.O93RRw { border-radius: 4px; height: calc(var(----lgQg, .1rem)*8*3); paddi=
ng: calc(2px - var(--kqElOA)); }

.xSjJ4w { width: calc(var(----lgQg, .1rem)*8*3); }

.SEkZ4w { --aYAjow: 8px; border-radius: 4px; height: calc(var(----lgQg, .1r=
em)*8*3.5); min-width: unset; padding: 0 calc(12px - var(--kqElOA)); }

.XyeOCA { width: calc(var(----lgQg, .1rem)*8*3.5); }

.f5yKmw { --aYAjow: 4px; height: calc(var(----lgQg, .1rem)*8*4); min-width:=
 unset; padding: 0 calc(8px - var(--kqElOA)); }

.gi5pqg { width: calc(var(----lgQg, .1rem)*8*4); }

._4_iekA { --aYAjow: 8px; height: calc(var(----lgQg, .1rem)*8*5); padding: =
0 calc(16px - var(--kqElOA)); }

.h5mTDw { width: calc(var(----lgQg, .1rem)*8*5); }

.KRcKHA { --aYAjow: 10px; height: calc(var(----lgQg, .1rem)*8*8); padding: =
0 calc(26px - var(--kqElOA)); }

.hTpftg { width: calc(var(----lgQg, .1rem)*8*8); }

._3oHQrw { display: flex; width: 100%; }

.xdqtjA { justify-content: start; }

.j34Zww { justify-content: center; }

.biNPNg { justify-content: end; }

.bfFHbg { cursor: not-allowed; }

.LQzFZw > .khPe7Q { display: inline-block; max-width: 100%; overflow: hidde=
n; text-overflow: ellipsis; white-space: nowrap; }

.O93RRw > .khPe7Q { line-height: 1; }

.j34Zww > .khPe7Q { margin: auto; }

.j34Zww.MCgm0w > .khPe7Q, .j34Zww.uIDahA > .khPe7Q { flex: initial; margin-=
left: 0px; margin-right: 0px; }

._3oHQrw > .khPe7Q { flex: 1 1 0%; }

._3oHQrw.xdqtjA > .khPe7Q { text-align: start; }

._3oHQrw.biNPNg > .khPe7Q { text-align: end; }

.vxQy1w { align-items: center; display: flex; flex-shrink: 0; justify-conte=
nt: center; }

.MCgm0w .vxQy1w { margin: 0 var(--aYAjow) 0 calc(var(--aYAjow)*-1); }

.uIDahA .vxQy1w { margin: 0 calc(var(--aYAjow)*-1) 0 var(--aYAjow); }

.PvuXpA { background: var(--4RaSjg); border-radius: 9999px; box-shadow: var=
(--wlsoXA); display: block; width: fit-content; }

.Io4lkg { display: inline-flex; }

.j5ZKaw { cursor: wait; position: relative; }

._7vwyYA { align-items: center; display: flex; height: 100%; justify-conten=
t: center; left: 0px; position: absolute; top: 0px; width: 100%; }

.j5ZKaw > .khPe7Q, .j5ZKaw > .vxQy1w:not(._7vwyYA) { opacity: 0; }

._3FvZZg > .khPe7Q, ._3FvZZg > .vxQy1w:not(._7vwyYA) { transition: opacity =
0.15s ease-in-out 0s; }

.rV61VQ { outline-offset: 3px; }

.pzABOw._0_YFAw:not(.bfFHbg), .pzABOw._0_YFAw:not(.bfFHbg) .khPe7Q { color:=
 rgb(255, 255, 255); }

.Ao21pw, .XUExdA { min-width: 0px; }

.XUExdA.KRcKHA { padding: 0 calc(12px - var(--kqElOA)); }

.XUExdA._4_iekA { padding: 0 calc(10px - var(--kqElOA)); }

.XUExdA.f5yKmw { padding: 0 calc(6px - var(--kqElOA)); }

.XUExdA.SEkZ4w { padding: 0 calc(10px - var(--kqElOA)); }

.XUExdA.aqbYPg:hover { color: var(---2QwGw); text-decoration: underline; }

.XUExdA.XUExdA:active { color: var(--KgLrHA); }

.XUExdA.bfFHbg.bfFHbg { color: var(--PRQgyw); text-decoration: none; }

.XUExdA.j5ZKaw.j5ZKaw { color: var(--8jnd6g); }

.Ao21pw { color: var(--UpESEg); padding: 0 calc(2px - var(--kqElOA)); }

.Ao21pw.aqbYPg:active, .Ao21pw.aqbYPg:focus, .Ao21pw.aqbYPg:hover, .Ao21pw:=
active, .Ao21pw:focus { color: var(--VcZbvQ); }

.Ao21pw.bfFHbg.bfFHbg { color: var(--PRQgyw); }

.Ao21pw.j5ZKaw.j5ZKaw { color: var(--VcZbvQ); }

._0_YFAw { flex-direction: column; height: auto; min-width: 64px; padding: =
calc(8px - var(--kqElOA)); }

._0_YFAw .khPe7Q { padding: 4px 0px 0px; }

.V_p1oA { border-radius: 9999px; }

.V_p1oA.SEkZ4w { max-height: calc(var(----lgQg, .1rem)*8*4); max-width: cal=
c(var(----lgQg, .1rem)*8*4); min-height: calc(var(----lgQg, .1rem)*8*4); mi=
n-width: calc(var(----lgQg, .1rem)*8*4); }

.V_p1oA.f5yKmw { max-height: calc(var(----lgQg, .1rem)*8*5); max-width: cal=
c(var(----lgQg, .1rem)*8*5); min-height: calc(var(----lgQg, .1rem)*8*5); mi=
n-width: calc(var(----lgQg, .1rem)*8*5); }

.V_p1oA._4_iekA { max-height: calc(var(----lgQg, .1rem)*8*6); max-width: ca=
lc(var(----lgQg, .1rem)*8*6); min-height: calc(var(----lgQg, .1rem)*8*6); m=
in-width: calc(var(----lgQg, .1rem)*8*6); }

.V_p1oA.KRcKHA { max-height: calc(var(----lgQg, .1rem)*8*7); max-width: cal=
c(var(----lgQg, .1rem)*8*7); min-height: calc(var(----lgQg, .1rem)*8*7); mi=
n-width: calc(var(----lgQg, .1rem)*8*7); }

.REuuag { align-items: center; display: flex; flex-direction: column; }

.bxwG2Q { width: calc(16px + var(----lgQg, .1rem)*8*4); }

._0MwQw { width: calc(16px + var(----lgQg, .1rem)*8*5); }

._ibx9A { width: calc(16px + var(----lgQg, .1rem)*8*6); }

.WxBMug { width: calc(16px + var(----lgQg, .1rem)*8*7); }

.BHMEDw { margin-top: 12px; overflow-wrap: break-word; width: 100%; }

.BHMEDw, .Xj0kcw { text-align: center; }

.Xj0kcw { box-sizing: border-box; text-decoration: none; }

.Xj0kcw:focus-visible { outline-style: auto; }

html { --safe-area-inset-top: 0px; --safe-area-inset-bottom: 0px; --safe-ar=
ea-inset-left: 0px; --safe-area-inset-right: 0px; }

@supports (height:env(safe-area-inset-top)) {
  html { --safe-area-inset-top: env(safe-area-inset-top); --safe-area-inset=
-bottom: env(safe-area-inset-bottom); --safe-area-inset-left: env(safe-area=
-inset-left); --safe-area-inset-right: env(safe-area-inset-right); }
}

.MbkImg { left: 0px; margin: 0px auto; max-width: 480px; position: fixed; r=
ight: 0px; text-align: center; top: 0px; width: fit-content; }

.MbkImg.RDTSdw { top: var(--safe-area-inset-top); }

.ncH3wQ { background-color: var(--4RaSjg); border-radius: 12px; box-shadow:=
 var(--ej6pBg); box-sizing: border-box; color: var(--VcZbvQ); display: inli=
ne-flex; margin-top: 16px; max-width: 480px; min-height: 48px; padding: 8px=
; text-align: start; width: fit-content; }

.ncH3wQ.anbz7g { padding: 0px; }

.ncH3wQ._5sEdEQ { align-items: center; flex-wrap: wrap; justify-content: fl=
ex-end; }

.ncH3wQ.asO08A { border-radius: 12px; }

.ncH3wQ.asO08A.anbz7g, .vkX3IA { padding: 8px; }

.vkX3IA { align-items: center; display: flex; flex: 1 1 auto; margin-top: 1=
px; }

.ncH3wQ > .vkX3IA { padding: 0px 16px; }

.ncH3wQ.anbz7g > .vkX3IA { padding: 0px 24px 0px 8px; }

.ncH3wQ.asO08A > .vkX3IA { padding: 0px 8px; width: 100%; }

.ncH3wQ.anbz7g._5sEdEQ > .vkX3IA { padding: 0px 16px 0px 8px; }

.ncH3wQ.anbz7g.asO08A > .vkX3IA { align-items: flex-start; }

.ncH3wQ.asO08A._5sEdEQ > .vkX3IA { padding: 0px 16px 0px 8px; }

.ncH3wQ.anbz7g ._5pDUDA, .ncH3wQ.asO08A ._5pDUDA { padding: 8px 0px; }

._5pDUDA { color: var(--VcZbvQ); }

.A3zffA { align-items: center; border-radius: 100%; display: flex; flex: 0 =
0 auto; height: 32px; justify-content: center; margin-right: 16px; overflow=
: hidden; width: 32px; }

.ncH3wQ.asO08A .A3zffA { margin: calc(var(----lgQg, .1rem)*8) 16px 8px 0; }

.ou_cHQ { color: var(--VcZbvQ); }

.anbz7g .ou_cHQ { margin: 8px; }

.ncH3wQ:not(.anbz7g) .hZhfug.WUWMlA { margin-left: 8px; }

.ncH3wQ:not(.asO08A) > .ou_cHQ { border-radius: 8px; height: 32px; margin-l=
eft: 0px; }

.ncH3wQ.asO08A > .ou_cHQ { margin: 0px 8px 8px; }

.T0th0w { height: 400px; left: 50%; pointer-events: none; position: absolut=
e; top: 50%; transform: translate(-50%, -50%); width: 400px; }

@media (max-width: 599px) {
  .MbkImg, .ncH3wQ { max-width: calc(100% - 8px); }
  .MbkImg .ncH3wQ { max-width: 100%; }
}

.uhYhuQ { display: flex; flex-direction: column; justify-content: center; m=
in-width: 200px; position: relative; width: 100%; }

.uhYhuQ.cFgKZg { flex-grow: 1; }

.A_A_EQ._6NykrQ._9oNc7g .jHvOGA, .A_A_EQ._9nPhuA .jHvOGA { border-radius: 8=
px 8px 0px 0px; overflow: clip; }

.A_A_EQ._6NykrQ._9oNc7g .jHvOGA { padding-left: var(--32_B3g); padding-righ=
t: var(--32_B3g); }

.A_A_EQ.zHLcKw._9oNc7g .jHvOGA { padding-left: var(--gTQdWA); padding-right=
: var(--gTQdWA); }

.A_A_EQ.K8jPrA { --32_B3g: calc(var(--zfrIqg, 1)*var(--IASxjg, calc(8px * 1=
0))); --s5PtIA: calc(var(--zfrIqg, 1)*var(--Qh2GeQ, calc(8px * 3))); --jdVb=
7Q: calc(var(--zfrIqg, 1)*var(--jBkZgw)); --gTQdWA: calc((100% - var(--jdVb=
7Q))/2); --Z_w7Mg: calc(var(--jdVb7Q) + var(--32_B3g)*2); display: flex; fl=
ex-direction: column; position: relative; width: 100%; }

@supports (width:round(10px,5px)) {
  .A_A_EQ { --Z_w7Mg: round(up,calc(var(--jdVb7Q) + var(--32_B3g)*2),1px); =
}
}

.A_A_EQ.cFgKZg { flex-grow: 1; }

.A_A_EQ._6NykrQ._9oNc7g { margin: var(--Qh2GeQ,24px) 0; }

.A_A_EQ._9nPhuA { margin: 0px; }

.EY7A6g { background: var(--q_W0gA); }

.EY7A6g.fWBaaw { pointer-events: auto; }

.A_A_EQ._6NykrQ._9oNc7g .EY7A6g { margin: auto; }

.A_A_EQ._6NykrQ._9oNc7g .EY7A6g, .A_A_EQ._9nPhuA .EY7A6g { border-radius: 8=
px; box-shadow: rgba(64, 87, 109, 0.3) 0px 4px 32px -14px; width: var(--Z_w=
7Mg); }

.A_A_EQ._9nPhuA .EY7A6g { margin: 0px; min-height: calc(var(--Z_w7Mg)*var(-=
-8dk56g, 1.4)); }

.EY7A6g.K8jPrA { display: flex; flex-direction: column; }

.EY7A6g.cFgKZg { flex-grow: 1; }

.A_A_EQ.zHLcKw._9oNc7g .slEAMg { padding-left: var(--gTQdWA); padding-right=
: var(--gTQdWA); padding-top: calc(var(--32_B3g) + var(--s5PtIA)); width: 1=
00%; }

.A_A_EQ._6NykrQ._9oNc7g.PEJIJQ .slEAMg:not(._7Oe2g), .A_A_EQ._9nPhuA._9oNc7=
g.PEJIJQ .slEAMg:not(._7Oe2g), .A_A_EQ.zHLcKw._9oNc7g.PEJIJQ .slEAMg:not(._=
7Oe2g) { padding-top: var(--s5PtIA); }

.A_A_EQ._6NykrQ._9oNc7g .slEAMg { padding-left: var(--32_B3g); padding-righ=
t: var(--32_B3g); padding-top: var(--32_B3g); width: var(--Z_w7Mg); }

.A_A_EQ._6NykrQ .EY7A6g.DHLoHA, .A_A_EQ._6NykrQ._9oNc7g .slEAMg { min-heigh=
t: calc(var(--Z_w7Mg)*var(--8dk56g, 1.4)); }

.A_A_EQ._9nPhuA .slEAMg { padding-top: var(--32_B3g); }

.A_A_EQ._9nPhuA.PEJIJQ .slEAMg { padding-top: var(--s5PtIA); }

.A_A_EQ._9nPhuA .jHvOGA, .A_A_EQ._9nPhuA .slEAMg { padding-left: var(--32_B=
3g); padding-right: var(--32_B3g); }

.A_A_EQ.zHLcKw .slEAMg { box-sizing: border-box; height: 100%; }

.A_A_EQ._6NykrQ.hzDeOA .slEAMg, .A_A_EQ.zHLcKw.hzDeOA .slEAMg { padding-top=
: var(--s5PtIA); width: 100%; }

.A_A_EQ._6NykrQ.hzDeOA.qTk1Zw .jHvOGA, .A_A_EQ._6NykrQ.hzDeOA.qTk1Zw .slEAM=
g, .A_A_EQ.zHLcKw.hzDeOA.qTk1Zw .jHvOGA, .A_A_EQ.zHLcKw.hzDeOA.qTk1Zw .slEA=
Mg { padding-left: max(56px,var(--gTQdWA)); padding-right: max(56px,var(--g=
TQdWA)); }

.A_A_EQ._6NykrQ.hzDeOA.LVqQ8g .jHvOGA, .A_A_EQ._6NykrQ.hzDeOA.LVqQ8g .slEAM=
g, .A_A_EQ.zHLcKw.hzDeOA.LVqQ8g .jHvOGA, .A_A_EQ.zHLcKw.hzDeOA.LVqQ8g .slEA=
Mg { padding-left: max(var(--Qh2GeQ,24px),var(--gTQdWA)); padding-right: ma=
x(var(--Qh2GeQ,24px),var(--gTQdWA)); }

.A_A_EQ._6NykrQ.KZ_weQ .slEAMg, .A_A_EQ._9nPhuA.KZ_weQ .slEAMg, .A_A_EQ.zHL=
cKw.KZ_weQ .slEAMg { padding-bottom: var(--IASxjg,80px); }

.A_A_EQ._6NykrQ.nuG0Uw .slEAMg, .A_A_EQ._9nPhuA.nuG0Uw .slEAMg, .A_A_EQ.zHL=
cKw.nuG0Uw .slEAMg { padding-bottom: 320px; }

.A_A_EQ.iBLXgQ .jHvOGA, .A_A_EQ.iBLXgQ .slEAMg { margin: 0px; padding: 0px =
37px; }

.A_A_EQ.iBLXgQ .jHvOGA { padding-bottom: var(--Qh2GeQ,24px); }

.TemjbA { bottom: 0px; left: 0px; overflow: hidden; pointer-events: none; p=
osition: absolute; top: 0px; width: 100%; }

.A_A_EQ._6NykrQ._9oNc7g .TemjbA, .A_A_EQ._9nPhuA._9oNc7g .TemjbA { bottom: =
calc(var(--Qh2GeQ, calc(8px * 3))*-1); top: calc(var(--Qh2GeQ, calc(8px * 3=
))*-1); }

.FFdctA { height: 0px; overflow: visible; pointer-events: auto; position: a=
bsolute; }

.A_A_EQ.zHLcKw._9oNc7g .FFdctA { left: var(--gTQdWA); top: calc(var(--32_B3=
g) + var(--s5PtIA)); width: var(--jdVb7Q); }

.A_A_EQ._9nPhuA .FFdctA { left: var(--gTQdWA); top: var(--32_B3g); width: v=
ar(--jdVb7Q); }

.A_A_EQ.zHLcKw._9oNc7g.PEJIJQ .FFdctA { top: var(--s5PtIA); }

.A_A_EQ._6NykrQ._9oNc7g .FFdctA { left: var(--gTQdWA); top: calc(var(--32_B=
3g) + var(--Qh2GeQ, calc(8px * 3))); width: var(--jdVb7Q); }

.A_A_EQ._6NykrQ._9oNc7g.PEJIJQ .FFdctA, .A_A_EQ._9nPhuA._9oNc7g.PEJIJQ .FFd=
ctA { top: calc(var(--s5PtIA) + var(--Qh2GeQ, calc(8px * 3))); }

.A_A_EQ._6NykrQ.hzDeOA .FFdctA, .A_A_EQ.zHLcKw.hzDeOA .FFdctA { top: var(--=
s5PtIA); }

.A_A_EQ._6NykrQ.hzDeOA.qTk1Zw .FFdctA, .A_A_EQ.zHLcKw.hzDeOA.qTk1Zw .FFdctA=
 { left: max(56px,var(--gTQdWA)); width: calc(100% - max(calc(7 * 8px), var=
(--gTQdWA))*2); }

.A_A_EQ._6NykrQ.hzDeOA.LVqQ8g .FFdctA, .A_A_EQ.zHLcKw.hzDeOA.LVqQ8g .FFdctA=
 { left: max(var(--Qh2GeQ,24px),var(--gTQdWA)); width: calc(100% - var(--M4=
QwMQ)*2); }

.GWlkzQ { height: 0px; overflow: visible; position: absolute; width: 56px; =
}

.A_A_EQ.zHLcKw._9oNc7g .GWlkzQ { right: calc(var(--gTQdWA) - 64px); top: ca=
lc(var(--32_B3g) + var(--s5PtIA)); }

.A_A_EQ.zHLcKw._9oNc7g.PEJIJQ .GWlkzQ { top: var(--s5PtIA); }

.A_A_EQ._6NykrQ._9oNc7g .GWlkzQ { left: calc(50% + var(--jdVb7Q)/2 + var(--=
32_B3g)); top: var(--32_B3g); }

.A_A_EQ._6NykrQ._9oNc7g.PEJIJQ .GWlkzQ { top: var(--s5PtIA); }

.A_A_EQ._9nPhuA .GWlkzQ { left: calc(50% + var(--jdVb7Q)/2 + var(--32_B3g))=
; top: var(--32_B3g); }

.A_A_EQ._9nPhuA.PEJIJQ .GWlkzQ { top: var(--s5PtIA); }

.A_A_EQ._6NykrQ.hzDeOA.qTk1Zw .GWlkzQ, .A_A_EQ.zHLcKw.hzDeOA.qTk1Zw .GWlkzQ=
 { right: calc(max(calc(7 * 8px), var(--gTQdWA)) - 64px); top: var(--s5PtIA=
); }

.A_A_EQ._6NykrQ.hzDeOA.LVqQ8g .GWlkzQ, .A_A_EQ.zHLcKw.hzDeOA.LVqQ8g .GWlkzQ=
 { right: max(calc(var(--Qh2GeQ, calc(8px * 3)) - 64px),calc(var(--gTQdWA) =
- 64px)); top: var(--s5PtIA); }

.A_A_EQ._9nPhuA.hzDeOA .GWlkzQ { right: 0px; top: var(--s5PtIA); }

.A_A_EQ.iBLXgQ .GWlkzQ { right: 0px; top: 0px; }

.A_A_EQ._6NykrQ.MLv4rg, .A_A_EQ._9nPhuA.MLv4rg, .A_A_EQ.zHLcKw.MLv4rg { opa=
city: 0; }

.EDGwhw, .IjTKUQ { opacity: 1; }

.gBoeXQ { transition: opacity 0.3s ease-out 0s; }

._2nE4kg, ._yjJvw, .gBoeXQ, .tC7HEQ { opacity: 0; }

.AtqzOQ { transition: opacity 0.3s ease-in 0s; }

.AtqzOQ, .vMUaZQ { opacity: 1; }

.A_A_EQ .EY7A6g .slEAMg._7Oe2g { box-sizing: border-box; }

.EDGwhw { height: 0px; }

.T_7v4w { width: 70%; }

.Ebvt8Q { width: 80%; }

@keyframes c2cyRQ {=20
  0% { opacity: 0.07; }
  25% { opacity: 0.05; }
  50% { opacity: 0.07; }
  100% { opacity: 0.07; }
}

.SROlBg { height: calc(var(----lgQg, .1rem)*8/8*64); padding: calc(var(----=
lgQg, .1rem)*8/8*84/2 - var(----lgQg, .1rem)*8/8*64/2) 0; }

.sYjZCQ { height: calc(var(----lgQg, .1rem)*8/8*21); padding: calc(var(----=
lgQg, .1rem)*8/8*32/2 - var(----lgQg, .1rem)*8/8*21/2) 0; }

@media belowsmall {
  .SROlBg { height: calc(var(----lgQg, .1rem)*8/8*32); padding: calc(var(--=
--lgQg, .1rem)*8/8*64/2 - var(----lgQg, .1rem)*8/8*32/2) 0; }
  .sYjZCQ { height: calc(var(----lgQg, .1rem)*8/8*21); padding: calc(var(--=
--lgQg, .1rem)*8/8*32/2 - var(----lgQg, .1rem)*8/8*21/2) 0; }
}

.Ixaoug { background: rgb(13, 18, 22); opacity: 0.07; }

.a8K2Rw { animation: 1.4s ease 0s infinite normal none running c2cyRQ; }

.ZxLskw { height: 100%; width: 100%; }

.ZxLskw, .yJ_zuQ { border-radius: 8px; }

.ag9i9g { display: inline-block; width: 100%; }

.ag9i9g::selection { background: transparent; }

.ql-editor > * { cursor: unset; }

.GSyGMg { position: relative; }

.gk5wYw { display: block; }

.M3AzBQ { display: inline-block; max-width: 100%; }

@media print {
  ._0Fivzw { break-inside: avoid-page; }
}

.wa4m_A .ql-editor { --_d_pTQ: #e7dbff; }

.wa4m_A .ql-editor .inlineElement[class*=3D"comment-"].RCupPw { background-=
color: var(--_d_pTQ,#e7dbff); border-bottom: 2px solid rgb(139, 61, 255); }

.wa4m_A .ql-editor .blockEmbed:not(.blotPageBreakItem)[class*=3D"item-comme=
nt-"] > .ag9i9g.RCupPw > .GSyGMg { outline: 8px solid var(--_d_pTQ,#e7dbff)=
; }

.E8r86A, .cXTiJA { display: flex; justify-content: center; }

.cXTiJA { align-items: center; width: 100%; }

.SNkrHw, .W1ir5A, .cXTiJA { position: relative; }

.SNkrHw { height: 100%; width: 100%; }

._2JFriw, ._5YlOqQ, ._XCmKw, .imy9ug { position: absolute; }

.imy9ug { clip-path: inset(0px); }

.pDMp7w { box-sizing: border-box; font-family: "Canva Sans", "Noto Sans Var=
iable", "Noto Sans", -apple-system, BlinkMacSystemFont, "Segoe UI", Helveti=
ca, Arial, sans-serif; height: 100%; position: absolute; }

.RaA0Nw .pDMp7w, .RaA0Nw .wKvivQ { user-select: text; }

._30B9pw { align-items: flex-start; display: flex; justify-content: inherit=
; min-height: 100%; text-align: inherit; text-overflow: clip; width: 100%; =
}

.G7zH2w { display: contents; }

.qhF5uA { font-feature-settings: "kern" 0, "calt" 0, "liga" 0, "clig" 0, "d=
lig" 0, "hlig" 0; -webkit-font-smoothing: antialiased; text-size-adjust: no=
ne; font-family: unset; font-kerning: none; font-synthesis: none; font-vari=
ant-ligatures: none; letter-spacing: 0px; line-height: 1.4; word-break: nor=
mal; }

.TA4X7w ._2JFriw, .TA4X7w .imy9ug { transform-origin: 0px 0px; }

.WvuqMw ._2JFriw, .WvuqMw .imy9ug { transform-origin: 100% 0px; }

.TA4X7w { direction: ltr; }

.WvuqMw { direction: rtl; }

.qxD1GA { background-color: var(--1MO0IQ); outline: 4px solid var(--jTT_jQ)=
; outline-offset: -4px; }

.SNkrHw:not(.RaA0Nw) .wKvivQ { pointer-events: none; }

.OQx3PQ span { text-decoration-line: underline; }

._99ezUA span { text-decoration-line: line-through; }

.kppAqQ span { text-decoration-line: underline line-through; }

.ZTz_iA { display: grid; grid-template: "fixed-pane row-freeze-pane" "col-f=
reeze-pane unfrozen-pane" 1fr / auto 1fr; }

.ZTz_iA, .i0YQww, .vUKoKg { position: relative; }

.vUKoKg { overflow: hidden; }

._0C8M3w { grid-area: fixed-pane; z-index: 2; }

._7n44yg { grid-area: row-freeze-pane; z-index: 1; }

.fF5r6w { grid-area: col-freeze-pane; z-index: 1; }

.llILYw { grid-area: unfrozen-pane; }

._84KvRA { display: none; }

.BghEng, .TL_RLA { pointer-events: none; }

.BghEng { left: 0px; opacity: 0; overflow: visible; position: fixed; top: 0=
px; width: 100%; }

._682gpw { -webkit-user-drag: none; -webkit-tap-highlight-color: transparen=
t; }

._7vS1Yw { user-select: none; }

.DF_utQ { cursor: auto; outline: none; position: absolute; }

.DF_utQ:hover { cursor: unset; }

.UYkI3g { will-change: transform; }

.Lj8ZqQ { display: none; }

._lzXBg { overflow: hidden; }

._0xkaeQ { pointer-events: auto; }

.eYn1AQ { overflow: hidden; pointer-events: none; position: absolute; }

.JpiJcw { pointer-events: auto; }

._3zDNwA { left: 0px; position: absolute; top: 0px; }

._3zDNwA, ._KMJVg { display: block; height: 100%; width: 100%; }

.Ms_IOA { inset: 0px; position: absolute; }

.E2PFKw { animation-fill-mode: forwards; animation-name: _5Wn9Ig; opacity: =
0; }

@keyframes _5Wn9Ig {=20
  100% { opacity: 1; }
}

.light { --Xj4qXA: 0.07; --CAzrpw: 0.025; }

.dark { --Xj4qXA: 0.15; --CAzrpw: 0.10; }

@keyframes _5bz7wQ {=20
  0% { opacity: var(--Xj4qXA); }
  25% { opacity: var(--CAzrpw); }
  50% { opacity: var(--Xj4qXA); }
  100% { opacity: var(--Xj4qXA); }
}

.IwXXkw { background: var(--VcZbvQ); opacity: var(--Xj4qXA); }

._qImYg { animation: 1.4s ease 0s infinite normal none running _5bz7wQ; }

.RCTcJA { border-radius: 9999px; }

.KOdbkg, .RCTcJA { padding-top: 100%; width: 100%; }

.KOdbkg, ._CObZw { border-radius: 8px; }

._CObZw { height: 100%; width: 100%; }

.JbJFjg { border-radius: 0px; }

.cg8IZQ { border-radius: 8px; }

.J3ejgA { overflow-x: auto; }

.KCCYFA { display: block; }

@media print {
  .KCCYFA { position: absolute; }
}

.BHs_rA a, .Pjs_rA, .WkdUeQ, ._1hWAA a, ._200NbQ, ._6MeQcQ, .iRRpzw a, .lRO=
ewQ, .q57IQQ a, .skMA1A a { color: var(--ZGnFiQ,var(--Y5muMw)); cursor: poi=
nter; text-decoration: underline; }

.WkdUeQ, .iRRpzw a, .lROewQ, .q57IQQ a { --Y5muMw: var(--8jnd6g); }

.WkdUeQ._3bC2IQ:not(._6SenXQ):hover, ._1hWAA a:hover, ._200NbQ._3bC2IQ:not(=
._6SenXQ):hover, .iRRpzw a:hover, .lROewQ._3bC2IQ:not(._6SenXQ):hover, .q57=
IQQ a:hover { --Y5muMw: var(---2QwGw); }

.WkdUeQ:not(._6SenXQ):active, .iRRpzw a:active, .lROewQ:not(._6SenXQ):activ=
e, .q57IQQ a:active { --Y5muMw: var(--KgLrHA); }

.BHs_rA a, ._6MeQcQ { --Y5muMw: var(--FOH6ww); }

.BHs_rA a:active, ._6MeQcQ:not(._6SenXQ):active { --Y5muMw: var(--QclmLg); =
}

.BHs_rA a:hover, ._6MeQcQ._3bC2IQ:not(._6SenXQ):hover { --Y5muMw: var(--jyD=
isg); }

.Pjs_rA, ._1hWAA a, ._200NbQ, .hGfU2Q, .pTsp_A, .skMA1A a, .uYt64w a { colo=
r: inherit; }

.lROewQ, .q57IQQ a { font-weight: 600; }

.Pjs_rA, .pTsp_A, .skMA1A a, .uYt64w a { text-decoration: none; }

.Pjs_rA._3bC2IQ:not(._6SenXQ):hover, .skMA1A a:hover { text-decoration: und=
erline; }

.pTsp_A._3bC2IQ:not(._6SenXQ):hover, .uYt64w a:hover { text-decoration: non=
e; }

._6SenXQ { --ZGnFiQ: var(--jDAtXQ); cursor: not-allowed; }

.b_Y0Sw { margin-left: 4px; white-space: nowrap; }

.V5YmAg, .b_Y0Sw { user-select: none; }

.lRtCyw { color: inherit; font-size: inherit; margin: -4px; max-width: unse=
t; vertical-align: baseline; }

.aMUpPw .lRtCyw { margin: -8px; }

.WoE5Nw { display: flex; }

.GOCM1Q { height: 100%; left: 0px; position: absolute; top: 0px; width: 100=
%; }

.RlPnoQ { cursor: auto; }

._0r0u9w { display: block; }

.nYFGlQ { align-items: center; display: flex; }

.uzRrVg { color: initial; font-family: initial; font-feature-settings: init=
ial; font-kerning: initial; font-optical-sizing: initial; font-palette: ini=
tial; font-size: 1rem; font-stretch: initial; font-style: initial; font-syn=
thesis: initial; font-variant: initial; font-variation-settings: initial; f=
ont-weight: initial; forced-color-adjust: initial; position: initial; text-=
orientation: initial; text-rendering: initial; -webkit-font-smoothing: init=
ial; -webkit-locale: initial; -webkit-text-orientation: initial; -webkit-wr=
iting-mode: initial; writing-mode: initial; zoom: initial; accent-color: in=
itial; place-content: initial; place-items: initial; place-self: initial; a=
lignment-baseline: initial; animation-composition: initial; animation: init=
ial; app-region: initial; appearance: initial; aspect-ratio: initial; backd=
rop-filter: initial; backface-visibility: initial; background: initial; bac=
kground-blend-mode: initial; baseline-shift: initial; baseline-source: init=
ial; block-size: initial; border-block: initial; border: initial; border-ra=
dius: initial; border-collapse: initial; border-end-end-radius: initial; bo=
rder-end-start-radius: initial; border-inline: initial; border-start-end-ra=
dius: initial; border-start-start-radius: initial; inset: initial; box-shad=
ow: initial; box-sizing: border-box; break-after: initial; break-before: in=
itial; break-inside: initial; buffered-rendering: initial; caption-side: in=
itial; caret-color: initial; clear: initial; clip: initial; clip-path: init=
ial; clip-rule: initial; color-interpolation: initial; color-interpolation-=
filters: initial; color-rendering: initial; color-scheme: initial; columns:=
 initial; column-fill: initial; gap: initial; column-rule: initial; column-=
span: initial; contain: initial; contain-intrinsic-block-size: initial; con=
tain-intrinsic-size: initial; contain-intrinsic-inline-size: initial; conta=
iner: initial; content: initial; content-visibility: initial; counter-incre=
ment: initial; counter-reset: initial; counter-set: initial; cursor: initia=
l; cx: initial; cy: initial; d: initial; display: block; dominant-baseline:=
 initial; empty-cells: initial; fill: initial; fill-opacity: initial; fill-=
rule: initial; filter: initial; flex: initial; flex-flow: initial; float: i=
nitial; flood-color: initial; flood-opacity: initial; grid: initial; grid-a=
rea: initial; height: initial; hyphenate-character: initial; hyphenate-limi=
t-chars: initial; hyphens: initial; image-orientation: initial; image-rende=
ring: initial; initial-letter: initial; inline-size: initial; inset-block: =
initial; inset-inline: initial; isolation: initial; letter-spacing: initial=
; lighting-color: initial; line-break: initial; line-height: initial; list-=
style: initial; margin-block: initial; margin: initial; margin-inline: init=
ial; marker: initial; mask: initial; mask-type: initial; math-depth: initia=
l; math-shift: initial; math-style: initial; max-block-size: initial; max-h=
eight: initial; max-inline-size: initial; max-width: initial; min-block-siz=
e: initial; min-height: initial; min-inline-size: initial; min-width: initi=
al; mix-blend-mode: initial; object-fit: initial; object-position: initial;=
 object-view-box: initial; offset: initial; opacity: initial; order: initia=
l; orphans: initial; outline: initial; outline-offset: initial; overflow-an=
chor: initial; overflow-clip-margin: initial; overflow-wrap: initial; overf=
low: initial; overlay: initial; overscroll-behavior-block: initial; overscr=
oll-behavior-inline: initial; overscroll-behavior: initial; padding-block: =
initial; padding: initial; padding-inline: initial; page: initial; page-ori=
entation: initial; paint-order: initial; perspective: initial; perspective-=
origin: initial; pointer-events: initial; quotes: initial; r: initial; resi=
ze: initial; rotate: initial; ruby-position: initial; rx: initial; ry: init=
ial; scale: initial; scroll-behavior: initial; scroll-margin-block: initial=
; scroll-margin: initial; scroll-margin-inline: initial; scroll-padding-blo=
ck: initial; scroll-padding: initial; scroll-padding-inline: initial; scrol=
l-snap-align: initial; scroll-snap-stop: initial; scroll-snap-type: initial=
; scroll-timeline: initial; scrollbar-color: initial; scrollbar-gutter: ini=
tial; scrollbar-width: initial; shape-image-threshold: initial; shape-margi=
n: initial; shape-outside: initial; shape-rendering: initial; size: initial=
; speak: initial; stop-color: initial; stop-opacity: initial; stroke: initi=
al; stroke-dasharray: initial; stroke-dashoffset: initial; stroke-linecap: =
initial; stroke-linejoin: initial; stroke-miterlimit: initial; stroke-opaci=
ty: initial; stroke-width: initial; tab-size: initial; table-layout: initia=
l; text-align: initial; text-align-last: initial; text-anchor: initial; tex=
t-combine-upright: initial; text-decoration: initial; text-decoration-skip-=
ink: initial; text-emphasis: initial; text-emphasis-position: initial; text=
-indent: initial; text-overflow: initial; text-shadow: initial; text-size-a=
djust: initial; text-transform: initial; text-underline-offset: initial; te=
xt-underline-position: initial; white-space: initial; timeline-scope: initi=
al; touch-action: initial; transform: initial; transform-box: initial; tran=
sform-origin: initial; transform-style: initial; transition: initial; trans=
late: initial; user-select: initial; vector-effect: initial; vertical-align=
: initial; view-timeline: initial; view-transition-name: initial; visibilit=
y: initial; border-spacing: initial; -webkit-box-align: initial; -webkit-bo=
x-decoration-break: initial; -webkit-box-direction: initial; -webkit-box-fl=
ex: initial; -webkit-box-ordinal-group: initial; -webkit-box-orient: initia=
l; -webkit-box-pack: initial; -webkit-box-reflect: initial; -webkit-line-br=
eak: initial; -webkit-line-clamp: initial; -webkit-mask-box-image: initial;=
 -webkit-print-color-adjust: initial; -webkit-rtl-ordering: initial; -webki=
t-ruby-position: initial; -webkit-tap-highlight-color: initial; -webkit-tex=
t-combine: initial; -webkit-text-decorations-in-effect: initial; -webkit-te=
xt-fill-color: initial; -webkit-text-security: initial; -webkit-text-stroke=
: initial; -webkit-user-drag: initial; -webkit-user-modify: initial; widows=
: initial; width: initial; will-change: initial; word-break: initial; word-=
spacing: initial; x: initial; y: initial; z-index: initial; }

.VQmDAg { color: initial; font-family: initial; font-feature-settings: init=
ial; font-kerning: initial; font-optical-sizing: initial; font-palette: ini=
tial; font-size: 1rem; font-stretch: initial; font-style: initial; font-syn=
thesis: initial; font-variant: initial; font-variation-settings: initial; f=
ont-weight: initial; forced-color-adjust: initial; position: initial; text-=
orientation: initial; text-rendering: initial; -webkit-font-smoothing: init=
ial; -webkit-locale: initial; -webkit-text-orientation: initial; -webkit-wr=
iting-mode: initial; writing-mode: initial; zoom: initial; accent-color: in=
itial; place-content: initial; place-items: initial; place-self: initial; a=
lignment-baseline: initial; animation-composition: initial; animation: init=
ial; app-region: initial; appearance: initial; aspect-ratio: initial; backd=
rop-filter: initial; backface-visibility: initial; background: initial; bac=
kground-blend-mode: initial; baseline-shift: initial; baseline-source: init=
ial; block-size: initial; border-block: initial; border: initial; border-ra=
dius: initial; border-collapse: initial; border-end-end-radius: initial; bo=
rder-end-start-radius: initial; border-inline: initial; border-start-end-ra=
dius: initial; border-start-start-radius: initial; inset: initial; box-shad=
ow: initial; box-sizing: border-box; break-after: initial; break-before: in=
itial; break-inside: initial; buffered-rendering: initial; caption-side: in=
itial; caret-color: initial; clear: initial; clip: initial; clip-path: init=
ial; clip-rule: initial; color-interpolation: initial; color-interpolation-=
filters: initial; color-rendering: initial; color-scheme: initial; columns:=
 initial; column-fill: initial; gap: initial; column-rule: initial; column-=
span: initial; contain: initial; contain-intrinsic-block-size: initial; con=
tain-intrinsic-size: initial; contain-intrinsic-inline-size: initial; conta=
iner: initial; content: initial; content-visibility: initial; counter-incre=
ment: initial; counter-reset: initial; counter-set: initial; cursor: initia=
l; cx: initial; cy: initial; d: initial; display: block; dominant-baseline:=
 initial; empty-cells: initial; fill: initial; fill-opacity: initial; fill-=
rule: initial; filter: initial; flex: initial; flex-flow: initial; float: i=
nitial; flood-color: initial; flood-opacity: initial; grid: initial; grid-a=
rea: initial; height: initial; hyphenate-character: initial; hyphenate-limi=
t-chars: initial; hyphens: initial; image-orientation: initial; image-rende=
ring: initial; initial-letter: initial; inline-size: initial; inset-block: =
initial; inset-inline: initial; isolation: initial; letter-spacing: initial=
; lighting-color: initial; line-break: initial; line-height: initial; list-=
style: initial; margin-block: initial; margin: initial; margin-inline: init=
ial; marker: initial; mask: initial; mask-type: initial; math-depth: initia=
l; math-shift: initial; math-style: initial; max-block-size: initial; max-h=
eight: initial; max-inline-size: initial; max-width: initial; min-block-siz=
e: initial; min-height: initial; min-inline-size: initial; min-width: initi=
al; mix-blend-mode: initial; object-fit: initial; object-position: initial;=
 object-view-box: initial; offset: initial; opacity: initial; order: initia=
l; orphans: initial; outline: initial; outline-offset: initial; overflow-an=
chor: initial; overflow-clip-margin: initial; overflow-wrap: initial; overf=
low: initial; overlay: initial; overscroll-behavior-block: initial; overscr=
oll-behavior-inline: initial; overscroll-behavior: initial; padding-block: =
initial; padding: initial; padding-inline: initial; page: initial; page-ori=
entation: initial; paint-order: initial; perspective: initial; perspective-=
origin: initial; pointer-events: initial; quotes: initial; r: initial; resi=
ze: initial; rotate: initial; ruby-position: initial; rx: initial; ry: init=
ial; scale: initial; scroll-behavior: initial; scroll-margin-block: initial=
; scroll-margin: initial; scroll-margin-inline: initial; scroll-padding-blo=
ck: initial; scroll-padding: initial; scroll-padding-inline: initial; scrol=
l-snap-align: initial; scroll-snap-stop: initial; scroll-snap-type: initial=
; scroll-timeline: initial; scrollbar-color: initial; scrollbar-gutter: ini=
tial; scrollbar-width: initial; shape-image-threshold: initial; shape-margi=
n: initial; shape-outside: initial; shape-rendering: initial; size: initial=
; speak: initial; stop-color: initial; stop-opacity: initial; stroke: initi=
al; stroke-dasharray: initial; stroke-dashoffset: initial; stroke-linecap: =
initial; stroke-linejoin: initial; stroke-miterlimit: initial; stroke-opaci=
ty: initial; stroke-width: initial; tab-size: initial; table-layout: initia=
l; text-align: initial; text-align-last: initial; text-anchor: initial; tex=
t-combine-upright: initial; text-decoration: initial; text-decoration-skip-=
ink: initial; text-emphasis: initial; text-emphasis-position: initial; text=
-indent: initial; text-overflow: initial; text-shadow: initial; text-size-a=
djust: initial; text-transform: initial; text-underline-offset: initial; te=
xt-underline-position: initial; white-space: initial; timeline-scope: initi=
al; touch-action: initial; transform: initial; transform-box: initial; tran=
sform-origin: 0px 0px; transform-style: initial; transition: initial; trans=
late: initial; user-select: initial; vector-effect: initial; vertical-align=
: initial; view-timeline: initial; view-transition-name: initial; visibilit=
y: initial; border-spacing: initial; -webkit-box-align: initial; -webkit-bo=
x-decoration-break: initial; -webkit-box-direction: initial; -webkit-box-fl=
ex: initial; -webkit-box-ordinal-group: initial; -webkit-box-orient: initia=
l; -webkit-box-pack: initial; -webkit-box-reflect: initial; -webkit-line-br=
eak: initial; -webkit-line-clamp: initial; -webkit-mask-box-image: initial;=
 -webkit-print-color-adjust: initial; -webkit-rtl-ordering: initial; -webki=
t-ruby-position: initial; -webkit-tap-highlight-color: initial; -webkit-tex=
t-combine: initial; -webkit-text-decorations-in-effect: initial; -webkit-te=
xt-fill-color: initial; -webkit-text-security: initial; -webkit-text-stroke=
: initial; -webkit-user-drag: initial; -webkit-user-modify: initial; widows=
: initial; width: initial; will-change: initial; word-break: initial; word-=
spacing: initial; x: initial; y: initial; z-index: initial; }

.mv6V_w { display: block; overflow: hidden; pointer-events: none; }

.H6KCog, .mv6V_w { left: 0px; position: absolute; top: 0px; }

.TRWryw { height: 100%; width: 100%; }

.dark, .light { --mZd2dw: #00c4cc; --7dKt9A: #7d2ae8; --PfAhjQ: rgba(13,18,=
22,0); --qoG_LA: rgba(36,49,61,.4); --WIvwOg: rgba(43,59,74,.3); --mu_GGA: =
hsla(0,0%,100%,.7); --djTVRw: #fff; }

._9fh_OQ, .uqLJQA { box-sizing: border-box; position: absolute; }

@media print {
  ._9fh_OQ, .uqLJQA { display: none; }
}

.b5uQwQ._9fh_OQ { height: 100%; max-width: 160px; min-width: 64px; right: 0=
px; top: 0px; width: 30%; }

._5h5zUg.uqLJQA { bottom: 0px; height: 64px; left: 0px; min-height: 64px; w=
idth: 100%; }

.Y_4bbQ { box-sizing: border-box; height: 100%; opacity: 1; position: absol=
ute; right: 0px; }

.z4Hd7Q { background-image: ; background-position-x: ; background-position-=
y: ; background-repeat: ; background-attachment: ; background-origin: ; bac=
kground-clip: ; background-color: ; background-size: 100% 100vh; height: 10=
0%; width: 100%; }

.A6PJvg { align-items: flex-end; box-sizing: border-box; display: flex; pad=
ding: 8px; position: absolute; transition: opacity 0.25s ease 0s; }

._5h5zUg .A6PJvg { background: linear-gradient(to bottom,var(--PfAhjQ) 0,va=
r(--WIvwOg) 100%); bottom: 0px; flex-direction: row; height: 64px; left: 0p=
x; width: 100%; }

.b5uQwQ .A6PJvg { background: linear-gradient(to right,var(--PfAhjQ) 0,var(=
--WIvwOg) 100%); flex-direction: column; height: 100%; right: 0px; top: 0px=
; width: 64px; }

.oRD7IQ { border-radius: 100%; color: var(--mu_GGA); cursor: pointer; flex-=
basis: fit-content; height: 32px; padding: 8px 0px; width: 32px; }

.b5uQwQ .oRD7IQ { margin: 8px 0px; padding: 8px 0px; }

._5h5zUg .oRD7IQ { margin: 0px 8px; padding: 0px 8px; }

.oRD7IQ.ddkS9A, .oRD7IQ.ddkS9A:hover { background-color: transparent; color=
: var(--mu_GGA); cursor: not-allowed; opacity: 0.5; }

.rfjcfA { flex: 1 1 auto; flex-direction: inherit; }

._99eNQQ, .rfjcfA { align-items: center; display: flex; justify-content: ce=
nter; }

._99eNQQ { -webkit-tap-highlight-color: transparent; cursor: pointer; flex-=
grow: 1; height: 100%; padding: 2px; width: 100%; }

._5h5zUg ._99eNQQ { height: 32px; }

.b5uQwQ ._99eNQQ { width: 32px; }

.SJUElg { background-color: var(--mu_GGA); border-radius: 4px; height: 100%=
; position: relative; width: 100%; }

._5h5zUg .SJUElg { height: 4px; }

.b5uQwQ .SJUElg { width: 4px; }

._99eNQQ.gFh1Bw .SJUElg, .pSW2Cg { background-color: var(--djTVRw); }

.pSW2Cg { border-radius: 4px; height: 100%; left: 0px; position: absolute; =
top: 0px; width: 100%; }

._9fh_OQ .A6PJvg { opacity: 0; pointer-events: none; }

._9fh_OQ.xNKv9w .Y_4bbQ { display: none; }

._9fh_OQ .Y_4bbQ._0VgJyg { opacity: 0; transition: opacity 0.5s ease 0.5s; =
}

._9fh_OQ.xNKv9w .A6PJvg { opacity: 1; pointer-events: all; }

.ZU5OUQ._6MozXA, ._9fh_OQ.xNKv9w .ZU5OUQ { opacity: 0; pointer-events: none=
; transition-delay: 0s; }

.ZU5OUQ { bottom: 0px; margin-bottom: 12px; opacity: 1; position: absolute;=
 right: 12px; transition: opacity 0.25s ease 0.2s; z-index: 1; }

@media (hover: hover) {
  ._99eNQQ:hover .SJUElg { background-color: var(--djTVRw); }
  .b5uQwQ ._99eNQQ:hover .SJUElg { width: 6px; }
  ._5h5zUg ._99eNQQ:hover .SJUElg { height: 6px; }
  ._9fh_OQ:hover .A6PJvg { opacity: 1; pointer-events: all; }
  .oRD7IQ:hover { background-color: var(--VghWaA); color: var(--djTVRw); }
  ._9fh_OQ:hover .ZU5OUQ { opacity: 0; pointer-events: none; transition-del=
ay: 0s; }
  .b5uQwQ:hover .A6PJvg { background: linear-gradient(to right,var(--PfAhjQ=
) 0,var(--qoG_LA) 100%); }
  ._5h5zUg:hover .A6PJvg { background: linear-gradient(to bottom,var(--PfAh=
jQ) 0,var(--qoG_LA) 100%); }
  ._9fh_OQ:hover .Y_4bbQ { display: none; }
}

.UKMuSA { margin: 0px auto; position: relative; }

.p3wqJQ { position: sticky; top: 0px; }

@media print {
  .UKMuSA { contain: size; }
}

.W7fxeA, ._1chiqA, .bMISeQ { fill: rgb(13, 18, 22); stroke: rgba(255, 255, =
255, 0.3); stroke-width: 2px; paint-order: stroke; }

.Rt1H_w { background-color: rgba(181, 181, 181, 0.22); height: 100%; left: =
0px; top: 0px; width: 100%; }

.Rt1H_w, ._5sVuA { position: absolute; }

._5sVuA { left: 50%; top: 50%; transform: translate(-50%, -50%); }

.S3wQqg { height: 100%; opacity: 0; width: 100%; }

.lKZixA { transition: opacity 0.15s ease-in-out 0s; }

._8YzbFQ { opacity: 1; }

.W9j_bQ iframe { pointer-events: none; }

.S3wQqg iframe { border: none; color-scheme: none; }

.uqhtBg { height: inherit; width: inherit; }

.iJd_7g { display: block; left: 0px; top: 0px; }

.hVT_uA, .iJd_7g { height: 100%; position: absolute; width: 100%; }

.hVT_uA { opacity: 1; transition: opacity 0.15s ease-in-out 0s; }

.PgAXEw { opacity: 0; pointer-events: none; }

.ma5szw { height: 100%; width: 100%; }

.MiiB6g { background-color: rgba(53, 71, 90, 0.2); border-radius: 4px; padd=
ing: 4px; }

.MiiB6g, .POEOEA { position: absolute; }

._SnsKg { color: rgb(255, 255, 255); margin: 8px; right: 0px; top: 0px; tra=
nsition: opacity 0.1s ease-in 0s; }

.ulKpqw { position: relative; }

@media print {
  .ulKpqw { contain: size; }
}

.W7Xakg { height: 100%; user-select: none; }

.vxNhlg { display: block; }

.vxNhlg, .zGa_4A { height: 100%; position: absolute; width: 100%; }

.bktrlw { stroke: rgb(141, 57, 250); }

.bFnJ2A { left: 0px; overflow: hidden; top: 0px; }

._7KaXww, .bFnJ2A { position: absolute; }

._7KaXww { height: 0px; width: 0px; }

.qhHTGg { pointer-events: none; position: relative; }

._4c2rDg { height: 100%; width: 100%; }

.GxUsfw { transition: transform 0.3s ease 0s; }

.a26Xuw { height: 100%; width: 100%; }

.a26Xuw ::selection { user-select: none; }

.fbzKiw { inset: 0px; position: absolute; }

.PcHy7w { height: 100%; width: 100%; }

.Izwocg { position: relative; }

.uk_25A { height: 100%; width: 100%; }

.Ty61NA { transition: transform 0.3s ease 0s; }

._5n21nQ { border: solid rgb(141, 57, 250); inset: 0px; position: absolute;=
 }

.blfgDw { background-image: url("images/87e22a62965f141aa08e93699b0b3527.jp=
g"); background-position: 50% center; background-size: auto 100%; }

.GyzK6g { visibility: hidden; }

.DPaZ7Q, ._7_i_XA { display: block; height: 100%; pointer-events: none; pos=
ition: absolute; width: 100%; }

.DPaZ7Q, ._7_i_XA { object-fit: fill; }

.Dt3KRw { position: absolute; }

.Dt3KRw, ._407_UQ, ._407_UQ svg { display: block; height: 100%; width: 100%=
; }

._407_UQ svg { overflow: hidden; }

.dMHlHA { display: block; height: 100%; pointer-events: none; position: abs=
olute; width: 100%; }

._mXnjA { position: relative; }

._3r7vyg, ._6t4CHA { pointer-events: auto; }

._6t4CHA { inset: 0px; outline: none; overflow: hidden; position: absolute;=
 }

.twbtjQ { direction: ltr; position: relative; }

._8V1tNw { inset: 0px; pointer-events: none; position: absolute; }

.GDnEHQ { overflow: hidden; }

.o2Yl2g { transform-origin: 0px 0px; }

.QhExXw { bottom: 0px; direction: ltr; left: 0px; pointer-events: none; pos=
ition: absolute; }

.QhExXw.pKfnlA { transform: translateZ(0px); }

.onhyOQ { border-radius: inherit; box-sizing: border-box; display: flex; ju=
stify-content: center; overflow: hidden; position: relative; }

.r6_0Ig { direction: ltr; overflow: hidden; }

.D5ebuw { height: 0px; position: relative; transform-origin: 0px 0px; width=
: 0px; }

._nT9Lw, .w24iLA { left: 0px; position: absolute; top: 0px; }

._nT9Lw { align-items: center; bottom: 0px; display: flex; justify-content:=
 center; pointer-events: none; right: 0px; }

.zXqj8Q { background-position: 50% center; background-repeat: repeat; backg=
round-size: 16px 16px; flex-shrink: 0; transform-origin: center center; }

.YkerfQ { position: absolute; }

.S9nxOw, .ShKbZQ { display: block; position: absolute; }

.ShKbZQ { left: 0px; overflow: hidden; pointer-events: none; top: 0px; }

.VnEF2A { left: 0px; position: absolute; top: 0px; }

.CUuPFw, ._6k14ug { height: 100%; width: 100%; }

.CUuPFw { display: grid; }

._9Yq8nQ { outline: none; overflow: hidden; position: relative; }

.pTpG7Q { border-style: solid; inset: 0px; mask: linear-gradient(rgb(255, 2=
55, 255), rgb(255, 255, 255)) padding-box clear, linear-gradient(rgb(255, 2=
55, 255), rgb(255, 255, 255)); overflow: hidden; pointer-events: none; posi=
tion: absolute; }

.vRDMWw { mask-composite: exclude; }

.JQ_8Dw, .m75bhg { box-sizing: border-box; height: 100%; overflow: hidden; =
width: 100%; }

.JQ_8Dw { display: grid; position: relative; }

._4mB2uw { inset: 0px; overflow: hidden; position: absolute; }

.bDwApw { box-sizing: border-box; }

.bDwApw, .hoR9IA, .mHt_qw { position: relative; }

.mHt_qw { height: 100%; width: 100%; }

.XfKgYw, ._lXXwg { inset: 0px; position: absolute; }

.Y6OU1g { background-size: 100% 100%; height: 100%; width: 100%; }

.XI67vg .ql-editor ::selection { background: transparent; }

.VlMoIw { box-sizing: border-box; position: relative; }

.XTfT4g { margin: 0px auto; width: 100%; }

.pWJC3Q { display: grid; }

.CeXnxQ { min-width: 0px; }

.Bnw52g, .CeXnxQ { display: flex; flex-direction: column; position: relativ=
e; }

.Bnw52g { box-sizing: border-box; height: 100%; pointer-events: none; width=
: 100%; }

.WrMvpw { cursor: text; flex-grow: 1; }

.WrMvpw, .n_M8Uw { pointer-events: auto; }

._99Cl8g { height: 100%; position: relative; }

.r5wnFA { flex: 1 1 0%; }

._4Z3UgA { min-height: 32px; }

.GdC69Q { margin: -4px; }

.bZOQfA { scroll-padding-bottom: var(--mBqY5A,0); scroll-padding-top: var(-=
-oZQU0Q,0); }

.bZOQfA:has(.ZxrqGQ:focus-within) { scroll-padding-top: 0px; }

.bZOQfA:has(.Y_V_gw:focus-within) { scroll-padding-bottom: 0px; }

.jQLKLw { bottom: 0px; height: 100%; left: 0px; position: fixed; transform:=
 translateY(calc(var(--8gqqmQ, 0px) - var(--4-IqNQ, 0px))); transition: tra=
nsform 0.2s ease 0s; width: 100%; }

@supports (top:100svh) {
  .jQLKLw { height: 100vh; }
}

.jQLKLw:not(.G0knkQ) { pointer-events: none; }

.G0knkQ { background-color: rgba(13, 18, 22, 0); touch-action: none; }

.DtAzyA .G0knkQ { transition: background-color 0.2s ease-in-out 0s; }

.N987xw .G0knkQ { background-color: var(--olfr3Q); }

.oOFzGQ { bottom: var(--safe-area-inset-bottom); left: 0px; position: absol=
ute; right: 0px; top: calc(var(--safe-area-inset-top) + var(--_q5OVw, 0px))=
; }

@supports (bottom:max(0px,0px)) {
  .oOFzGQ { bottom: max(0px,calc(var(--safe-area-inset-bottom) - var(--4-Iq=
NQ, 0px))); top: calc(max(var(--safe-area-inset-top), calc(2 * 8px)) + var(=
--_q5OVw, 0px)); }
}

.L56DCA { bottom: calc(var(--safe-area-inset-bottom)*-1); display: flex; fl=
ex-direction: column; height: calc(var(--ZEyO0A, 100%) + var(--safe-area-in=
set-bottom)); isolation: isolate; max-height: var(--rAO2jQ,100%); pointer-e=
vents: auto; position: absolute; transform: translateY(100%); width: 100%; =
}

.DtAzyA .L56DCA { transition: transform 0.2s ease-in-out 0s; }

.N987xw .L56DCA { transform: translateY(0px); }

.L56DCA._89qMeg:not(.YM2Qkw) { height: auto; max-height: calc(var(--ZEyO0A,=
 100%) + var(--safe-area-inset-bottom)); }

@supports (bottom:max(0px,0px)) {
  .L56DCA._89qMeg:not(.YM2Qkw) { max-height: min(calc(var(--ZEyO0A, 100%) +=
 var(--safe-area-inset-bottom)),var(--rAO2jQ,100%)); }
}

.L56DCA.YM2Qkw { bottom: unset; height: calc(100% + var(--safe-area-inset-b=
ottom)); top: calc(100% - var(--ZEyO0A, 100%)); will-change: transform; }

@supports (bottom:max(0px,0px)) {
  .L56DCA.YM2Qkw { height: min(calc(100% + var(--safe-area-inset-bottom)),v=
ar(--rAO2jQ,100%)); top: max(calc(100% - var(--ZEyO0A, 100%)),calc(100% - v=
ar(--rAO2jQ, 100%) + var(--safe-area-inset-bottom))); }
}

.L56DCA.YM2Qkw .e8J_5Q { overflow-y: hidden; }

.UPTs0A { bottom: 100%; height: 100vh; position: absolute; width: 100%; }

.d91g7A { display: flex; flex-shrink: 0; height: 8px; justify-content: cent=
er; overflow: visible; position: relative; }

._3pND7g { background: var(--Zya5eQ); border-radius: 9999px; box-shadow: va=
r(--wlsoXA); height: 4px; width: 32px; z-index: 2; }

._3pND7g, ._3pND7g::before { bottom: -8px; position: absolute; }

._3pND7g::before { content: ""; height: 44px; left: 50%; transform: transla=
te(-22px); width: 44px; }

.e8J_5Q { background: var(--4RaSjg); border-radius: 16px 16px 0px 0px; box-=
shadow: var(--wlsoXA); flex: 1 0 0px; overflow-y: auto; overscroll-behavior=
: contain; position: relative; }

.t7Qghg .e8J_5Q { display: flex; flex-direction: column; }

.e8J_5Q._0jpeNw { padding-bottom: var(--safe-area-inset-bottom); }

.vALUZQ { touch-action: none; }

._89qMeg .e8J_5Q { flex-basis: auto; flex-shrink: 1; }

._QgJ_g { position: sticky; top: 0px; z-index: 1; }

.FyOF2Q { border-bottom: 1px solid var(--OuCkCQ); }

._42c0fg { flex: 1 0 auto; z-index: 0; }

._7SWh2g { bottom: 0px; position: sticky; }

._2Cfibw { align-items: center; background-color: var(--olfr3Q); inset: 0px=
; display: flex; justify-content: center; opacity: 0; overflow-y: auto; pos=
ition: fixed; }

._2Cfibw.Ue5QFA { transition: opacity 0.25s ease-in-out 0s; }

._2Cfibw.SCu3NA { position: absolute; }

._2Cfibw.FFYPwA { background-color: rgba(13, 18, 22, 0.7); }

._2Cfibw.Wwu0TA { background-color: rgba(0, 0, 0, 0.9); }

._2Cfibw.AD_uww { backdrop-filter: blur(4px); }

._2Cfibw.qm8y8Q { backdrop-filter: blur(14px); }

._2Cfibw.FijAlA { opacity: 1; }

._1PHgrg { box-sizing: border-box; display: flex; margin: auto 0px; max-wid=
th: 100%; padding: calc(var(--ZINaFw, calc(8px * 2)) + var(--safe-area-inse=
t-top)) calc(var(--MhPDhQ, calc(8px * 6)) + var(--safe-area-inset-right)) c=
alc(var(--ZINaFw, calc(8px * 2)) + var(--safe-area-inset-bottom)) calc(var(=
--MhPDhQ, calc(8px * 6)) + var(--safe-area-inset-left)); pointer-events: no=
ne; transform: scale(0.8); will-change: transform; }

._1PHgrg.FijAlA { transform: scale(1); }

.Ue5QFA ._1PHgrg { transition: transform 0.25s ease-in-out 0s; }

.DLRQ_Q { border-radius: 16px; flex: 1 1 0%; max-width: 100%; outline-offse=
t: 2px; pointer-events: auto; }

.DLRQ_Q.oLYBEA { flex: initial; height: 100%; }

.DLRQ_Q.CdyDCQ { outline: none; }

.LBYU2A { align-self: flex-start; margin-right: calc(var(--MhPDhQ, calc(8px=
 * 6))*-1); order: 1; padding: 0px 8px; position: sticky; top: var(--ZINaFw=
,16px); z-index: 1; }

.OcLwmg { bottom: calc(50vh - var(--MhPDhQ, calc(8px * 6))/2); padding: 8px=
; pointer-events: auto; position: sticky; top: calc(50vh - var(--MhPDhQ, ca=
lc(8px * 6))/2); width: var(--MhPDhQ,48px); }

.uFBYmQ { margin-left: calc(var(--MhPDhQ, calc(8px * 6))*-1); }

.IhH0hA { margin-right: calc(var(--MhPDhQ, calc(8px * 6))*-1); }

.hpS1MQ { background-color: var(--4RaSjg); width: 100%; }

.NsNeXQ { position: relative; }

.URlirA { position: absolute; right: -40px; top: 0px; }

.rQfyHg { pointer-events: auto; }

.jFgwrw { border-radius: 16px; box-shadow: var(--ej6pBg); isolation: isolat=
e; min-width: 160px; overflow: hidden; position: relative; }

.jFgwrw.oLYBEA { height: 100%; }

@media (max-width: 599px) {
  ._1PHgrg { --MhPDhQ: 16px; flex-direction: column-reverse; height: 100%; =
margin: 0px; width: 100%; }
  .LBYU2A { align-self: flex-end; margin-right: 0px; padding: 0px 0px 8px; =
}
  .DLRQ_Q { display: flex; flex: 0 1 auto; flex-direction: column; max-heig=
ht: calc(100% - 40px); position: relative; }
  .DLRQ_Q.cJ4zDA { max-height: 100%; }
  .NsNeXQ { border-radius: 16px; display: flex; min-height: 0px; overflow: =
hidden; }
  .jFgwrw { overflow-y: auto; }
}

._088g1Q { display: flex; }

.qJNLGw { overflow: hidden; position: relative; }

.dt4Dlg { display: block; width: 100%; }

.I0d4kg { bottom: 8px; opacity: 0; position: absolute; right: 8px; }

.MORa8Q { left: 0px; pointer-events: none; position: absolute; top: 0px; }

.MORa8Q, .N86L8w { height: 100%; width: 100%; }

.N86L8w { position: relative; }

.N86L8w._8M2WtA .I0d4kg, .N86L8w:focus-within .I0d4kg, .N86L8w:hover .I0d4k=
g { opacity: 1; pointer-events: auto; }

.N86L8w ::selection { user-select: none; }

.KQlPUA { transition: opacity 0.15s ease-in-out 0s; }

.CcH9OA { align-items: center; display: flex; height: 80vh; justify-content=
: center; margin-left: auto; margin-right: auto; overflow: visible; width: =
80vw; }

.OLZ4fQ.Mq03ww { cursor: zoom-in; overflow: hidden; transition: transform 0=
.1s ease 0s; }

.OLZ4fQ.ayJq_w { transition: none 0s ease 0s; }

.OLZ4fQ.Mq03ww.GOtpHg { cursor: zoom-out; }

.OLZ4fQ.Mq03ww:active { cursor: grabbing; }

@media (max-width: 899px) {
  .CcH9OA { max-height: 90vh; max-width: 90vw; }
}

.V7MmMA { transform-origin: 0px 0px; }

.Fe_H_Q, .V7MmMA { height: 100%; width: 100%; }

.Fe_H_Q { display: block; min-height: 1px; min-width: 1px; overflow: visibl=
e; position: absolute; }

._0yZ6Qg { text-rendering: geometricprecision; }

.aF9o6Q { height: 100%; }

.XfBqww { user-select: text; }

._4volQg { box-sizing: border-box; position: absolute; }

.P_k4oA { opacity: 0.6; pointer-events: none; }

.Hrnaiw { cursor: grab; }

.vmQN7A { background-color: rgb(255, 255, 255); border-radius: inherit; dis=
play: block; width: 100%; }

.jIv_OQ, .nJM7bw { box-shadow: var(--wlsoXA); height: 64px; position: absol=
ute; width: 100%; }

.jIv_OQ { border-radius: 0px 0px 8px 8px; clip-path: inset(56px -24px -24px=
); top: -56.5px; }

.nJM7bw { border-radius: 8px 8px 0px 0px; bottom: -56.5px; clip-path: inset=
(-24px -24px 56px); }

.xalUOg { padding: calc(56px*var(--zfrIqg, 1) - 8px) 0; }

.g9bP1Q { padding: calc(56px*var(--zfrIqg, 1) - 8px) 0 0 0; }

.lrLMxg { height: calc(24px*var(--zfrIqg, 1)); pointer-events: none; positi=
on: relative; }

.qqQvlg { bottom: -8px; top: -8px; width: 100%; }

.cCNnww, .qqQvlg { position: absolute; }

.cCNnww { background-color: var(--Tp54Vw); height: 100%; margin-left: -24px=
; width: calc(100% + 48px); }

.ep4pLQ { break-after: page; }

.qei1HA { border-radius: 8px 8px 0px 0px; clip-path: border-box; }

._HHXEw { display: flex; }

._HHXEw .HanH9g { height: 100%; position: absolute; width: 100%; }

.xalUOg .HanH9g { bottom: 0px; position: absolute; top: 0px; width: 100%; }

.wa4m_A .ql-editor .blockEmbed.blotPageBreakItem[class*=3D"item-comment-"] =
.xalUOg .HanH9g { background-color: var(--_d_pTQ,#e7dbff); }

.wa4m_A .ql-editor .blockEmbed.blotPageBreakItem[class*=3D"item-comment-"] =
._HHXEw .HanH9g { outline: 8px solid var(--_d_pTQ,#e7dbff); }

.VaW8_A { border-radius: 9999px; color: var(--pDK9Gw); }

.VaW8_A.cUFFRA { border-radius: 4px; }

.VaW8_A ::selection { fill: var(--pDK9Gw); }

.yCT70Q { r: 50%; }

.yCT70Q._2LVP_g { r: calc(50% - 1px); stroke-width: 2px; paint-order: fill;=
 }

.cUFFRA { border-radius: 4px; }

.cUFFRA._2LVP_g { x: 1px; y: 1px; rx: calc((var(--k9SmeA) - 2px)*.1); ry: c=
alc((var(--k9SmeA) - 2px)*.1); stroke-width: 2px; height: calc(var(--k9SmeA=
) - 2px); paint-order: fill; width: calc(var(--k9SmeA) - 2px); }

.light { --FzoXNQ: #f0f1f5; }

.dark { --FzoXNQ: #252627; }

.n8XGZg { background-image: initial; background-position: 50% center; backg=
round-size: cover; background-repeat: no-repeat; background-attachment: ini=
tial; background-origin: initial; background-clip: content-box; background-=
color: var(--FzoXNQ); border-radius: 9999px; box-sizing: border-box; displa=
y: block; font-family: "Canva Sans", "Noto Sans Variable", "Noto Sans", -ap=
ple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif; o=
verflow: hidden; }

.n8XGZg.P3N3Pw { border-radius: 4px; }

.JwH6AA { box-shadow: inset 0 0 0 2px var(--RKyZlA); }

.QJpRHw { box-shadow: inset 0 0 0 1px var(--OuCkCQ); }

._1niDPQ > ._5_06KQ, ._1niDPQ > .a952jg { transition: opacity 0.3s ease-in-=
out 0s; }

._QukmA, .a952jg { opacity: 0; }

._5_06KQ { opacity: 1; }

.Q6kGbg > .orZOEA { display: none; }

._9j7ODw > .orZOEA { visibility: hidden; }

._9GxJfQ { width: 100%; }

.KwB0XQ { overflow: hidden; }

._9GxJfQ._2uSJxw { display: flex; }

.m2VaAA { display: grid; grid-template: "content" 1fr / 1fr; position: rela=
tive; }

.WV1Mmw, .WV1Mmw > .m2VaAA { height: 100%; max-height: 100%; }

._2uSJxw, ._2uSJxw > .m2VaAA { flex: 1 1 0%; }

.KxXR9g { grid-area: content; }

.FedJ0Q { box-sizing: border-box; display: inline-block; max-width: 100%; p=
osition: relative; white-space: nowrap; }

.FedJ0Q:hover { cursor: default; }

._2Lr6pQ { box-sizing: border-box; display: inline-flex; max-width: 100%; o=
verflow: hidden; text-align: start; vertical-align: bottom; visibility: hid=
den; }

._2Lr6pQ.EdewNw .Z_WvzQ { margin-left: 1.025em; }

._2Lr6pQ.EdewNw:not(.pzXyUA) .Z_WvzQ { margin-left: 0.9em; }

._2Lr6pQ._6ZpPrw.pzXyUA .Z_WvzQ { margin-right: 1.025em; }

._2Lr6pQ._6ZpPrw:not(.pzXyUA) .Z_WvzQ { margin-right: 0.9em; }

._2Lr6pQ.pzXyUA:not(._6ZpPrw) .Z_WvzQ { margin-right: 0.2em; }

.XemTdQ { align-items: center; box-sizing: border-box; display: inline-grid=
; grid-auto-flow: column; left: 0px; line-height: normal; max-width: 100%; =
overflow: hidden; position: absolute; text-align: start; top: 50%; transfor=
m: translateY(-50%); user-select: none; width: 100%; }

.XemTdQ.pzXyUA.EdewNw:not(._6ZpPrw) { gap: 0.125em; grid-template-columns: =
0.9em 1fr; }

.XemTdQ.pzXyUA._6ZpPrw:not(.EdewNw) { gap: 0.125em; grid-template-columns: =
1fr 0.9em; }

.XemTdQ.pzXyUA._6ZpPrw.EdewNw { gap: 0.125em; grid-template-columns: 0.9em =
1fr 0.9em; }

.XemTdQ.pzXyUA:not(._6ZpPrw):not(.EdewNw) { grid-template-columns: 1fr; }

.XemTdQ.EdewNw:not(.pzXyUA):not(._6ZpPrw), .XemTdQ._6ZpPrw:not(.pzXyUA):not=
(.EdewNw) { grid-template-columns: 0.9em; }

.XemTdQ::before { background-color: currentcolor; border-radius: 2em; conte=
nt: ""; height: 100%; opacity: 0.1; position: absolute; width: 100%; }

.XemTdQ:hover::before { opacity: 0.2; }

.U_QH_A { display: block; overflow: hidden; position: relative; }

.U_QH_A.C9XL8g { text-overflow: ellipsis; }

.U_QH_A::selection { background: transparent; }

.vgTP5Q { color: inherit; position: relative; text-decoration: none; }

.vgTP5Q::after { inset: 0px; content: ""; position: absolute; }

.XemTdQ, ._2Lr6pQ { padding: 0px 0.3em 0px 0.2em; }

.XemTdQ:not(.pzXyUA):not(._6ZpPrw), ._2Lr6pQ:not(.pzXyUA):not(._6ZpPrw) { p=
adding-right: 0.2em; }

.XemTdQ:not(.EdewNw), ._2Lr6pQ:not(.EdewNw) { padding-left: 0.5em; }

._tFJqA { align-items: center; display: inline-flex; height: 100%; position=
: relative; }

._tFJqA, ._tFJqA > svg, .qpbYdw { width: 100%; }

.qpbYdw { border-radius: 0.2em; }

.whph4A { transition: transform 0.3s ease-out 0s; }

.whph4A.zgzjww { transform: rotate(-180deg); }

.Zp7NQw { height: 100%; overflow: hidden; position: relative; width: 100%; =
}

.Csmo7A, .fSk_JA { display: flex; justify-content: center; position: relati=
ve; }

.fSk_JA, .piaS2g { overflow: hidden; }

.piaS2g { height: 100%; width: 100%; }

.LBU2KA { overflow-y: auto; }

.Omi3ZA { overflow-x: auto; }

.light { --c0UyoQ: 0 0 0 1px rgba(64,87,109,.07),0 0 8px 0 rgba(57,76,96,.1=
5); --7mVY-Q: 0 0 0 1px rgba(64,87,109,.07),0 0 8px 0 rgba(57,76,96,.15); -=
-ozux8A: 0 0 0 1px rgba(64,87,109,.07),0 0 8px 0 rgba(57,76,96,.15); --aUkm=
1A: 0 0 0 1px rgba(64,87,109,.07),0 0 8px 0 rgba(57,76,96,.15); }

.dark { --c0UyoQ: 0 0 20px 20px var(--Tp54Vw); --7mVY-Q: 0 0 20px 20px var(=
--dVucJw); --ozux8A: 0 0 20px 20px var(--C-q6Ig); --aUkm1A: 0 0 20px 20px v=
ar(--4RaSjg); }

.i24Qzw { --G8f7Mg: 0 0 20px 20px var(--Tp54Vw); --3VXgxw: var(--c0UyoQ); }

.J7MRLA { --G8f7Mg: 0 0 20px 20px var(--dVucJw); --3VXgxw: var(--7mVY-Q); }

.ze9m4A { --G8f7Mg: 0 0 20px 20px var(--C-q6Ig); --3VXgxw: var(--ozux8A); }

.iA8hvw { --G8f7Mg: 0 0 20px 20px var(--4RaSjg); --3VXgxw: var(--aUkm1A); }

.iGVGMg { display: flex; position: relative; }

.iGVGMg._gATaQ { flex-direction: column; }

.iGVGMg.fefKhw { flex-direction: row; }

.kFFH_Q { position: sticky; z-index: 1; }

.kFFH_Q._gATaQ.UOgYeQ, .kFFH_Q._gATaQ.ddzWGA { height: 0px; }

.kFFH_Q._gATaQ.UOgYeQ { top: 0px; }

.kFFH_Q._gATaQ.ddzWGA { top: 100%; }

.kFFH_Q.fefKhw.UOgYeQ, .kFFH_Q.fefKhw.ddzWGA { width: 0px; }

.kFFH_Q.fefKhw.UOgYeQ { left: 0px; }

.kFFH_Q.fefKhw.ddzWGA { left: 100%; }

.kLHWmg { opacity: 0; position: absolute; }

._8f7ZWw { box-shadow: var(--G8f7Mg); }

.dKRscg { box-shadow: var(--3VXgxw); }

.kLHWmg.a4_U3w { transition: opacity 0.25s ease 0s, box-shadow 0.1s linear =
0s; }

.kLHWmg._1HCJVw { opacity: 1; }

.kLHWmg._gATaQ.UOgYeQ { height: 16px; top: -16px; width: 100%; }

.kLHWmg._gATaQ.ddzWGA { bottom: -16px; height: 16px; width: 100%; }

.kLHWmg.fefKhw.UOgYeQ { height: 100%; left: -16px; width: 16px; }

.kLHWmg.fefKhw.ddzWGA { height: 100%; right: -16px; width: 16px; }

.tFXIEw { height: 100%; isolation: isolate; width: 100%; }

.UYpUfA { background-color: rgb(255, 255, 255); }

.qH_TIA { display: flex; flex-direction: column; transform-origin: 0px 0px;=
 }

@font-face { font-display: block; font-family: calibrate; src: url("images/=
b46630e470f4040eba7033cf2435edce.woff") format("woff"); }

.iRgHxQ { font-family: calibrate; font-size: 100px; line-height: 1; margin:=
 0px; padding: 0px; position: absolute; top: 0px; visibility: hidden; width=
: 100px; }

.w85Cgw { display: inline-block; height: 1px; vertical-align: baseline; wid=
th: 1px; }

._2UyCZQ { --H97cbQ: 16px; --Xm-_8w: 0; font-feature-settings: "liga" var(-=
-I1TtXQ,off),"clig" var(--rt6TaA,off),"calt" var(--o_YY6w,off); -webkit-fon=
t-smoothing: antialiased; text-size-adjust: none; color: rgb(0, 0, 0); cont=
ain: style; direction: ltr; font-family: unset; font-kerning: none; font-st=
yle: normal; font-synthesis: none; font-weight: 400; height: auto; letter-s=
pacing: 0px; line-height: 1.4; overflow: visible; overflow-wrap: break-word=
; padding: 0px; position: relative; tab-size: 4; text-align: left; text-tra=
nsform: none; white-space: normal; word-break: normal; }

.a_GcMg.Do51Bw { bottom: calc((var(--Xm-_8w)/100)*var(--H97cbQ)); line-heig=
ht: 0; position: relative; vertical-align: baseline; }

.a_GcMg.YLyPKw { --I1TtXQ: on; }

.a_GcMg.YLyPKw, .a_GcMg.w9fQyg { font-feature-settings: "liga" var(--I1TtXQ=
,off),"clig" var(--rt6TaA,off),"calt" var(--o_YY6w,off); }

.a_GcMg.w9fQyg { --rt6TaA: on; }

.a_GcMg.uHzYVw { --o_YY6w: on; font-feature-settings: "liga" var(--I1TtXQ,o=
ff),"clig" var(--rt6TaA,off),"calt" var(--o_YY6w,off); }

.a_GcMg.YLyPKw::after, .a_GcMg.uHzYVw::after, .a_GcMg.w9fQyg::after { conte=
nt: "=E2=80=8C"; }

.el5AzA { contain: none; }

.e1_zQg { pointer-events: auto; user-select: text; }

.SglrXg .jfNO9A { display: inline-flex; }

.SglrXg .eSUC2A { overflow: hidden; }

.Mb8E_A, .Mb8E_A .zYq_BQ { text-wrap: nowrap; overflow-wrap: normal; }

.zYq_BQ { white-space: pre-wrap; }

.J4GZTQ, ._28USrA, ._5eEERQ { font-size: var(--H97cbQ); margin: 0px; positi=
on: relative; }

.J4GZTQ { margin-block: 0px; margin-inline: 0px; }

.ld54Zw.ld54Zw { margin-inline: calc(var(--3foukQ, 0)*-1); padding: var(--3=
foukQ,0); }

.ld54Zw { background-clip: text; background-repeat: no-repeat; }

._5eEERQ .a_GcMg { letter-spacing: 0px; line-height: 1.2; position: absolut=
e; white-space: pre; }

._28USrA .xtSH_A { display: inline-block; }

.vkN2Cw ._28USrA { top: calc(var(--UF50hQ, 0)*1em); }

.vkN2Cw ._28USrA.hhtymQ ._28USrA.hhtymQ { top: 0px; }

.vkN2Cw ._28USrA, .vkN2Cw ._5eEERQ { margin-top: calc(var(--gixK-A)*1em); }

.vkN2Cw ._4N4NA { margin-top: 0px; }

.jvAkaQ ._28USrA, .jvAkaQ ._5eEERQ { margin-right: calc(var(--gixK-A)*1em);=
 }

.jvAkaQ ._4N4NA { margin-right: 0px; }

._8E_5FA ._28USrA, ._8E_5FA ._5eEERQ { margin-left: calc(var(--gixK-A)*1em)=
; }

._8E_5FA ._4N4NA { margin-left: 0px; }

.naUDPA { direction: rtl; }

._28USrA.XN6uKA.GEC0sA, ._28USrA.naUDPA.TV9a8Q { text-align: left; }

._28USrA.XN6uKA.AfeL7g, ._28USrA.naUDPA.AfeL7g { text-align: center; }

._28USrA.XN6uKA.TV9a8Q, ._28USrA.naUDPA.GEC0sA { text-align: right; }

._28USrA.XN6uKA._2ENCSQ, ._28USrA.naUDPA._2ENCSQ { text-align: justify; }

.S_UAwQ .a_GcMg { color: var(--ryhqxQ) !important; }

.vkN2Cw ._28USrA.XN6uKA { margin-left: calc(var(--kJ5CrQ)*1em); }

._8E_5FA ._28USrA.XN6uKA, .jvAkaQ ._28USrA.XN6uKA { margin-top: calc(var(--=
kJ5CrQ)*1em); }

.vkN2Cw ._28USrA.naUDPA { margin-right: calc(var(--kJ5CrQ)*1em); }

._8E_5FA ._28USrA.naUDPA, .jvAkaQ ._28USrA.naUDPA { margin-bottom: calc(var=
(--kJ5CrQ)*1em); }

.vkN2Cw ._28USrA.ld54Zw.XN6uKA { margin-left: calc(var(--kJ5CrQ)*1em + var(=
--3foukQ, 0)*-1); }

._8E_5FA ._28USrA.ld54Zw.XN6uKA, .jvAkaQ ._28USrA.ld54Zw.XN6uKA { margin-to=
p: calc(var(--kJ5CrQ)*1em + var(--3foukQ, 0)*-1); }

.vkN2Cw ._28USrA.ld54Zw.naUDPA { margin-right: calc(var(--kJ5CrQ)*1em + var=
(--3foukQ, 0)*-1); }

._8E_5FA ._28USrA.ld54Zw.naUDPA, .jvAkaQ ._28USrA.ld54Zw.naUDPA { margin-bo=
ttom: calc(var(--kJ5CrQ)*1em + var(--3foukQ, 0)*-1); }

._2UyCZQ .JS2Zuw { list-style-type: none; margin: 0px; padding: 0px; }

.hhtymQ { --3foukQ: 0px; display: list-item; padding: 0px; }

.R3Kctg, ._0jckkw::before { box-sizing: border-box; margin: 0px; padding: 0=
px; position: absolute; white-space: nowrap; }

.vkN2Cw .XN6uKA .R3Kctg { left: calc(var(--kJ5CrQ)*1em*-1); }

.vkN2Cw .naUDPA .R3Kctg { right: calc(var(--kJ5CrQ)*1em*-1); }

._8E_5FA .XN6uKA .R3Kctg, .jvAkaQ .XN6uKA .R3Kctg { top: calc(var(--kJ5CrQ)=
*1em*-1); }

._8E_5FA .naUDPA .R3Kctg, .jvAkaQ .naUDPA .R3Kctg { bottom: calc(var(--kJ5C=
rQ)*1em*-1); }

.vkN2Cw .XN6uKA .R3Kctg > .R3Kctg { left: 0px; }

.vkN2Cw .naUDPA .R3Kctg > .R3Kctg { right: 0px; }

._8E_5FA .XN6uKA .R3Kctg > .R3Kctg, .jvAkaQ .XN6uKA .R3Kctg > .R3Kctg { top=
: 0px; }

._8E_5FA .naUDPA .R3Kctg > .R3Kctg, .jvAkaQ .naUDPA .R3Kctg > .R3Kctg { bot=
tom: 0px; }

.cZVApw { display: list-item; position: absolute; }

.vkN2Cw .XN6uKA .cZVApw { right: 0px; }

.vkN2Cw .naUDPA .cZVApw { left: 0px; }

._8E_5FA .XN6uKA .cZVApw, .jvAkaQ .XN6uKA .cZVApw { bottom: 0px; }

._8E_5FA .naUDPA .cZVApw, .jvAkaQ .naUDPA .cZVApw { top: 0px; }

.vkN2Cw .R3Kctg, .vkN2Cw ._0jckkw::before { height: calc(var(--IOrplg)*1em)=
; width: calc(var(--kJ5CrQ)*1em); }

._8E_5FA .R3Kctg, ._8E_5FA ._0jckkw::before, .jvAkaQ .R3Kctg, .jvAkaQ ._0jc=
kkw::before { height: calc(var(--kJ5CrQ)*1em); width: calc(var(--IOrplg)*1e=
m); }

._0jckkw.XN6uKA::before { text-align: right; }

._0jckkw.naUDPA::before { text-align: left; }

.vkN2Cw ._0jckkw::before { padding-top: var(--3foukQ,0); }

.jvAkaQ ._0jckkw::before { padding-right: var(--3foukQ,0); }

._8E_5FA ._0jckkw::before { padding-left: var(--3foukQ,0); }

.vkN2Cw ._0jckkw.XN6uKA::before { left: calc(var(--kJ5CrQ)*1em*-1); padding=
-right: 0.1em; }

.vkN2Cw ._0jckkw.naUDPA::before { padding-left: 0.1em; right: calc(var(--kJ=
5CrQ)*1em*-1); }

._8E_5FA ._0jckkw.XN6uKA::before, .jvAkaQ ._0jckkw.XN6uKA::before { padding=
-bottom: 0.1em; top: calc(var(--kJ5CrQ)*1em*-1); }

._8E_5FA ._0jckkw.naUDPA::before, .jvAkaQ ._0jckkw.naUDPA::before { bottom:=
 calc(var(--kJ5CrQ)*1em*-1); padding-top: 0.1em; }

.vkN2Cw .R3Kctg ._0jckkw.XN6uKA::before { left: 0px; }

.vkN2Cw .R3Kctg ._0jckkw.naUDPA::before { right: 0px; }

._8E_5FA .R3Kctg ._0jckkw.XN6uKA::before, .jvAkaQ .R3Kctg ._0jckkw.XN6uKA::=
before { top: 0px; }

._8E_5FA .R3Kctg ._0jckkw.naUDPA::before, .jvAkaQ .R3Kctg ._0jckkw.naUDPA::=
before { bottom: 0px; }

._0jckkw.OMps6g::before { content: counter(list-1,var(--zPlnxA)) "."; }

._1Wqb1g.OMps6g { counter-increment: list-1 1; }

._1Wqb1g.OMps6g.gHCn7g { counter-set: list-1 var(--MF8MEg); }

._0jckkw._7VQm8w::before { content: counter(list-2,var(--zPlnxA)) "."; }

._1Wqb1g._7VQm8w { counter-increment: list-2 1; }

._1Wqb1g._7VQm8w.gHCn7g { counter-set: list-2 var(--MF8MEg); }

._0jckkw.yBmzmw::before { content: counter(list-3,var(--zPlnxA)) "."; }

._1Wqb1g.yBmzmw { counter-increment: list-3 1; }

._1Wqb1g.yBmzmw.gHCn7g { counter-set: list-3 var(--MF8MEg); }

._0jckkw.sAsy5g::before { content: counter(list-4,var(--zPlnxA)) "."; }

._1Wqb1g.sAsy5g { counter-increment: list-4 1; }

._1Wqb1g.sAsy5g.gHCn7g { counter-set: list-4 var(--MF8MEg); }

._0jckkw.AQACiA::before { content: counter(list-5,var(--zPlnxA)) "."; }

._1Wqb1g.AQACiA { counter-increment: list-5 1; }

._1Wqb1g.AQACiA.gHCn7g { counter-set: list-5 var(--MF8MEg); }

._0jckkw.rSUnkQ::before { content: counter(list-6,var(--zPlnxA)) "."; }

._1Wqb1g.rSUnkQ { counter-increment: list-6 1; }

._1Wqb1g.rSUnkQ.gHCn7g { counter-set: list-6 var(--MF8MEg); }

._0jckkw.f8LKrA::before { content: counter(list-7,var(--zPlnxA)) "."; }

._1Wqb1g.f8LKrA { counter-increment: list-7 1; }

._1Wqb1g.f8LKrA.gHCn7g { counter-set: list-7 var(--MF8MEg); }

._0jckkw.l4nE4g::before { content: counter(list-8,var(--zPlnxA)) "."; }

._1Wqb1g.l4nE4g { counter-increment: list-8 1; }

._1Wqb1g.l4nE4g.gHCn7g { counter-set: list-8 var(--MF8MEg); }

._28USrA:not(.hhtymQ), ._5eEERQ:not(.hhtymQ) { counter-reset: list-1 0 list=
-2 0 list-3 0 list-4 0 list-5 0 list-6 0 list-7 0 list-8 0; }

._28USrA.wjBajg { counter-reset: none; }

._1Wqb1g.OMps6g { counter-set: list-2 0 list-3 0 list-4 0 list-5 0 list-6 0=
 list-7 0 list-8 0; }

._1Wqb1g._7VQm8w { counter-set: list-3 0 list-4 0 list-5 0 list-6 0 list-7 =
0 list-8 0; }

._1Wqb1g.yBmzmw { counter-set: list-4 0 list-5 0 list-6 0 list-7 0 list-8 0=
; }

._1Wqb1g.sAsy5g { counter-set: list-5 0 list-6 0 list-7 0 list-8 0; }

._1Wqb1g.AQACiA { counter-set: list-6 0 list-7 0 list-8 0; }

._1Wqb1g.rSUnkQ { counter-set: list-7 0 list-8 0; }

._1Wqb1g.f8LKrA { counter-set: list-8 0; }

._1Wqb1g.l4nE4g { counter-set: none; }

.g6DZMw { bottom: 0px; filter: none; left: 0px; pointer-events: none; posit=
ion: absolute; visibility: hidden; }

.g6DZMw, .h_sDXA { width: max-content; }

.h_sDXA { position: fixed; }

.rgd8tA { display: inline-block; white-space: nowrap; }

._3jkTAA { contain: strict; left: 0px; opacity: 0; pointer-events: auto; po=
sition: fixed; top: 0px; user-select: text; visibility: visible; z-index: 3=
; }

.HeLNTQ { height: 99999px; width: 99999px; }

.E8yZTA { position: relative; }

.IBvdUw { inset: 0px; pointer-events: none; position: absolute; user-select=
: none; }

._1MoDzw { align-items: center; border-radius: 4px; box-shadow: currentcolo=
r 0px 0px 0px 2px inset; color: inherit; display: inline-flex; flex: 0 0 0%=
; height: 16px; justify-content: center; margin: 0px; position: relative; t=
ransform: translate(-8px,-8px) scale(var(--Uq9BoA,1)) translate(50%,50%); t=
ransition: box-shadow 0.1s ease-in-out 0s; vertical-align: top; width: 16px=
; }

._7oDyXg { cursor: pointer; display: inline-block; height: calc(var(--Uq9Bo=
A, 1)*16px); pointer-events: all; vertical-align: middle; }

._8E17AQ { appearance: none; margin: 0px; opacity: 0; width: 0px; }

._9nvLcQ { color: rgb(255, 255, 255); opacity: 0; }

._1MoDzw.DLGvRw ._9nvLcQ { height: 16px; opacity: 1; width: 16px; }

.YppzxA ._1MoDzw:hover::after { background: currentcolor; border-radius: 4p=
x; inset: 0px; content: ""; display: block; opacity: 0.2; position: absolut=
e; width: 100%; }

._8E17AQ:checked + ._1MoDzw { box-shadow: currentcolor 0px 0px 0px 8px inse=
t; }

.I2P_Nw .ql-editor ul li { padding: 0px; text-align: start; }

.I2P_Nw .ql-editor ul.blockList { margin: 0px; padding: 0px; }

.I2P_Nw .ql-editor ul.blockList li { list-style-type: none; position: relat=
ive; }

.I2P_Nw.vOBd0w .ql-editor ul.blockList li.uarqkg { white-space: nowrap; }

.I2P_Nw.vOBd0w .ql-editor ul.blockList li.uarqkg > .inlineElement { white-s=
pace: pre-wrap; }

.I2P_Nw .ql-editor ul.blockList li { --2e0mIQ: calc(var(--eR0qCg)*var(--Uq9=
BoA, 1)); --fr3CTA: calc(var(--Uq9BoA, 1)*var(--eR0qCg)*var(--Vri3Bw)); --I=
cELaA: calc(var(--Uq9BoA, 1)*24px); font-family: var(--CV8ywQ); font-size: =
var(--2e0mIQ); }

@supports (font-size:min(1px,2px)) {
  .I2P_Nw .ql-editor ul.blockList li { --2e0mIQ: min(calc((var(--eR0qCg)*0.=
5 + (1 - var(--oGgc5Q, 0))*var(--eR0qCg)*0.5 + var(--oGgc5Q, 0)*16px*0.5)*v=
ar(--Uq9BoA, 1)),calc(var(--eR0qCg)*var(--Uq9BoA, 1))); --fr3CTA: max(calc(=
var(--2e0mIQ)*var(--Vri3Bw)),calc(24px*var(--Uq9BoA, 1))); }
}

@media (max-width: 599px) {
  @supports not (font-size:min(1px,2px)) {
  .I2P_Nw .ql-editor ul.blockList li { --2e0mIQ: calc(var(--Uq9BoA, 1)*0.8*=
var(--eR0qCg)); }
}
}

.I2P_Nw .ql-editor ul.blockList li:not(.direction-rtl) { padding-left: calc=
(8px + var(--IcELaA)); }

.I2P_Nw .ql-editor ul.blockList li.direction-rtl { padding-left: 0px; paddi=
ng-right: calc(8px + var(--IcELaA)); }

.I2P_Nw .ql-editor ul.blockList li .ql-ui { display: none; }

.I2P_Nw .ql-editor ul.blockList li:not(.direction-rtl).list-level-1 { margi=
n-left: calc(var(--IcELaA)*0); }

.I2P_Nw .ql-editor ul.blockList li.direction-rtl.list-level-1 { margin-righ=
t: calc(var(--IcELaA)*0); }

.I2P_Nw .ql-editor ul.blockList li:not(.direction-rtl).list-level-2 { margi=
n-left: calc(var(--IcELaA)*1); }

.I2P_Nw .ql-editor ul.blockList li.direction-rtl.list-level-2 { margin-righ=
t: calc(var(--IcELaA)*1); }

.I2P_Nw .ql-editor ul.blockList li:not(.direction-rtl).list-level-3 { margi=
n-left: calc(var(--IcELaA)*2); }

.I2P_Nw .ql-editor ul.blockList li.direction-rtl.list-level-3 { margin-righ=
t: calc(var(--IcELaA)*2); }

.I2P_Nw .ql-editor ul.blockList li:not(.direction-rtl).list-level-4 { margi=
n-left: calc(var(--IcELaA)*3); }

.I2P_Nw .ql-editor ul.blockList li.direction-rtl.list-level-4 { margin-righ=
t: calc(var(--IcELaA)*3); }

.I2P_Nw .ql-editor ul.blockList li:not(.direction-rtl).list-level-5 { margi=
n-left: calc(var(--IcELaA)*4); }

.I2P_Nw .ql-editor ul.blockList li.direction-rtl.list-level-5 { margin-righ=
t: calc(var(--IcELaA)*4); }

.I2P_Nw .ql-editor ul.blockList li:not(.direction-rtl).list-level-6 { margi=
n-left: calc(var(--IcELaA)*5); }

.I2P_Nw .ql-editor ul.blockList li.direction-rtl.list-level-6 { margin-righ=
t: calc(var(--IcELaA)*5); }

.I2P_Nw .ql-editor ul.blockList li:not(.direction-rtl).list-level-7 { margi=
n-left: calc(var(--IcELaA)*6); }

.I2P_Nw .ql-editor ul.blockList li.direction-rtl.list-level-7 { margin-righ=
t: calc(var(--IcELaA)*6); }

.I2P_Nw .ql-editor ul.blockList li:not(.direction-rtl).list-level-8 { margi=
n-left: calc(var(--IcELaA)*7); }

.I2P_Nw .ql-editor ul.blockList li.direction-rtl.list-level-8 { margin-righ=
t: calc(var(--IcELaA)*7); }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-o"]:not(.direction=
-rtl) { padding-left: calc(8px + var(--fr3CTA)); }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-o"].direction-rtl =
{ padding-right: calc(8px + var(--fr3CTA)); }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-o"]::before { colo=
r: var(--DnjK6Q); content: var(--nmalgA); cursor: text; display: inline-blo=
ck; font-family: var(--CV8ywQ); font-size: var(--2e0mIQ); min-width: var(--=
fr3CTA); text-align: start; }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-o"]:not(.direction=
-rtl)::before { margin-left: calc(var(--fr3CTA)*-1); }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-o"].direction-rtl:=
:before { margin-right: calc(var(--fr3CTA)*-1); }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-u"]::before { cont=
ent: var(--afh8Gg); cursor: text; display: inline-block; font-size: 0px; he=
ight: calc(8px*var(--Uq9BoA, 1)); vertical-align: middle; width: calc(8px*v=
ar(--Uq9BoA, 1)); }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-u"]:not(.direction=
-rtl)::before { margin-left: calc(var(--IcELaA)*-1); padding-left: calc(4px=
*var(--Uq9BoA, 1)); padding-right: calc(12px*var(--Uq9BoA, 1)); }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-u"].direction-rtl:=
:before { margin-right: calc(var(--IcELaA)*-1); padding-left: calc(12px*var=
(--Uq9BoA, 1)); padding-right: calc(4px*var(--Uq9BoA, 1)); }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-c"] .ql-ui { displ=
ay: inline-block; font-size: 0px; height: calc(16px*var(--Uq9BoA, 1)); min-=
width: 0px; position: relative; vertical-align: middle; width: 0px; }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-c"] .ql-ui .AIRI2A=
 { position: absolute; top: 0px; }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-c"]:not(.direction=
-rtl) .ql-ui .AIRI2A { left: calc(var(--IcELaA)*-1); }

.I2P_Nw .ql-editor ul.blockList li[class*=3D"list-marker-c"].direction-rtl =
.ql-ui .AIRI2A { right: calc(var(--IcELaA)*-1); }

.KL8y8w { display: inline-block; height: calc(var(--Uq9BoA, 1)*16px); }

.I2P_Nw .ql-editor li.list-marker-cchecked .DaZ4Ww, .I2P_Nw .ql-editor li.l=
ist-marker-cchecked .inlineElement, .I2P_Nw .ql-editor li.list-marker-cchec=
ked .inlineEmbed { opacity: 0.6; }

.I2P_Nw .ql-editor li.list-marker-cchecked .DaZ4Ww, .I2P_Nw .ql-editor li.l=
ist-marker-cchecked .inlineElement, .I2P_Nw .ql-editor li.list-marker-cchec=
ked .inlineEmbed span { text-decoration-line: line-through; }

.I2P_Nw .ql-editor li.list-marker-cchecked > .text-decoration-underline .Da=
Z4Ww, .I2P_Nw .ql-editor li.list-marker-cchecked > .text-decoration-underli=
ne .inlineEmbed span, .I2P_Nw .ql-editor li.list-marker-cchecked > .text-de=
coration-underline.inlineElement { text-decoration-line: underline line-thr=
ough; }

.I2P_Nw .ql-editor li.list-marker-cchecked .inlineElement, .I2P_Nw .ql-edit=
or li.list-marker-cchecked .inlineEmbed span { text-decoration-color: curre=
ntcolor; }

.I2P_Nw .ql-editor li.list-marker-cchecked { color: rgb(0, 0, 0); }

.fVLjIg .ql-editor .inlineElement.CeW6iw.T9__FQ:not(._71yRg), .fVLjIg .ql-e=
ditor .inlineElement.CeW6iw:not(._71yRg) { color: rgb(var(--biMykw)); }

.fVLjIg .ql-editor .T9__FQ:not(._71yRg) { color: rgb(var(--0fZWYQ)); }

.fVLjIg .ql-editor .F10Guw:not(._71yRg) { color: rgb(var(--dvuLgw)); }

.fVLjIg .ql-editor .LccD6Q { text-decoration-line: line-through; }

.fVLjIg .ql-editor .text-decoration-underline.LccD6Q, .fVLjIg .ql-editor .t=
ext-decoration-underline.LccD6Q span { text-decoration-line: underline line=
-through; }

.fVLjIg .ql-editor .LccD6Q:not(._71yRg) { text-decoration-color: rgb(var(--=
F_78XQ)); }

.fVLjIg .ql-editor .CeW6iw .inlineEmbed { background: linear-gradient(rgba(=
var(--biMykw),.3),rgba(var(--biMykw),.3)) no-repeat 50%/100% 100%; }

.fVLjIg .ql-editor .LccD6Q .inlineEmbed { background: linear-gradient(rgb(v=
ar(--F_78XQ)),rgb(var(--F_78XQ))) no-repeat 50%/100% 2px; opacity: 0.75; }

.fVLjIg .ql-editor .blockEmbed.cCB0xg { background: linear-gradient(rgba(va=
r(--8bnN0Q),.3),rgba(var(--8bnN0Q),.3)) no-repeat 50%/100% 100%; }

.fVLjIg .ql-editor .blockEmbed.GxQmgw { background: linear-gradient(rgba(va=
r(--1HZATg),.2),rgba(var(--1HZATg),.2)) no-repeat 50%/100% 100%; position: =
relative; }

.fVLjIg .ql-editor .blockEmbed.GxQmgw::after { align-items: center; color: =
rgb(var(--1HZATg)); content: "X"; display: flex; font-size: 4em; font-weigh=
t: 700; height: 100%; justify-content: center; opacity: 1; pointer-events: =
none; position: absolute; text-decoration: none; width: 100%; }

.fVLjIg .blockEmbed.GxQmgw > * { opacity: 0.5; }

.fVLjIg .ql-editor .cCB0xg::after { color: rgba(var(--8bnN0Q),.5); content:=
 "=E2=8F=8E"; }

.fVLjIg .ql-editor .GxQmgw::after, .fVLjIg .ql-editor .cCB0xg::after { font=
-family: "Canva Sans", "Noto Sans Variable", "Noto Sans", -apple-system, Bl=
inkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif; pointer-events:=
 none; }

.fVLjIg .ql-editor .GxQmgw::after { color: rgba(var(--1HZATg),.5); content:=
 "=C2=B6"; text-decoration: line-through; }

.fVLjIg .ql-editor .emptyBlock.GxQmgw::after, .fVLjIg .ql-editor .emptyBloc=
k.cCB0xg::after { bottom: 8px; position: absolute; }

.fVLjIg .ql-editor .blockList .emptyBlock.GxQmgw::after, .fVLjIg .ql-editor=
 .blockList .emptyBlock.cCB0xg::after { bottom: 0px; }

.fVLjIg .ql-editor .emptyBlock.GxQmgw, .fVLjIg .ql-editor .emptyBlock.cCB0x=
g { position: relative; }

.fVLjIg .ql-editor .inlineElement.ZrzDug.T9__FQ { background: rgba(var(--0f=
ZWYQ),.15); }

.fVLjIg .ql-editor .inlineElement._71yRg.LccD6Q { background: rgba(var(--F_=
78XQ),.15); box-shadow: 0 2px 0 0 rgb(var(--F_78XQ)); }

.fVLjIg .ql-editor .inlineElement._71yRg.CeW6iw { background: rgba(var(--bi=
Mykw),.15); box-shadow: 0 2px 0 0 rgb(var(--biMykw)); }

.fVLjIg .ql-editor .F10Guw.ZrzDug { background: rgba(var(--dvuLgw),.2); }

.fVLjIg .ql-editor .cCB0xg._71yRg::after { background: rgba(var(--8bnN0Q),.=
15); }

.fVLjIg .ql-editor .GxQmgw._71yRg::after { background: rgba(var(--1HZATg),.=
15); }

._QYCRw .ql-editor { font-size: 13.334px; }

.Mfnh4w { -webkit-font-smoothing: antialiased; text-size-adjust: none; font=
-family: unset; text-rendering: geometricprecision; word-break: normal; }

.Mfnh4w .ql-editor { overflow-wrap: break-word; color: rgb(0, 0, 0); direct=
ion: ltr; font-style: normal; font-weight: 400; letter-spacing: 0px; line-h=
eight: 1.4; overflow: visible; padding: 0px; position: relative; text-align=
: start; text-transform: none; user-select: text; z-index: 0; }

.Mfnh4w:not(.lBpDnQ) .ql-editor { font-size: calc(16px*var(--Uq9BoA, 1)); }

.Mfnh4w.fRXW1g > .ql-editor { white-space: pre-wrap; }

.Mfnh4w.nP1aKQ > .ql-editor { white-space: nowrap; }

.Mfnh4w .ql-editor hr { margin: 0px; }

.Mfnh4w .ql-editor > .blockElement:not(.firstBlock, .hiddenBlock), .Mfnh4w =
.ql-editor > .blockEmbed:not(.firstBlock), .Mfnh4w .ql-editor > .blockList:=
not(.firstBlock) { padding-top: calc(var(--Uq9BoA, 1)*16px/2); }

.Mfnh4w .ql-editor > .blockElement:not(.lastBlock, .hiddenBlock, :last-chil=
d), .Mfnh4w .ql-editor > .blockEmbed:not(.lastBlock, :last-child), .Mfnh4w =
.ql-editor > .blockList:not(.lastBlock, :last-child) { padding-bottom: calc=
(var(--Uq9BoA, 1)*16px/2); }

.Mfnh4w .ql-editor > .blockElement.hiddenBlock { font-size: 1px; height: 0.=
1px; line-height: 0; }

.Mfnh4w .blockElement.hiddenBlock .inlineElement { font-size: 1px; }

.Mfnh4w .ql-editor .text-decoration-underline, .Mfnh4w .ql-editor .text-dec=
oration-underline .inlineEmbed span { text-decoration-line: underline; }

.Mfnh4w .ql-editor .text-strikethrough-strikethrough, .Mfnh4w .ql-editor .t=
ext-strikethrough-strikethrough span { text-decoration-line: line-through; =
}

.Mfnh4w .ql-editor .text-decoration-underline.text-strikethrough-strikethro=
ugh, .Mfnh4w .ql-editor .text-decoration-underline.text-strikethrough-strik=
ethrough span { text-decoration-line: underline line-through; }

.Mfnh4w .ql-editor .align-start { text-align: start; }

.Mfnh4w .ql-editor .align-center { text-align: center; }

.Mfnh4w .ql-editor .align-end { text-align: end; }

.Mfnh4w .ql-editor .align-justify { text-align: justify; }

.Mfnh4w .ql-editor .direction-rtl { direction: rtl; }

.Mfnh4w .inlineElement { background-color: var(--iSHXRg); color: var(--lQWb=
0w); font-size: calc(var(--JB5mpw, 16px)*var(--dgSuqA, 1)*var(--Uq9BoA, 1))=
; }

.Mfnh4w .inlineElement.verticalAlign { bottom: calc((var(--qDrc9Q, 0)/100)*=
var(--JB5mpw, 16px)); position: relative; vertical-align: baseline; z-index=
: -1; }

.Mfnh4w .blockElement .inlineElement.bleedEnd, .Mfnh4w .blockElement .inlin=
eElement.bleedStart, .Mfnh4w .blockElement .inlineElement.borderRadiusEnd, =
.Mfnh4w .blockElement .inlineElement.borderRadiusStart { -webkit-box-decora=
tion-break: clone; }

.Mfnh4w .blockElement .inlineElement.borderRadiusStart { border-end-start-r=
adius: var(--fqAuSA); border-start-start-radius: var(--fqAuSA); }

.Mfnh4w .blockElement .inlineElement.borderRadiusEnd { border-end-end-radiu=
s: var(--fqAuSA); border-start-end-radius: var(--fqAuSA); }

.Mfnh4w .blockElement .inlineElement.bleedStart { margin-inline-start: calc=
(var(--wh8UTw)*-1); padding-inline-start: var(--wh8UTw); }

.Mfnh4w .blockElement .inlineElement.bleedEnd { margin-inline-end: calc(var=
(--wh8UTw)*-1); padding-inline-end: var(--wh8UTw); }

@supports (font-size:min(1px,2px)) {
  .Mfnh4w .inlineElement { --4SXsOw: min(calc((var(--JB5mpw, 16px)*0.5 + (1=
 - var(--oGgc5Q, 0))*var(--JB5mpw, 16px)*0.5 + var(--oGgc5Q, 0)*16px*0.5)*v=
ar(--Uq9BoA, 1)),calc(var(--JB5mpw, 16px)*var(--Uq9BoA, 1))); font-size: ca=
lc(var(--4SXsOw)*var(--dgSuqA, 1)); }
  .Mfnh4w .inlineElement.verticalAlign { bottom: calc((var(--qDrc9Q, 0)/100=
)*var(--4SXsOw)); }
}

@media (max-width: 599px) {
  @supports not (font-size:min(1px,2px)) {
  .Mfnh4w .inlineElement { font-size: calc(var(--JB5mpw, 16px)*.8*var(--dgS=
uqA, 1)*var(--Uq9BoA, 1)); }
}
}

.Mfnh4w .blockEmbed { display: flex; line-height: 0; }

.Mfnh4w .inlineEmbed { display: inline; max-width: 100%; text-indent: 0px; =
}

.Mfnh4w .ql-editor :not(li).blockElement:not(.direction-rtl) { margin-left:=
 calc(var(--gag2DA, 0px)*1px); }

.Mfnh4w .ql-editor :not(li).blockElement.direction-rtl { margin-right: calc=
(var(--gag2DA, 0px)*1px); }

.Mfnh4w .ql-editor::selection { background-color: rgba(26, 98, 255, 0.2); }

.Mfnh4w .ql-editor .blockEmbed::selection { background-color: transparent; =
}

.Mfnh4w .ql-editor td { border: 0px; padding: 0px; }

.Mfnh4w .ql-editor h1, .Mfnh4w .ql-editor h2, .Mfnh4w .ql-editor h3 { font-=
size: unset; font-weight: unset; }

.Mfnh4w .ql-editor a { text-decoration: none; }

.Mfnh4w .ql-editor .selectionGuard { height: 8px; margin-bottom: -8px; }

.Mfnh4w.Szl_ng p.blockElement { position: relative; }

.Mfnh4w p.blockElement .placeholder { display: none; }

.Mfnh4w.Szl_ng p.blockElement .placeholder { display: block; left: 0px; poi=
nter-events: none; position: absolute; top: 0px; user-select: none; width: =
100%; }

.Mfnh4w.Szl_ng p.blockElement .placeholder::after, .Mfnh4w.Szl_ng p.blockEl=
ement .placeholder::before { color: rgba(43, 59, 74, 0.3); display: block; =
}

.Mfnh4w.Szl_ng p.blockElement .placeholder::before { content: var(--wyosOA)=
; }

.Mfnh4w.Szl_ng p.blockElement.block-text-decoration-underline .placeholder:=
:before { text-decoration: underline; }

.Mfnh4w.Szl_ng p.blockElement.block-text-strikethrough-strikethrough .place=
holder::before { text-decoration: line-through; }

.Mfnh4w.Szl_ng p.blockElement.block-text-decoration-underline.block-text-st=
rikethrough-strikethrough .placeholder::before { text-decoration: underline=
 line-through; }

.Mfnh4w.Szl_ng p.blockElement .placeholder::after { content: var(--qNqs3Q);=
 font-family: var(--i6F2Kw); font-size: calc(16px*var(--Uq9BoA, 1)); font-s=
tyle: normal; font-weight: 400; letter-spacing: 0px; line-height: 1.6; text=
-decoration: none; }

.a5dsSw { -webkit-font-smoothing: antialiased; text-size-adjust: none; outl=
ine: none; position: relative; text-rendering: geometricprecision; word-bre=
ak: normal; z-index: 0; }

.a5dsSw:not(:focus-within) { border: 0px; }

.a5dsSw:not(:focus-within) ::selection { background: transparent; }

.RRbEZw { overflow-wrap: break-word; box-sizing: border-box; color: rgb(0, =
0, 0); direction: ltr; font-size: 0px; font-style: normal; font-weight: 400=
; letter-spacing: 0px; line-height: 1.4; overflow: visible; padding: 0px; t=
ext-align: start; text-transform: none; user-select: text; }

.RRbEZw.jIp1BA { font-size: calc(16px*var(--Uq9BoA, 1)); }

.RRbEZw.yzSdYQ { white-space: pre-wrap; }

.RRbEZw.O88kOQ { white-space: nowrap; }

.RRbEZw > .qOCJHQ { font-size: unset; font-weight: unset; margin: calc(16px=
*var(--Uq9BoA, 1)) 0; }

.qOCJHQ._7koQYg { font-size: 1px; height: 0.1px; line-height: 0; margin-top=
: 0px; }

.r70JmQ { caret-color: transparent; line-height: 0; margin: calc(16px*var(-=
-Uq9BoA, 1)) 0; }

.DTPF7g { caret-color: auto; display: block; user-select: none; vertical-al=
ign: top; width: 100%; }

.DTPF7g._9TCNVw { display: inline-block; }

._dGqhw { height: 0px; width: 0px; }

.r70JmQ > ._dGqhw { display: block; }

.qOCJHQ:first-child, .r70JmQ:first-child { margin-top: 0px; }

.qOCJHQ:last-child, .r70JmQ._7CHeGQ { margin-bottom: 0px; }

.nrnaQA { text-align: start; }

.D_Fgcg { text-align: center; }

._8PPPsw { text-align: end; }

.urvC1g { text-align: justify; }

._5wr2SQ { direction: rtl; }

.K_8tCg { display: block; }

.ln2W_Q { font-size: calc(var(--p9Qfqw, 16px)*var(--zyOazQ, 1)*var(--Uq9BoA=
, 1)); text-indent: 0px; }

._68hz7A { font-weight: 100; }

._4b8oDg { font-weight: 200; }

._4WmOPA { font-weight: 300; }

.vFYcpQ { font-weight: 500; }

.eZpp1Q { font-weight: 600; }

.CIJM7Q { font-weight: 700; }

.DQIFrg { font-weight: 800; }

.NmQalA { font-weight: 900; }

.sIkY1w { font-style: italic; }

.bcfHuQ { bottom: calc((var(--OH_MXg, 0)/100)*var(--p9Qfqw, 16px)*var(--Uq9=
BoA, 1)); position: relative; vertical-align: baseline; }

.Wb8Bag, .Wb8Bag .GSyGMg.M3AzBQ span { text-decoration: underline; }

.Wb8Bag.K9Vlqg, .Wb8Bag.K9Vlqg .GSyGMg.M3AzBQ span { text-decoration: under=
line line-through; }

.K9Vlqg, .K9Vlqg .GSyGMg.M3AzBQ span { text-decoration: line-through; }

.a_506A { color: inherit; text-decoration: inherit; }

.RRbEZw .vmWYYw { font-size: 0px; margin: 0px; padding: 0px; }

.RRbEZw .vmWYYw > .xnZGrA { list-style-type: none; padding-inline-start: ca=
lc(var(--zhHaLA, calc(16px + 8px))*var(--Uq9BoA, 1)); text-indent: calc(var=
(--zhHaLA, calc(16px + 8px))*-1*var(--Uq9BoA, 1)); }

.RRbEZw .xnZGrA.nrnaQA { text-align: start; }

.RRbEZw .xnZGrA.D_Fgcg { text-align: center; }

.RRbEZw .xnZGrA._8PPPsw { text-align: end; }

.RRbEZw .xnZGrA.urvC1g { text-align: justify; }

.RRbEZw.yzSdYQ > .vmWYYw > .xnZGrA { white-space: nowrap; }

.B5Bacw, .xnZGrA > .K_8tCg > .a_506A, .xnZGrA > .K_8tCg > .ln2W_Q { text-in=
dent: 0px; }

.RRbEZw.yzSdYQ > .vmWYYw > .xnZGrA > .K_8tCg > .a_506A, .RRbEZw.yzSdYQ > .v=
mWYYw > .xnZGrA > .K_8tCg > .ln2W_Q { white-space: pre-wrap; }

.B5Bacw { display: inline-block; font-size: calc(var(--p9Qfqw, 16px)*var(--=
Uq9BoA, 1)); pointer-events: none; text-align: start; user-select: none; wi=
dth: calc(var(--zhHaLA, calc(16px + 8px))*var(--Uq9BoA, 1)); }

.kio3_g { margin-inline-start: calc(8px + 0px*var(--Uq9BoA, 1)); }

.rmjCsw { margin-inline-start: calc(8px + 24px*var(--Uq9BoA, 1)); }

.YZ4GyA { margin-inline-start: calc(8px + 48px*var(--Uq9BoA, 1)); }

.pbU0gQ { margin-inline-start: calc(8px + 72px*var(--Uq9BoA, 1)); }

._45TROw { margin-inline-start: calc(8px + 96px*var(--Uq9BoA, 1)); }

.SpyUpg { margin-inline-start: calc(8px + 120px*var(--Uq9BoA, 1)); }

._0RlHRg { margin-inline-start: calc(8px + 144px*var(--Uq9BoA, 1)); }

.EIjPTw { margin-inline-start: calc(8px + 168px*var(--Uq9BoA, 1)); }

.kaxIIw { display: inline-block; height: calc(8px*var(--Uq9BoA, 1)); margin=
-inline-start: calc(4px*var(--Uq9BoA, 1)); vertical-align: middle; width: c=
alc(8px*var(--Uq9BoA, 1)); }

.QKeKuw .ln2W_Q { opacity: 0.6; }

.QKeKuw .GSyGMg.M3AzBQ span, .QKeKuw .ln2W_Q { text-decoration: line-throug=
h; }

.QKeKuw .ln2W_Q.Wb8Bag, .QKeKuw .ln2W_Q.Wb8Bag .GSyGMg.M3AzBQ span { text-d=
ecoration: underline line-through; }

.URcszA { position: relative; }

.CO7o0A, .MHjCmg, .RkjF7Q, .zSBJdA { -webkit-box-decoration-break: clone; }

.zSBJdA { border-end-start-radius: var(--TeuLew,0); border-start-start-radi=
us: var(--TeuLew,0); }

.RkjF7Q { border-end-end-radius: var(--TeuLew,0); border-start-end-radius: =
var(--TeuLew,0); }

.MHjCmg { margin-inline-start: calc(var(--8rWAew, 0)*-1); padding-inline-st=
art: var(--8rWAew,0); }

.CO7o0A { margin-inline-end: calc(var(--8rWAew, 0)*-1); padding-inline-end:=
 var(--8rWAew,0); }

.ln2W_Q.Lvg8TA { border-bottom: 2px solid rgb(139, 61, 255); }

.r70JmQ:not(.xgRLsg).Lvg8TA > .DTPF7g > .GSyGMg { outline: rgb(231, 219, 25=
5) solid 8px; }

.r70JmQ:not(.xgRLsg).Lvg8TA._6ISArw > .DTPF7g > .GSyGMg { outline: rgb(188,=
 151, 252) solid 8px; }

.ln2W_Q.oE_hFw:not(._1axBCw) { text-decoration-line: line-through; }

.ln2W_Q.oE_hFw:not(._6ISArw) { text-decoration-color: rgb(var(--eOn2Jw)); }

.ln2W_Q.SpDWaA .GSyGMg.M3AzBQ { background: rgba(var(--FWKWtw),.3); }

.ln2W_Q.oE_hFw .GSyGMg.M3AzBQ { background: linear-gradient(rgb(var(--eOn2J=
w)),rgb(var(--eOn2Jw))) no-repeat 50%/100% 2px; opacity: 0.75; }

.r70JmQ.SpDWaA { background: rgba(var(--NTJHXg),.3); display: flex; justify=
-content: space-between; line-height: 0; }

.r70JmQ.SpDWaA::after { color: rgba(var(--NTJHXg),.5); content: "=E2=8F=8E"=
; font-family: "Canva Sans", "Noto Sans Variable", "Noto Sans", -apple-syst=
em, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif; pointer-e=
vents: none; }

.r70JmQ.oE_hFw { background: rgba(var(--BRsb1Q),.2); position: relative; }

.r70JmQ.oE_hFw::after { align-items: center; color: rgb(var(--BRsb1Q)); con=
tent: "X"; display: flex; font-size: 4em; font-weight: 700; height: 100%; j=
ustify-content: center; opacity: 1; padding: 8px 0px; pointer-events: none;=
 position: absolute; text-decoration: none; top: 0px; width: 100%; }

.r70JmQ.oE_hFw .GSyGMg { opacity: 0.5; }

.r70JmQ.SpDWaA:not(._14kUEw):not(:first-child) { box-shadow: 0 -8px 0 0 rgb=
a(var(--NTJHXg),.3); }

.r70JmQ.SpDWaA:not(._14kUEw):not(:last-child) { box-shadow: 0 8px 0 0 rgba(=
var(--NTJHXg),.3); }

.r70JmQ.SpDWaA:not(._14kUEw):not(:first-child):not(:last-child) { box-shado=
w: 0 -8px 0 0 rgba(var(--NTJHXg),.3),0 8px 0 0 rgba(var(--NTJHXg),.3); }

.r70JmQ.oE_hFw:not(._14kUEw):not(:first-child) { box-shadow: 0 -8px 0 0 rgb=
a(var(--BRsb1Q),.2); }

.r70JmQ.oE_hFw:not(._14kUEw):not(:last-child) { box-shadow: 0 8px 0 0 rgba(=
var(--BRsb1Q),.2); }

.r70JmQ.oE_hFw:not(._14kUEw):not(:first-child):not(:last-child) { box-shado=
w: 0 -8px 0 0 rgba(var(--BRsb1Q),.2),0 8px 0 0 rgba(var(--BRsb1Q),.2); }

.r70JmQ.SpDWaA._14kUEw { outline: rgba(var(--NTJHXg),.3) solid 8px; }

.r70JmQ.oE_hFw._14kUEw { outline: rgba(var(--BRsb1Q),.2) solid 8px; }

.ln2W_Q.SpDWaA._1axBCw::before { color: rgba(var(--FWKWtw),.5); content: "=
=E2=8F=8E"; }

.ln2W_Q.SpDWaA._1axBCw::before, .ln2W_Q.oE_hFw._1axBCw::before { display: i=
nline-block; font-family: "Canva Sans", "Noto Sans Variable", "Noto Sans", =
-apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif=
; font-size: calc(16px*var(--Uq9BoA, 1)); pointer-events: none; }

.ln2W_Q.oE_hFw._1axBCw::before { color: rgba(var(--eOn2Jw),.5); content: "=
=C2=B6"; text-decoration: line-through; }

.ln2W_Q.oE_hFw._6ISArw:not(._1axBCw) { box-shadow: 0 2px 0 0 rgb(var(--eOn2=
Jw)); }

.ln2W_Q.oE_hFw._1axBCw._6ISArw { background: rgba(var(--eOn2Jw),.15); }

.ln2W_Q.SpDWaA._6ISArw:not(._1axBCw) { box-shadow: 0 2px 0 0 rgb(var(--FWKW=
tw)); }

.ln2W_Q.SpDWaA._1axBCw._6ISArw { background: rgba(var(--FWKWtw),.15); }

.ln2W_Q._8jwp_g, .ln2W_Q._8jwp_g .URcszA, .ln2W_Q._8jwp_g .fE_z1w { vertica=
l-align: top; }

.JRVTGQ { display: block; }

.SDHWjg { position: absolute; }

.wNK52w { transform-origin: 0px 0px; }

.qY_pAA { display: block; }

.Pr6LEA, .qY_pAA { height: 100%; left: 0px; pointer-events: none; position:=
 absolute; top: 0px; width: 100%; }

.hWv4NA { position: relative; transform-origin: left top; }

.Xax3mQ { backface-visibility: hidden; }

.N0VbIw { box-sizing: border-box; display: flex; flex-direction: column; ov=
erflow: hidden; overflow-wrap: break-word; position: absolute; }

.NEG9gQ { opacity: 0.6; pointer-events: none; }

.ZYgCXA { font-family: "Canva Sans", "Noto Sans Variable", "Noto Sans", -ap=
ple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif; f=
ont-variation-settings: "opsz" 0; font-weight: 600; overflow: hidden; text-=
overflow: ellipsis; white-space: nowrap; }

._DyBwg { direction: ltr; }

._dTYUw { direction: rtl; }

.hbcXuA { contain: layout; position: relative; }

.csGvXg { border-spacing: 0px; pointer-events: none; }

._5RL20Q { display: block; left: 0px; overflow-wrap: break-word; pointer-ev=
ents: auto; position: absolute; top: 0px; }

._5RL20Q, .xam_ew { box-sizing: border-box; }

.xam_ew { height: 100%; overflow: hidden; width: 100%; }

.iRGCPA { display: flex; flex-direction: column; height: calc(100%/var(--H-=
KugQ, 1)); transform: scale(var(--H-KugQ,1)); width: calc(100%/var(--H-KugQ=
, 1)); }

.aXBSSA, .nrDMmw { left: 0px; pointer-events: none; position: absolute; top=
: 0px; }

._DyBwg .iRGCPA { transform-origin: 0px 0px; }

._dTYUw .iRGCPA { transform-origin: 100% 0px; }

._3tQhmA { overflow: hidden; position: relative; scrollbar-color: rgba(17, =
23, 29, 0.6) transparent; scrollbar-width: thin; z-index: 0; }

._3tQhmA::-webkit-scrollbar-track { border-radius: 4px; }

._3tQhmA::-webkit-scrollbar-thumb { background-color: rgba(17, 23, 29, 0.6)=
; border-radius: 4px; visibility: hidden; }

._3tQhmA:hover::-webkit-scrollbar-thumb { visibility: visible; }

.XN8TNg { direction: rtl; }

.aXZ4AQ { height: 100%; overflow-y: auto; }

.aXZ4AQ._4UOq2w { overflow-y: scroll; }

.Ytfqyg { overflow-x: auto; overscroll-behavior-x: none; width: 100%; }

.Ytfqyg._4UOq2w { overflow-x: scroll; }

._7LfHaw { height: 100%; width: 100%; }

.VV6kWg { display: flex; position: relative; }

.VV6kWg.mY6Hig { flex-direction: column; height: 100%; min-height: 0px; }

.VV6kWg.djzRdA { flex-direction: row; min-width: 0px; width: 100%; }

.x7J7bg { align-items: stretch; display: flex; }

._7TOhdw { pointer-events: none; z-index: 1; }

._7TOhdw, .c3bmdQ { inset: 0px; overflow: hidden; position: absolute; }

.ENdeHg { box-shadow: rgba(64, 87, 109, 0.07) 0px 0px 0px 1px, rgba(57, 76,=
 96, 0.15) 0px 0px 8px 0px; opacity: 0; position: absolute; }

.ENdeHg.fAUCyA { transition: opacity 0.25s ease 0s, box-shadow 0.1s linear =
0s; }

.ENdeHg.IR7ypg { opacity: 1; }

.U7V4SA { top: -16px; }

.U7V4SA, ._0_l6rw { height: 16px; left: 0px; right: 0px; }

._0_l6rw { bottom: -16px; }

.l_mvTw { left: -16px; }

.VGdk6Q, .l_mvTw { bottom: 0px; top: 0px; width: 16px; }

.VGdk6Q { right: -16px; }

._2_PFFQ { display: flex; justify-content: center; }

.PI39zQ, .uDJg1Q { position: relative; }

.z3Ewvg { bottom: 0px; top: 0px; width: 1px; }

.CPvt7Q, .z3Ewvg { position: absolute; }

.CPvt7Q { display: flex; height: 100%; width: 100%; }

.u39wDw { left: 0px; position: absolute; top: 0px; }

.IJanIQ, .u39wDw { height: 100%; width: 100%; }

.IJanIQ { overflow: visible; }

.AModoQ { position: relative; }

.F4BMJg { height: 100%; }

._5kZSsQ { inset: 0px; position: absolute; }

@font-face { font-display: swap; font-family: "Open Sans"; font-style: norm=
al; font-weight: 400; src: url("images/e755c8eab4133359c241132063a279d0.wof=
f2") format("woff2"), url("images/89ba4e29dc7a63cd15959a5bb068bb0e.woff") f=
ormat("woff"); unicode-range: U+460-52F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, =
U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-display: swap; font-family: "Open Sans"; font-style: norm=
al; font-weight: 400; src: url("images/0c4fa4c622644d97f38d201cba1d30f5.wof=
f2") format("woff2"), url("images/89ba4e29dc7a63cd15959a5bb068bb0e.woff") f=
ormat("woff"); unicode-range: U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-display: swap; font-family: "Open Sans"; font-style: norm=
al; font-weight: 400; src: url("images/a47b96672d775073beaf93b7e7ffff54.wof=
f2") format("woff2"), url("images/89ba4e29dc7a63cd15959a5bb068bb0e.woff") f=
ormat("woff"); unicode-range: U+1F00-1FFF; }

@font-face { font-display: swap; font-family: "Open Sans"; font-style: norm=
al; font-weight: 400; src: url("images/7aed216c4e61d12ee639b0b758037c5d.wof=
f2") format("woff2"), url("images/89ba4e29dc7a63cd15959a5bb068bb0e.woff") f=
ormat("woff"); unicode-range: U+370-3FF; }

@font-face { font-display: swap; font-family: "Open Sans"; font-style: norm=
al; font-weight: 400; src: url("images/eafec10d3f23f994fb6dc59545035460.wof=
f2") format("woff2"), url("images/89ba4e29dc7a63cd15959a5bb068bb0e.woff") f=
ormat("woff"); unicode-range: U+102-103, U+110-111, U+128-129, U+168-169, U=
+1A0-1A1, U+1AF-1B0, U+1EA0-1EF9, U+20AB; }

@font-face { font-display: swap; font-family: "Open Sans"; font-style: norm=
al; font-weight: 400; src: url("images/6923b1967484e2b12e1016fb33061791.wof=
f2") format("woff2"), url("images/89ba4e29dc7a63cd15959a5bb068bb0e.woff") f=
ormat("woff"); unicode-range: U+100-24F, U+259, U+1E00-1EFF, U+2020, U+20A0=
-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-display: swap; font-family: "Open Sans"; font-style: norm=
al; font-weight: 400; src: url("images/ff9d619b59f5cb3529b100448f398ac5.wof=
f2") format("woff2"), url("images/89ba4e29dc7a63cd15959a5bb068bb0e.woff") f=
ormat("woff"); unicode-range: U+0-FF, U+131, U+152-153, U+2BB-2BC, U+2C6, U=
+2DA, U+2DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U=
+2215, U+FEFF, U+FFFD; }

.BPSSJQ { display: flex; flex-direction: column; font-family: "Open Sans", =
sans-serif; height: 100%; justify-content: flex-end; line-height: 1.6; max-=
height: 100%; pointer-events: none; text-align: center; width: 100%; }

.UkcVBg { background: rgba(13, 18, 22, 0.7); color: rgb(255, 255, 255); dis=
play: inline-block; padding: 4px 8px; }

.yFEglQ { white-space: nowrap; }

._3NW_OA { background: none; border: none; cursor: pointer; margin-right: 2=
4px; padding: 0px; }

.MWNIKw { outline: none; }

.nbb59g { margin-left: 24px; margin-right: auto; }

.lM4cjQ { color: var(--VcZbvQ); }

._3NW_OA:disabled .lM4cjQ { color: var(--PRQgyw); }

._3jDRow { align-items: center; display: flex; opacity: 0; position: relati=
ve; }

.QnPmDw { flex-wrap: wrap; justify-content: space-between; }

.q4QWTw { align-items: center; display: flex; margin-left: auto; }

._5Zlb5Q { opacity: 1; pointer-events: auto; }

.e_HzGw { transition: opacity 0.25s ease 0s; }

._2_pnug { color: var(--VcZbvQ); direction: ltr; font-family: "Canva Sans",=
 "Noto Sans Variable", "Noto Sans", -apple-system, BlinkMacSystemFont, "Seg=
oe UI", Helvetica, Arial, sans-serif; font-size: calc(var(----lgQg, .1rem)*=
8/8*12); line-height: 1.4; padding-right: 24px; white-space: nowrap; }

._2Ouzng { height: 52px; position: relative; width: 100%; }

.s0wW_g { order: 3; }

.QCi37g { appearance: none; background: none; box-sizing: border-box; direc=
tion: ltr; display: block; height: 100%; margin: 0px; padding: 24px 8px; wi=
dth: 100%; }

.BDTDKw { transition: all 0.2s ease 0s; }

.QCi37g:hover { cursor: pointer; }

.QCi37g:active { cursor: grabbing; }

.bbGOcQ:focus { outline: none; }

.QCi37g::-webkit-slider-thumb { appearance: none; background-clip: content-=
box; background-color: var(--6u-yJQ); border: 14px solid transparent; borde=
r-radius: 100%; box-sizing: border-box; filter: drop-shadow(rgba(28, 39, 48=
, 0.5) 0px 0px 1px); height: 40px; opacity: 1; width: 40px; }

.BDTDKw::-webkit-slider-thumb { transition: transform 0.2s ease 0s; }

.QCi37g:active::-webkit-slider-thumb { transform: scale(1.25); }

.fHHmQw { opacity: 0; pointer-events: none; position: relative; }

.kFnREQ { opacity: 1; }

.kFnREQ.xE5Oww { transition: opacity 0.15s ease-in 0s; }

.VclgIw { background-color: rgb(13, 18, 22); border-radius: 4px; bottom: 24=
px; color: rgb(255, 255, 255); left: 0px; padding: 6px 10px; position: abso=
lute; transform: translateX(-50%); }

.VclgIw::before { background-color: inherit; border-radius: 0px 0px 3px; bo=
ttom: -4px; content: ""; height: 8px; left: 50%; position: absolute; transf=
orm: translateX(-50%) rotate(45deg); width: 8px; }

.DYvFsA, .DuLOcg, .k9236g { height: 100%; position: absolute; width: 100%; =
}

.DuLOcg, .k9236g { box-sizing: border-box; }

.k9236g { padding: 24px 28px; }

.LK9gBQ { height: 4px; position: relative; }

._6UfzEQ { background-color: var(--6u-yJQ); box-sizing: border-box; left: 4=
px; right: 4px; transform-origin: left center; }

.Idr01w, ._6UfzEQ { height: inherit; position: absolute; }

.Idr01w { background-color: inherit; top: 0px; width: 4px; }

.jz_KVw { border-radius: 100% 0px 0px 100%; right: 100%; transform-origin: =
right center; }

.WcClCQ { border-radius: 0px 100% 100% 0px; left: 100%; transform-origin: l=
eft center; }

.mbNwCw { left: calc(100% - 1px); }

._5MYBAA, .i6797g { height: 100%; position: absolute; width: 100%; }

.i6797g { box-sizing: border-box; padding: 24px; }

.Z5sRUw { position: relative; }

.jnz76g { cursor: inherit; display: inline-block; }

.smjR_Q { color: var(--PRQgyw); }

.light { ---sugNw: #f6f7f8; }

.dark { ---sugNw: #252627; }

.SNEyeQ { align-items: stretch; background-color: var(--C-q6Ig); border-wid=
th: 1px; border-style: solid; border-image: initial; border-color: var(--Zy=
a5eQ); border-radius: 8px; box-sizing: border-box; color: var(--VcZbvQ); cu=
rsor: text; display: flex; outline: none; overflow: hidden; position: relat=
ive; width: 100%; }

.XLEWAA { height: calc(var(----lgQg, .1rem)*8*5); padding: 0px 12px; }

.UOc2_A { padding-left: 0px; }

.QtG3IQ { padding-right: 0px; }

.Pe8c4g:not(.ltD3zQ, .lPNpLg, .Vq3Qgg, ._LBWaA):hover { border-color: var(-=
-9_Lxmw); }

.ltD3zQ { border-color: var(--xAYPzA); }

.SJWROg { outline: -webkit-focus-ring-color solid 2px; outline-offset: -2px=
; }

.Vq3Qgg { border-color: var(--nOtbOg); }

.lPNpLg { background-color: var(---sugNw); border-color: var(--VjFOWQ); col=
or: var(--PRQgyw); cursor: not-allowed; }

._LBWaA:not(.Vq3Qgg) { background-color: transparent; border-color: transpa=
rent; }

.bCVoGQ { appearance: none; background: inherit; border: 0px; box-sizing: b=
order-box; color: inherit; font-variant-ligatures: none; min-width: 8px; ou=
tline: none; width: 100%; }

.n1hUmA { padding: 0px 0px 1px; }

.eiradA::-webkit-contacts-auto-fill-button { position: absolute; right: 0px=
; visibility: hidden; }

[dir=3D"rtl"] .bCVoGQ:placeholder-shown { direction: rtl; }

.bCVoGQ::placeholder { color: var(--TJtBjA); }

.bCVoGQ:disabled { color: var(--PRQgyw); cursor: not-allowed; }

._0ViUFA { align-items: center; display: flex; flex: 1 0 32px; justify-cont=
ent: center; padding: 0px 4px; }

._0ViUFA:first-child { padding-left: 3px; }

._0ViUFA:last-child { padding-right: 3px; }

.SRq2qg { text-align: center; }

.bCVoGQ[type=3D"number"]::-webkit-inner-spin-button, .bCVoGQ[type=3D"number=
"]::-webkit-outer-spin-button { appearance: none; margin: 0px; }

.bCVoGQ[type=3D"number"] { }

.bCVoGQ[type=3D"search"]::-webkit-search-cancel-button, .bCVoGQ[type=3D"sea=
rch"]::-webkit-search-decoration, .bCVoGQ[type=3D"search"]::-webkit-search-=
results-button, .bCVoGQ[type=3D"search"]::-webkit-search-results-decoration=
 { display: none; }

.YpcSdQ { -webkit-tap-highlight-color: transparent; position: relative; }

.G83NzQ, .YpcSdQ { cursor: pointer; height: 100%; width: 100%; }

.G83NzQ { margin: 0px; opacity: 0; position: absolute; }

.G83NzQ::-webkit-slider-thumb { height: 20px; width: 20px; }

.G83NzQ.JbhT1A { cursor: not-allowed; }

.of3vlA { left: 0px; width: 100%; }

._8UGKVA, .of3vlA { height: 100%; position: absolute; }

._8UGKVA { left: 10px; width: calc(100% - 20px); }

.sQbJYw { margin-left: var(--sI0vHQ); position: relative; top: 50%; }

.light { --iXacOw: #f0f1f5; --BKx0jQ: rgba(165,112,255,.2); }

.dark { --iXacOw: #898d90; --BKx0jQ: rgba(165,112,255,.4); }

.f4H83g { height: 40px; }

._4j6ppg._4j6ppg { padding: 0px; width: calc(var(----lgQg, .1rem)*8*5); }

.xcyqug { text-align: center; }

.h8V5DQ { top: 50%; transform: translateY(-50%); }

.FzHnpA, .h8V5DQ { height: 4px; position: absolute; width: 100%; }

.FzHnpA { background: var(--EDBnWg,var(--yrvb-A)); border-radius: 9999px; t=
ransform: scaleX(1); }

._5Frk1w { align-items: center; display: flex; justify-content: center; lef=
t: 100%; }

._5Frk1w, ._5Frk1w::before { border-radius: 9999px; height: 20px; position:=
 absolute; top: 50%; transform: translate(-50%, -50%); width: 20px; }

._5Frk1w::before { background: var(--igtOUw,var(--VfoYEg)); border: 1px sol=
id var(--cDTB8w,var(--Zya5eQ)); box-shadow: var(--3LGewA); box-sizing: bord=
er-box; content: ""; left: 50%; transition: transform 0.1s ease-in-out 0s; =
}

._5Frk1w.KLT3Nw::before { --cDTB8w: var(--9_Lxmw); height: 22px; width: 22p=
x; }

._5Frk1w.ZmvkpQ::before { --cDTB8w: var(--xAYPzA); box-shadow: unset; heigh=
t: 22px; width: 22px; }

._5Frk1w.s9U0XA::before { --cDTB8w: var(--VjFOWQ); background: var(--iXacOw=
); box-shadow: none; }

._5Frk1w::after { background: none; border-radius: 9999px; box-sizing: bord=
er-box; content: ""; height: 20px; left: 50%; position: absolute; top: 50%;=
 transform: translate(-50%, -50%); transition: box-shadow 0.1s ease-in-out =
0s; width: 20px; }

._5Frk1w._aTFiA::after { box-shadow: 0 0 0 10px var(--MghLXQ); }

._5Frk1w.ZmvkpQ::after { box-shadow: 0 0 0 10px var(--BKx0jQ); }

._0VC5wQ { background: var(--vrWjkA,var(--eGVbng)); clip-path: inset(0 var(=
--yOWLCQ) 0 var(--5GtT_Q) round 9999px); height: 4px; position: absolute; t=
op: 50%; transform: translateY(-50%); width: 100%; }

._0VC5wQ.s9U0XA { background: var(--oqurdw); }

.gEWUlg { display: flex; left: 10px; position: relative; width: calc(100% -=
 20px); }

._1JSmpw { max-width: calc(100% - 4px); min-width: 0px; }

.km_40w { background-color: var(--Zya5eQ); height: 4px; transform: translat=
eY(-6px); width: 4px; }

.O8pekQ, .km_40w { border-radius: 9999px; }

.O8pekQ { background-color: var(---UopgA); height: 2px; position: absolute;=
 width: 2px; }

.DvlkcQ { left: 1px; top: 1px; }

._7j_Vbg { right: 1px; top: 1px; }

.tk5bqA { align-items: center; bottom: 24px; display: flex; height: 40px; l=
eft: calc(50% + 8px); opacity: 0; padding: 0px 8px; pointer-events: none; p=
osition: absolute; transform: rotate(-90deg); transform-origin: left bottom=
; transition: opacity 0.5s ease 0s; }

.V5bi0A { opacity: 1; pointer-events: auto; }

.mrjvFA { background-color: rgba(255, 255, 255, 0.4); border-radius: 2px; h=
eight: 4px; transform: translateY(-50%); width: 100%; }

.mrjvFA, .nu5SEQ { position: absolute; top: 50%; }

.nu5SEQ { background: rgb(255, 255, 255); border-radius: 50%; filter: drop-=
shadow(rgba(28, 39, 48, 0.5) 0px 0px 1px); height: 20px; left: 100%; transf=
orm: translate(-50%, -50%); transition: transform 0.2s ease 0s; width: 20px=
; }

.nu5SEQ.nvrn9Q { transform: translate(-50%, -50%) scale(1.25); }

.nu5SEQ.XcMV8g { outline: -webkit-focus-ring-color auto 5px; }

.nu5SEQ.Wuyo6A { outline: none; }

.I4sCDQ { background-image: linear-gradient(transparent,var(--KtXlRg)); bot=
tom: 0px; height: 80px; left: 0px; max-height: 100%; opacity: 0; position: =
absolute; right: 0px; transform-origin: center bottom; transition: transfor=
m 0.25s ease 0s; }

.n1_ZIg { height: 120px; }

@media (max-width: 599px) {
  .nRVLfw { height: calc((var(--safe-area-inset-bottom) + 8px*10*1.5)*1.1);=
 }
}

.A2yCKg { opacity: 1; }

.v4nAuw { transition: opacity 0.25s ease 0s, transform 0.5s ease 0s; }

.XUGaUA { transform: scaleY(3.5); }

._97009w { height: 100%; pointer-events: none; position: absolute; width: 1=
00%; }

.tqhDGw { pointer-events: auto; }

.KGHx9g { opacity: 0; }

.S7gH5g { opacity: 1; }

.qGs8mQ { background-color: var(--KtXlRg); border: none; border-radius: 100=
%; color: var(--6u-yJQ); cursor: pointer; display: block; height: 48px; opa=
city: 0; outline: none; padding: 0px; pointer-events: none; width: 48px; }

.qGs8mQ:hover { background-color: var(--QADODw); transform: scale(1.05); }

.qGs8mQ:active { background-color: var(--kTBxcw); }

.gI9ywA { opacity: 1; pointer-events: auto; }

.tnQ9tQ { height: 24px; width: 24px; }

.BDjDQQ { transition: opacity 0.25s ease-out 0s, background-color 0.2s ease=
-out 0s, transform 0.2s ease-out 0s; }

.BDjDQQ.hafdyw { transform: scale(1.5); transition: opacity 0.35s ease-out =
0s, transform 0.35s ease-out 0s; }

.Lqh_3w { cursor: auto; height: 100%; left: 0px; pointer-events: none; posi=
tion: absolute; top: 0px; width: 100%; }

.foMqyw, .thT2yw { height: fit-content; margin: auto; top: 0px; width: fit-=
content; }

.Qy939g, .foMqyw, .thT2yw { bottom: 0px; left: 0px; pointer-events: none; p=
osition: absolute; right: 0px; }

.OLvpgw { position: relative; transform: translateY(100%); }

.OLvpgw.U_3fPA { transform: translateY(0px); }

.OLvpgw.PZ3xOQ { transition: transform 0.25s ease 0s; }

.KTdHOA { opacity: 0; }

.KTdHOA.U_3fPA { opacity: 1; pointer-events: auto; }

.KTdHOA.PZ3xOQ { transition: opacity 83.3333ms ease 0s; }

.OLvpgw.U_3fPA .KTdHOA.PZ3xOQ { transition-delay: 83.3333ms; }

.tl_uBw { pointer-events: none; position: absolute; width: 100%; }

.c3S1Sg { bottom: 100%; padding-bottom: 2%; }

.Yv0Udg { padding-top: 4px; top: 100%; }

.Bu_D9Q { inset: 0px; pointer-events: none; position: absolute; }

.fLZWsQ { bottom: var(--safe-area-inset-bottom); }

._0d0kIw { color: var(--VcZbvQ); font-size: 0px; opacity: 0; }

.eyDYeQ { filter: drop-shadow(rgba(57, 76, 96, 0.15) 0px 2px 8px) drop-shad=
ow(rgba(64, 87, 109, 0.07) 0px 0px 0px); opacity: 1; transition: opacity 0s=
 ease 1s; }

.uDupQw { transition-duration: 0.25s; }

.eyDYeQ.uDupQw { animation: 0.6s linear 0s infinite normal none running eT6=
GTQ; }

@keyframes eT6GTQ {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.V2GgQg { left: 0px; position: absolute; top: 0px; }

.AS5EhQ, .V2GgQg { height: 100%; width: 100%; }

.AS5EhQ { overflow: hidden; position: relative; }

._4UrDqA { height: 100%; width: 100%; }

.NI12hw { pointer-events: none; }

.FLDMzw { backface-visibility: hidden; display: none; }

.FLDMzw.Zmd7Ig { display: block; }

._6oMxRw { left: 0px; opacity: 1; position: absolute; top: 0px; }

._6oMxRw.vEnjCA { opacity: 0; }

._6oMxRw.wgIPfg { transition: opacity 0.3s ease-in-out 0s; }

@media print {
  .t1Akgg { position: absolute; }
}

.FLDMzw.f_YWrg, ._6oMxRw.f_YWrg { filter: grayscale(0.45); transition: filt=
er 0s ease 2s; }

.BVJWuA { object-fit: fill; }

.mBtRaQ { object-fit: contain; }

._Ta_ew { object-fit: cover; }

.paNqSg { left: 0px; object-fit: fill; position: absolute; top: 0px; }

.jXCxjw, .paNqSg { height: 100%; width: 100%; }

.RDErXw { left: 0px; opacity: 1; position: absolute; top: 0px; }

._8BlrHw { visibility: hidden; }

.bvFjSA { height: 100%; width: 100%; }

.BzO_BA { left: 0px; opacity: 1; position: absolute; top: 0px; }

.WOwPgA { visibility: hidden; }

#root, ._uJvWw, body, html { height: 100%; }

body { overflow: hidden; touch-action: manipulation; }

html { font-size: 62.5%; }

#root, .ZHPl4Q, body, html { margin: 0px; padding: 0px; width: 100%; }

.EHoceA #root, .EHoceA .ZHPl4Q, .EHoceA body, html.EHoceA { user-select: no=
ne; }

#root, .ZHPl4Q { position: relative; z-index: 0; }

:root:lang(ko) { word-break: keep-all; }

body { }

.yIDCqA { height: 100%; position: relative; width: 100%; }

.yIDCqA, [tabindex], button { -webkit-tap-highlight-color: transparent; }

.Qm3myw { height: 100%; overflow: hidden; }
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static.canva.com/web/static_font_4.ltr.css

@charset "utf-8";

@font-face { font-display: swap; font-family: "Canva Sans"; font-style: nor=
mal; font-weight: 400 700; src: url("images/a9b8e7902ec1ab885d382156f33738e=
5.woff2") format("woff2"), url("images/013277426f0d555d96c7a75503df5754.wof=
f") format("woff"); unicode-range: U+B1-B3, U+B9, U+BC-BE, U+394, U+3A9, U+=
3BC, U+3C0, U+2044, U+2070, U+2074-2089, U+2126, U+212E, U+2153-2154, U+215=
B-215E, U+2202, U+2206, U+220F, U+2211-2212, U+2215, U+2219, U+221A, U+221E=
, U+222B, U+2248, U+2260, U+2264-2265, U+25CA; }

@font-face { font-display: swap; font-family: "Canva Sans"; font-style: nor=
mal; font-weight: 400 700; src: url("images/d97a6ffa507b670a5b1664f98fc1183=
d.woff2") format("woff2"), url("images/1de7434d86166b0614ff3d61cda11a54.wof=
f") format("woff"); unicode-range: U+A1, U+AA-AB, U+AF, U+B8, U+BA-BB, U+BF=
, U+C0-D6, U+D8-F6, U+F8-148, U+14A-17E, U+192, U+1B5-1B6, U+1FC-1FD, U+218=
-21B, U+237, U+2C6-2C7, U+2C9, U+2D8-2DD, U+1E80-1E85, U+1E9E, U+1EF2-1EF3,=
 U+2030, U+2039-203A, U+20AC, U+20BA, U+2113; }

@font-face { font-display: swap; font-family: "Canva Sans"; font-style: nor=
mal; font-weight: 400 700; src: url("images/cff149ee1e9d2be50ac77bcd86769d0=
5.woff2") format("woff2"), url("images/f93a5165fac252ecfd593929c4e6146f.wof=
f") format("woff"); unicode-range: U+20-7E, U+A0, U+A2-A9, U+AC-AE, U+B0, U=
+B4-B7, U+D7, U+F7, U+300-304, U+306-308, U+30A-30C, U+312, U+326-328, U+20=
13-2014, U+2018-201A, U+201C-201E, U+2020-2022, U+2026, U+2117, U+2120, U+2=
122, U+2190-2199, U+FB01-FB02, U+FEFF, U+FFFC-FFFD; }
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static.canva.com/web/b5de2817a09dae0e.ltr.css

@charset "utf-8";

.gcYy_A { color: initial; font: initial; font-palette: initial; font-synthe=
sis: initial; forced-color-adjust: initial; position: relative; text-orient=
ation: initial; text-rendering: initial; -webkit-font-smoothing: initial; -=
webkit-locale: initial; -webkit-text-orientation: initial; -webkit-writing-=
mode: initial; writing-mode: initial; zoom: initial; accent-color: initial;=
 place-content: initial; place-items: initial; place-self: initial; alignme=
nt-baseline: initial; animation-composition: initial; animation: initial; a=
pp-region: initial; appearance: initial; aspect-ratio: initial; backdrop-fi=
lter: initial; backface-visibility: initial; background: initial; backgroun=
d-blend-mode: initial; baseline-shift: initial; baseline-source: initial; b=
lock-size: initial; border-block: initial; border: initial; border-radius: =
initial; border-collapse: initial; border-end-end-radius: initial; border-e=
nd-start-radius: initial; border-inline: initial; border-start-end-radius: =
initial; border-start-start-radius: initial; inset: initial; box-shadow: in=
itial; box-sizing: initial; break-after: initial; break-before: initial; br=
eak-inside: initial; buffered-rendering: initial; caption-side: initial; ca=
ret-color: initial; clear: initial; clip: initial; clip-path: initial; clip=
-rule: initial; color-interpolation: initial; color-interpolation-filters: =
initial; color-rendering: initial; color-scheme: initial; columns: initial;=
 column-fill: initial; gap: initial; column-rule: initial; column-span: ini=
tial; contain: initial; contain-intrinsic-block-size: initial; contain-intr=
insic-size: initial; contain-intrinsic-inline-size: initial; container: ini=
tial; content: initial; content-visibility: initial; counter-increment: ini=
tial; counter-reset: initial; counter-set: initial; cursor: initial; cx: in=
itial; cy: initial; d: initial; display: block; dominant-baseline: initial;=
 empty-cells: initial; fill: initial; fill-opacity: initial; fill-rule: ini=
tial; filter: initial; flex: initial; flex-flow: initial; float: initial; f=
lood-color: initial; flood-opacity: initial; grid: initial; grid-area: init=
ial; height: 100%; hyphenate-character: initial; hyphenate-limit-chars: ini=
tial; hyphens: initial; image-orientation: initial; image-rendering: initia=
l; initial-letter: initial; inline-size: initial; inset-block: initial; ins=
et-inline: initial; isolation: initial; letter-spacing: initial; lighting-c=
olor: initial; line-break: initial; list-style: initial; margin-block: init=
ial; margin: initial; margin-inline: initial; marker: initial; mask: initia=
l; mask-type: initial; math-depth: initial; math-shift: initial; math-style=
: initial; max-block-size: initial; max-height: initial; max-inline-size: i=
nitial; max-width: initial; min-block-size: initial; min-height: initial; m=
in-inline-size: initial; min-width: initial; mix-blend-mode: initial; objec=
t-fit: initial; object-position: initial; object-view-box: initial; offset:=
 initial; opacity: initial; order: initial; orphans: initial; outline: init=
ial; outline-offset: initial; overflow-anchor: initial; overflow-clip-margi=
n: initial; overflow-wrap: initial; overflow: initial; overlay: initial; ov=
erscroll-behavior-block: initial; overscroll-behavior-inline: initial; over=
scroll-behavior: initial; padding-block: initial; padding: initial; padding=
-inline: initial; page: initial; page-orientation: initial; paint-order: in=
itial; perspective: initial; perspective-origin: initial; pointer-events: i=
nitial; quotes: initial; r: initial; resize: initial; rotate: initial; ruby=
-position: initial; rx: initial; ry: initial; scale: initial; scroll-behavi=
or: initial; scroll-margin-block: initial; scroll-margin: initial; scroll-m=
argin-inline: initial; scroll-padding-block: initial; scroll-padding: initi=
al; scroll-padding-inline: initial; scroll-snap-align: initial; scroll-snap=
-stop: initial; scroll-snap-type: initial; scroll-timeline: initial; scroll=
bar-color: initial; scrollbar-gutter: initial; scrollbar-width: initial; sh=
ape-image-threshold: initial; shape-margin: initial; shape-outside: initial=
; shape-rendering: initial; size: initial; speak: initial; stop-color: init=
ial; stop-opacity: initial; stroke: initial; stroke-dasharray: initial; str=
oke-dashoffset: initial; stroke-linecap: initial; stroke-linejoin: initial;=
 stroke-miterlimit: initial; stroke-opacity: initial; stroke-width: initial=
; tab-size: initial; table-layout: initial; text-align: initial; text-align=
-last: initial; text-anchor: initial; text-combine-upright: initial; text-d=
ecoration: initial; text-decoration-skip-ink: initial; text-emphasis: initi=
al; text-emphasis-position: initial; text-indent: initial; text-overflow: i=
nitial; text-shadow: initial; text-size-adjust: initial; text-transform: in=
itial; text-underline-offset: initial; text-underline-position: initial; wh=
ite-space: initial; timeline-scope: initial; touch-action: initial; transfo=
rm: initial; transform-box: initial; transform-origin: initial; transform-s=
tyle: initial; transition: initial; translate: initial; user-select: initia=
l; vector-effect: initial; vertical-align: initial; view-timeline: initial;=
 view-transition-name: initial; visibility: initial; border-spacing: initia=
l; -webkit-box-align: initial; -webkit-box-decoration-break: initial; -webk=
it-box-direction: initial; -webkit-box-flex: initial; -webkit-box-ordinal-g=
roup: initial; -webkit-box-orient: initial; -webkit-box-pack: initial; -web=
kit-box-reflect: initial; -webkit-line-break: initial; -webkit-line-clamp: =
initial; -webkit-mask-box-image: initial; -webkit-print-color-adjust: initi=
al; -webkit-rtl-ordering: initial; -webkit-ruby-position: initial; -webkit-=
tap-highlight-color: initial; -webkit-text-combine: initial; -webkit-text-d=
ecorations-in-effect: initial; -webkit-text-fill-color: initial; -webkit-te=
xt-security: initial; -webkit-text-stroke: initial; -webkit-user-drag: init=
ial; -webkit-user-modify: initial; widows: initial; width: 100%; will-chang=
e: initial; word-break: initial; word-spacing: initial; x: initial; y: init=
ial; z-index: initial; }

._kI3Pw { display: contents; }

@supports not (display:contents) {
  ._kI3Pw { height: inherit; }
}

.BHOPhg { color: initial; font: initial; font-palette: initial; font-synthe=
sis: initial; forced-color-adjust: initial; position: initial; text-orienta=
tion: initial; text-rendering: initial; -webkit-font-smoothing: initial; -w=
ebkit-locale: initial; -webkit-text-orientation: initial; -webkit-writing-m=
ode: initial; writing-mode: initial; zoom: initial; accent-color: initial; =
place-content: initial; place-items: initial; place-self: initial; alignmen=
t-baseline: initial; animation-composition: initial; animation: initial; ap=
p-region: initial; appearance: initial; aspect-ratio: initial; backdrop-fil=
ter: initial; backface-visibility: initial; background: initial; background=
-blend-mode: initial; baseline-shift: initial; baseline-source: initial; bl=
ock-size: initial; border-block: initial; border: initial; border-radius: i=
nitial; border-collapse: initial; border-end-end-radius: initial; border-en=
d-start-radius: initial; border-inline: initial; border-start-end-radius: i=
nitial; border-start-start-radius: initial; inset: initial; box-shadow: ini=
tial; box-sizing: initial; break-after: initial; break-before: initial; bre=
ak-inside: initial; buffered-rendering: initial; caption-side: initial; car=
et-color: initial; clear: initial; clip: initial; clip-path: initial; clip-=
rule: initial; color-interpolation: initial; color-interpolation-filters: i=
nitial; color-rendering: initial; color-scheme: initial; columns: initial; =
column-fill: initial; gap: initial; column-rule: initial; column-span: init=
ial; contain: initial; contain-intrinsic-block-size: initial; contain-intri=
nsic-size: initial; contain-intrinsic-inline-size: initial; container: init=
ial; content: initial; content-visibility: initial; counter-increment: init=
ial; counter-reset: initial; counter-set: initial; cursor: initial; cx: ini=
tial; cy: initial; d: initial; display: block; dominant-baseline: initial; =
empty-cells: initial; fill: initial; fill-opacity: initial; fill-rule: init=
ial; filter: initial; flex: initial; flex-flow: initial; float: initial; fl=
ood-color: initial; flood-opacity: initial; grid: initial; grid-area: initi=
al; height: initial; hyphenate-character: initial; hyphenate-limit-chars: i=
nitial; hyphens: initial; image-orientation: initial; image-rendering: init=
ial; initial-letter: initial; inline-size: initial; inset-block: initial; i=
nset-inline: initial; isolation: initial; letter-spacing: initial; lighting=
-color: initial; line-break: initial; list-style: initial; margin-block: in=
itial; margin: initial; margin-inline: initial; marker: initial; mask: init=
ial; mask-type: initial; math-depth: initial; math-shift: initial; math-sty=
le: initial; max-block-size: initial; max-height: initial; max-inline-size:=
 initial; max-width: initial; min-block-size: initial; min-height: initial;=
 min-inline-size: initial; min-width: initial; mix-blend-mode: initial; obj=
ect-fit: initial; object-position: initial; object-view-box: initial; offse=
t: initial; opacity: initial; order: initial; orphans: initial; outline: in=
itial; outline-offset: initial; overflow-anchor: initial; overflow-clip-mar=
gin: initial; overflow-wrap: initial; overflow: initial; overlay: initial; =
overscroll-behavior-block: initial; overscroll-behavior-inline: initial; ov=
erscroll-behavior: initial; padding-block: initial; padding: initial; paddi=
ng-inline: initial; page: initial; page-orientation: initial; paint-order: =
initial; perspective: initial; perspective-origin: initial; pointer-events:=
 initial; quotes: initial; r: initial; resize: initial; rotate: initial; ru=
by-position: initial; rx: initial; ry: initial; scale: initial; scroll-beha=
vior: initial; scroll-margin-block: initial; scroll-margin: initial; scroll=
-margin-inline: initial; scroll-padding-block: initial; scroll-padding: ini=
tial; scroll-padding-inline: initial; scroll-snap-align: initial; scroll-sn=
ap-stop: initial; scroll-snap-type: initial; scroll-timeline: initial; scro=
llbar-color: initial; scrollbar-gutter: initial; scrollbar-width: initial; =
shape-image-threshold: initial; shape-margin: initial; shape-outside: initi=
al; shape-rendering: initial; size: initial; speak: initial; stop-color: in=
itial; stop-opacity: initial; stroke: initial; stroke-dasharray: initial; s=
troke-dashoffset: initial; stroke-linecap: initial; stroke-linejoin: initia=
l; stroke-miterlimit: initial; stroke-opacity: initial; stroke-width: initi=
al; tab-size: initial; table-layout: initial; text-align: initial; text-ali=
gn-last: initial; text-anchor: initial; text-combine-upright: initial; text=
-decoration: initial; text-decoration-skip-ink: initial; text-emphasis: ini=
tial; text-emphasis-position: initial; text-indent: initial; text-overflow:=
 initial; text-shadow: initial; text-size-adjust: initial; text-transform: =
initial; text-underline-offset: initial; text-underline-position: initial; =
white-space: initial; timeline-scope: initial; touch-action: initial; trans=
form: initial; transform-box: initial; transform-origin: initial; transform=
-style: initial; transition: initial; translate: initial; user-select: init=
ial; vector-effect: initial; vertical-align: initial; view-timeline: initia=
l; view-transition-name: initial; visibility: initial; border-spacing: init=
ial; -webkit-box-align: initial; -webkit-box-decoration-break: initial; -we=
bkit-box-direction: initial; -webkit-box-flex: initial; -webkit-box-ordinal=
-group: initial; -webkit-box-orient: initial; -webkit-box-pack: initial; -w=
ebkit-box-reflect: initial; -webkit-line-break: initial; -webkit-line-clamp=
: initial; -webkit-mask-box-image: initial; -webkit-print-color-adjust: ini=
tial; -webkit-rtl-ordering: initial; -webkit-ruby-position: initial; -webki=
t-tap-highlight-color: initial; -webkit-text-combine: initial; -webkit-text=
-decorations-in-effect: initial; -webkit-text-fill-color: initial; -webkit-=
text-security: initial; -webkit-text-stroke: initial; -webkit-user-drag: in=
itial; -webkit-user-modify: initial; widows: initial; width: initial; will-=
change: initial; word-break: initial; word-spacing: initial; x: initial; y:=
 initial; z-index: initial; }

.sR0SUA::placeholder { color: var(--srRiKA); }

.BHOPhg ._6Yde8g { border: 1px solid var(--oiOG3Q); }

.BHOPhg ._6Yde8g:hover { border-color: var(--oGOcXA); outline: none; }

.BHOPhg ._6Yde8g:focus { border-color: var(--UBd2ow); outline: none; }

.oUJNhQ { color: initial; font: initial; font-palette: initial; font-synthe=
sis: initial; forced-color-adjust: initial; position: initial; text-orienta=
tion: initial; text-rendering: initial; -webkit-font-smoothing: initial; -w=
ebkit-locale: initial; -webkit-text-orientation: initial; -webkit-writing-m=
ode: initial; writing-mode: initial; zoom: initial; accent-color: initial; =
place-content: initial; place-items: initial; place-self: initial; alignmen=
t-baseline: initial; animation-composition: initial; animation: initial; ap=
p-region: initial; appearance: initial; aspect-ratio: initial; backdrop-fil=
ter: initial; backface-visibility: initial; background: initial; background=
-blend-mode: initial; baseline-shift: initial; baseline-source: initial; bl=
ock-size: initial; border-block: initial; border: initial; border-radius: i=
nitial; border-collapse: initial; border-end-end-radius: initial; border-en=
d-start-radius: initial; border-inline: initial; border-start-end-radius: i=
nitial; border-start-start-radius: initial; inset: initial; box-shadow: ini=
tial; box-sizing: initial; break-after: initial; break-before: initial; bre=
ak-inside: initial; buffered-rendering: initial; caption-side: initial; car=
et-color: initial; clear: initial; clip: initial; clip-path: initial; clip-=
rule: initial; color-interpolation: initial; color-interpolation-filters: i=
nitial; color-rendering: initial; color-scheme: initial; columns: initial; =
column-fill: initial; gap: initial; column-rule: initial; column-span: init=
ial; contain: initial; contain-intrinsic-block-size: initial; contain-intri=
nsic-size: initial; contain-intrinsic-inline-size: initial; container: init=
ial; content: initial; content-visibility: initial; counter-increment: init=
ial; counter-reset: initial; counter-set: initial; cursor: initial; cx: ini=
tial; cy: initial; d: initial; display: block; dominant-baseline: initial; =
empty-cells: initial; fill: initial; fill-opacity: initial; fill-rule: init=
ial; filter: initial; flex: initial; flex-flow: initial; float: initial; fl=
ood-color: initial; flood-opacity: initial; grid: initial; grid-area: initi=
al; height: 100%; hyphenate-character: initial; hyphenate-limit-chars: init=
ial; hyphens: initial; image-orientation: initial; image-rendering: initial=
; initial-letter: initial; inline-size: initial; inset-block: initial; inse=
t-inline: initial; isolation: initial; letter-spacing: initial; lighting-co=
lor: initial; line-break: initial; list-style: initial; margin-block: initi=
al; margin: initial; margin-inline: initial; marker: initial; mask: initial=
; mask-type: initial; math-depth: initial; math-shift: initial; math-style:=
 initial; max-block-size: initial; max-height: initial; max-inline-size: in=
itial; max-width: initial; min-block-size: initial; min-height: initial; mi=
n-inline-size: initial; min-width: initial; mix-blend-mode: initial; object=
-fit: initial; object-position: initial; object-view-box: initial; offset: =
initial; opacity: initial; order: initial; orphans: initial; outline: initi=
al; outline-offset: initial; overflow-anchor: initial; overflow-clip-margin=
: initial; overflow-wrap: initial; overflow: initial; overlay: initial; ove=
rscroll-behavior-block: initial; overscroll-behavior-inline: initial; overs=
croll-behavior: initial; padding-block: initial; padding: initial; padding-=
inline: initial; page: initial; page-orientation: initial; paint-order: ini=
tial; perspective: initial; perspective-origin: initial; pointer-events: in=
itial; quotes: initial; r: initial; resize: initial; rotate: initial; ruby-=
position: initial; rx: initial; ry: initial; scale: initial; scroll-behavio=
r: initial; scroll-margin-block: initial; scroll-margin: initial; scroll-ma=
rgin-inline: initial; scroll-padding-block: initial; scroll-padding: initia=
l; scroll-padding-inline: initial; scroll-snap-align: initial; scroll-snap-=
stop: initial; scroll-snap-type: initial; scroll-timeline: initial; scrollb=
ar-color: initial; scrollbar-gutter: initial; scrollbar-width: initial; sha=
pe-image-threshold: initial; shape-margin: initial; shape-outside: initial;=
 shape-rendering: initial; size: initial; speak: initial; stop-color: initi=
al; stop-opacity: initial; stroke: initial; stroke-dasharray: initial; stro=
ke-dashoffset: initial; stroke-linecap: initial; stroke-linejoin: initial; =
stroke-miterlimit: initial; stroke-opacity: initial; stroke-width: initial;=
 tab-size: initial; table-layout: initial; text-align: initial; text-align-=
last: initial; text-anchor: initial; text-combine-upright: initial; text-de=
coration: initial; text-decoration-skip-ink: initial; text-emphasis: initia=
l; text-emphasis-position: initial; text-indent: initial; text-overflow: in=
itial; text-shadow: initial; text-size-adjust: initial; text-transform: ini=
tial; text-underline-offset: initial; text-underline-position: initial; whi=
te-space: initial; timeline-scope: initial; touch-action: initial; transfor=
m: initial; transform-box: initial; transform-origin: initial; transform-st=
yle: initial; transition: initial; translate: initial; user-select: initial=
; vector-effect: initial; vertical-align: initial; view-timeline: initial; =
view-transition-name: initial; visibility: initial; border-spacing: initial=
; -webkit-box-align: initial; -webkit-box-decoration-break: initial; -webki=
t-box-direction: initial; -webkit-box-flex: initial; -webkit-box-ordinal-gr=
oup: initial; -webkit-box-orient: initial; -webkit-box-pack: initial; -webk=
it-box-reflect: initial; -webkit-line-break: initial; -webkit-line-clamp: i=
nitial; -webkit-mask-box-image: initial; -webkit-print-color-adjust: initia=
l; -webkit-rtl-ordering: initial; -webkit-ruby-position: initial; -webkit-t=
ap-highlight-color: initial; -webkit-text-combine: initial; -webkit-text-de=
corations-in-effect: initial; -webkit-text-fill-color: initial; -webkit-tex=
t-security: initial; -webkit-text-stroke: initial; -webkit-user-drag: initi=
al; -webkit-user-modify: initial; widows: initial; width: 100%; will-change=
: initial; word-break: initial; word-spacing: initial; x: initial; y: initi=
al; z-index: initial; }
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://static.canva.com/web/48f7024d7de3a1d6.ltr.css

@charset "utf-8";

.nMvVqA { display: grid; grid-template: "corner-block horizontal-headers" "=
vertical-headers sheet" 1fr / auto 1fr; position: relative; }

.nMvVqA.H2wykw { direction: ltr; }

.nMvVqA.UweldA { direction: rtl; }

.rsTRSA { background: rgb(255, 255, 255); grid-area: corner-block; position=
: sticky; top: 0px; }

.rsTRSA.H2wykw { left: 0px; }

.rsTRSA.UweldA { right: 0px; }

._32sKQw { grid-area: horizontal-headers; top: 0px; }

._32sKQw, .xdIsTQ { background: rgb(255, 255, 255); position: sticky; }

.xdIsTQ { grid-area: vertical-headers; }

.xdIsTQ.H2wykw { left: 0px; }

.xdIsTQ.UweldA { right: 0px; }

.Gdl7fQ, ._0YOFPg { grid-area: sheet; }

.Gdl7fQ { height: 100%; pointer-events: none; position: absolute; top: 0px;=
 width: 100%; }

.Gdl7fQ.H2wykw { left: 0px; }

.Gdl7fQ.UweldA { right: 0px; }

.s5Xvtg { -webkit-tap-highlight-color: transparent; cursor: pointer; displa=
y: flex; }

.agLBbw { cursor: not-allowed; }

.p8DDOg { appearance: none; margin: 0px; opacity: 0; width: 0px; }

.nOL94A { align-self: flex-start; }

.l_S_Ng, .nOL94A { display: inline-flex; }

.l_S_Ng { align-items: center; background: rgb(255, 255, 255); border-radiu=
s: calc((var(--V8rdkw)*4)/18); box-shadow: rgba(28, 39, 48, 0.5) 0px 0px 0p=
x 1px inset; color: var(--6kHV0A); flex: 0 0 0%; justify-content: center; m=
argin: calc(var(--V8rdkw)*.25); transition: box-shadow 0.1s ease-in-out 0s;=
 }

.l_S_Ng::before { content: "=E2=80=8B"; width: 0px; }

.l_S_Ng { height: var(--V8rdkw); }

._8CNofA, .l_S_Ng { width: var(--V8rdkw); }

._8CNofA { color: rgb(255, 255, 255); height: calc(var(--V8rdkw)*.5); }

.l_S_Ng.iGjddQ { box-shadow: inset 0 0 0 calc(var(--V8rdkw)*.5); }

.l_S_Ng.iGjddQ svg { opacity: 1; }

.s5Xvtg._0YWo_Q:not(.agLBbw):hover .p8DDOg:not(:active) + .l_S_Ng:not(.iGjd=
dQ) { box-shadow: rgba(28, 39, 48, 0.5) 0px 0px 0px 1px inset; }

.s5Xvtg._0YWo_Q:not(.agLBbw):hover .p8DDOg:not(:active) + .l_S_Ng:not(.iGjd=
dQ) ._8CNofA { color: rgba(43, 59, 74, 0.3); opacity: 1; }

.s5Xvtg._0YWo_Q:not(.agLBbw):hover .p8DDOg:not(:active) + .l_S_Ng.iGjddQ { =
box-shadow: inset 0 0 0 calc(var(--V8rdkw)*.5) var(--pMrTCg); }

.s5Xvtg:not(.agLBbw) .p8DDOg:active + .l_S_Ng:not(.iGjddQ) { box-shadow: in=
set 0 0 0 calc(var(--V8rdkw)*.125),0 0 0 calc(var(--V8rdkw)*.5) rgba(57,76,=
96,.15); color: rgba(28, 39, 48, 0.5); }

.s5Xvtg:not(.agLBbw) .p8DDOg:active + .l_S_Ng:not(.iGjddQ) > ._8CNofA { col=
or: rgba(43, 59, 74, 0.3); opacity: 1; }

.s5Xvtg:not(.agLBbw) .p8DDOg:active + .l_S_Ng.iGjddQ { box-shadow: inset 0 =
0 0 var(--V8rdkw),0 0 0 calc(var(--V8rdkw)*.25) rgba(57,76,96,.15); color: =
var(--dhlyXQ); }

.s5Xvtg:not(.agLBbw) .p8DDOg:active + .l_S_Ng.iGjddQ > ._8CNofA { color: rg=
b(255, 255, 255); opacity: 1; }

.s5Xvtg:not(.agLBbw) .p8DDOg:focus + .l_S_Ng { outline: -webkit-focus-ring-=
color auto calc(var(--V8rdkw)*1/18); outline-offset: calc(var(--V8rdkw)*2/1=
8); }

.aX8dhQ { background: rgba(57, 76, 96, 0.15); position: absolute; }

.aX8dhQ.VGcLng.ZJ0G6w { left: 0px; }

.aX8dhQ.VGcLng.dOI_jA { right: 0px; }

.aX8dhQ.gl1RPg { top: 0px; }

.xhBZaw { display: flex; }

.xhBZaw.jNbTIg { direction: ltr; }

.xhBZaw.gtA7Dw { direction: rtl; }

.Vt2_4w { display: flex; pointer-events: all; }

.Vt2_4w.jNbTIg { direction: ltr; }

.Vt2_4w.gtA7Dw { direction: rtl; }

.An9VeA { display: flex; flex-direction: column; }

._93roJg { pointer-events: all; }

.Tn3nUw { position: sticky; z-index: 1; }

.HBvlug { background-color: rgba(57, 76, 96, 0.15); position: absolute; }

.ru3tFQ { height: 100%; top: 0px; }

.ru3tFQ.jNbTIg { left: 100%; }

.ru3tFQ.gtA7Dw { right: 100%; }

.koz2Hg { top: 100%; width: 100%; }

._83Rssw { align-items: center; box-sizing: border-box; display: flex; just=
ify-content: center; pointer-events: all; }

._83Rssw._2BX0vg { background-color: var(--4RaSjg); }

._83Rssw.JfW_Cg { background-color: rgb(241, 235, 255); }

._83Rssw.isMgNg { background-color: var(--eGVbng); }

._83Rssw.xwWDeQ { background-color: rgb(224, 239, 255); }

._83Rssw.w0EyUQ { background-color: rgb(168, 204, 255); }

._83Rssw._8p5AIA { background-color: rgb(61, 139, 255); }

.ivlMMQ._2BX0vg { color: var(--VcZbvQ); }

.ivlMMQ.JfW_Cg { color: var(--eGVbng); }

.ivlMMQ.isMgNg { color: var(--d1p99w); }

.ivlMMQ.w0EyUQ, .ivlMMQ.xwWDeQ { color: rgb(24, 70, 170); }

.ivlMMQ._8p5AIA { color: rgb(255, 255, 255); }

.d2uLIA { border-block-end: 0.5px solid rgb(217, 217, 217); border-block-st=
art: 1px solid rgb(217, 217, 217); border-inline: 0.5px solid rgb(217, 217,=
 217); }

.JhBzyw { border-block: 0.5px solid rgb(217, 217, 217); border-inline-end: =
0.5px solid rgb(217, 217, 217); border-inline-start: 1px solid rgb(217, 217=
, 217); position: absolute; top: 0px; transform-origin: center top; }

._93roJg.jNbTIg .JhBzyw { left: 0px; }

._93roJg.gtA7Dw .JhBzyw { right: 0px; }

.bx74uQ { align-items: center; display: flex; justify-content: center; posi=
tion: absolute; }

.ze9QCQ { overflow: hidden; position: relative; }

.N7J3UA { align-items: center; display: flex; justify-content: center; posi=
tion: absolute; }

._52RFdg { cursor: move; }

.N7J3UA.ssE9Tg { transform-origin: left top; }

.N7J3UA.OkifGQ { transform-origin: right top; }

.m8CFdg { background-color: var(--d1p99w); border-block-end: 0.5px solid rg=
b(217, 217, 217); border-block-start: 1px solid rgb(217, 217, 217); border-=
inline-end: 0.5px solid rgb(217, 217, 217); border-inline-start: 1px solid =
rgb(217, 217, 217); color: var(--REcY5g); pointer-events: all; }

.G6wL4w.ssE9Tg { border-top-left-radius: 12px; }

.G6wL4w.OkifGQ { border-top-right-radius: 12px; }

.W_E0wA { background-color: var(--eGVbng); color: var(--d1p99w); }

.nstn2A { pointer-events: none; position: absolute; top: 0px; }

.nstn2A.f8jAGQ { left: 0px; }

.nstn2A.NgnL2Q { right: 0px; }

._9sodyg { overflow: hidden; }

.Gi9pfA, ._9sodyg { height: 100%; width: 100%; }

.Gi9pfA { left: 0px; pointer-events: none; position: absolute; top: 0px; }

.OsKKIQ { display: grid; grid-template: "corner-block horizontal-headers" "=
vertical-headers sheet" 1fr / auto 1fr; position: relative; }

.cbOp6Q { user-select: none; }

._688KWg { background: var(--Tp54Vw); grid-area: corner-block; position: re=
lative; z-index: 2; }

.m0cT1w { grid-area: horizontal-headers; }

.m0cT1w, .zm537g { background: var(--Tp54Vw); position: relative; z-index: =
1; }

.zm537g { grid-area: vertical-headers; }

.VDFv_A { grid-area: sheet; height: calc(100% - 32px); position: relative; =
width: calc(100% - 32px); }

.c6a1eQ { pointer-events: none; position: absolute; top: 0px; }

.c6a1eQ.H_CtIQ { left: 0px; }

.c6a1eQ._8_56PQ { right: 0px; }

._3NnFzw { overflow: visible; }

.JMH1ng { overflow: hidden; }
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/html
Content-ID: <frame-154BF1BCB0E62D3463BF4EE7D17E7156@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"></head><body></body></html>
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/html
Content-ID: <frame-0E501AC1AB642E44849F7ACBA8C928A7@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://bkqcw9fy30kktm90.canva-hosted-embed.com/codelet/AAEAEGJrcWN3OWZ5MzBra3RtOTAAAAAAAZj7EAoT_WADh4MHtM-3yjqY8aFuEJ_wfkhsbo2huceLf3dXhEA/

<!DOCTYPE html><html lang=3D"en"><head><meta http-equiv=3D"Content-Type" co=
ntent=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/=
css" href=3D"cid:css-773a6fd3-0bd7-4389-a7a4-b53bd161c526@mhtml.blink" /><l=
ink rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-ddda8730-b638-4921=
-8241-08a808838122@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css=
" href=3D"cid:css-8f435706-fb0e-4a17-bbd0-106d4275042e@mhtml.blink" /><link=
 rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-0887d447-0d58-415e-83=
bb-a18cfed7afe0@mhtml.blink" />
   =20
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1.0">
    <title>School Weekly Planner</title>
   =20
   =20
</head>
<body class=3D"bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen">
    <div class=3D"container mx-auto px-4 py-8">
        <!-- Header -->
        <div class=3D"text-center mb-8">
            <h1 class=3D"text-4xl font-bold text-gray-800 mb-2">=F0=9F=93=
=9A School Weekly Planner</h1>
            <p class=3D"text-gray-600">Stay organized and never miss an ass=
ignment or class!</p>
            <p class=3D"text-sm text-gray-500 mt-1">=E2=9C=A8 Automatically=
 resets every Sunday at midnight</p>
        </div>

        <!-- Add Event Form -->
        <div class=3D"bg-white rounded-xl shadow-lg p-6 mb-8 max-w-2xl mx-a=
uto">
            <h2 class=3D"text-xl font-semibold text-gray-800 mb-4">Add New =
Event</h2>
            <div class=3D"grid grid-cols-1 md:grid-cols-2 gap-4">
                <input type=3D"text" id=3D"eventTitle" placeholder=3D"Event=
 title (e.g., Math Quiz)" class=3D"px-4 py-3 border border-gray-300 rounded=
-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none"=
>
                <select id=3D"eventDay" class=3D"px-4 py-3 border border-gr=
ay-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent=
 outline-none">
                    <option value=3D"">Select Day</option>
                    <option value=3D"monday">Monday</option>
                    <option value=3D"tuesday">Tuesday</option>
                    <option value=3D"wednesday">Wednesday</option>
                    <option value=3D"thursday">Thursday</option>
                    <option value=3D"friday">Friday</option>
                    <option value=3D"saturday">Saturday</option>
                    <option value=3D"sunday">Sunday</option>
                </select>
                <input type=3D"time" id=3D"eventTime" class=3D"px-4 py-3 bo=
rder border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:bord=
er-transparent outline-none">
                <select id=3D"eventType" class=3D"px-4 py-3 border border-g=
ray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparen=
t outline-none">
                    <option value=3D"Math">=F0=9F=93=96 Class</option>
                    <option value=3D"History">=F0=9F=93=9D Assignment</o=
ption>
                    <option value=3D"English">=F0=9F=93=8A Exam</option>
                    <option value=3D"Science">=F0=9F=8E=AF Project</option>
                    <option value=3D"Other/Elective">=F0=9F=93=9A Study Session</opt=
ion>
                    <option value=3D"other">=F0=9F=93=8C Other</option>
                </select>
            </div>
            <textarea id=3D"eventNotes" placeholder=3D"Additional notes (op=
tional)" class=3D"w-full mt-4 px-4 py-3 border border-gray-300 rounded-lg f=
ocus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none resiz=
e-none" rows=3D"2"></textarea>
            <button class=3D"w-full mt-4 bg-blue-600 hover:bg-blue-700 text=
-white font-medium py-3 px-6 rounded-lg transition-colors duration-200">
                Add Event
            </button>
        </div>

        <!-- Weekly Calendar -->
        <div class=3D"grid grid-cols-1 lg:grid-cols-7 gap-4">
            <div class=3D"bg-white rounded-xl shadow-lg p-4" data-day=3D"mo=
nday">
                <h3 class=3D"font-semibold text-lg text-gray-800 mb-3 text-=
center border-b pb-2">Monday</h3>
                <div class=3D"events-container min-h-[200px]" id=3D"monday-=
events"><div class=3D"text-gray-400 text-sm text-center py-8">No events sch=
eduled</div></div>
            </div>
            <div class=3D"bg-white rounded-xl shadow-lg p-4" data-day=3D"tu=
esday">
                <h3 class=3D"font-semibold text-lg text-gray-800 mb-3 text-=
center border-b pb-2">Tuesday</h3>
                <div class=3D"events-container min-h-[200px]" id=3D"tuesday=
-events"><div class=3D"text-gray-400 text-sm text-center py-8">No events sc=
heduled</div></div>
            </div>
            <div class=3D"bg-white rounded-xl shadow-lg p-4" data-day=3D"we=
dnesday">
                <h3 class=3D"font-semibold text-lg text-gray-800 mb-3 text-=
center border-b pb-2">Wednesday</h3>
                <div class=3D"events-container min-h-[200px]" id=3D"wednesd=
ay-events"><div class=3D"text-gray-400 text-sm text-center py-8">No events =
scheduled</div></div>
            </div>
            <div class=3D"bg-white rounded-xl shadow-lg p-4" data-day=3D"th=
ursday">
                <h3 class=3D"font-semibold text-lg text-gray-800 mb-3 text-=
center border-b pb-2">Thursday</h3>
                <div class=3D"events-container min-h-[200px]" id=3D"thursda=
y-events"><div class=3D"event-item bg-gray-100 border-gray-300 text-gray-80=
0 border-l-4 p-3 mb-3 rounded-r-lg cursor-pointer">
                            <div class=3D"flex justify-between items-start"=
>
                                <div class=3D"flex-1">
                                    <div class=3D"font-medium text-sm">=F0=
=9F=93=8C gym</div>
                                    <div class=3D"text-xs opacity-75 mt-1">=
=E2=8F=B0 5:15 PM</div>
                                   =20
                                </div>
                                <button class=3D"text-red-500 hover:text-re=
d-700 ml-2 text-sm font-bold">
                                    =E2=9C=95
                                </button>
                            </div>
                        </div></div>
            </div>
            <div class=3D"bg-white rounded-xl shadow-lg p-4" data-day=3D"fr=
iday">
                <h3 class=3D"font-semibold text-lg text-gray-800 mb-3 text-=
center border-b pb-2">Friday</h3>
                <div class=3D"events-container min-h-[200px]" id=3D"friday-=
events"><div class=3D"text-gray-400 text-sm text-center py-8">No events sch=
eduled</div></div>
            </div>
            <div class=3D"bg-white rounded-xl shadow-lg p-4" data-day=3D"sa=
turday">
                <h3 class=3D"font-semibold text-lg text-gray-800 mb-3 text-=
center border-b pb-2">Saturday</h3>
                <div class=3D"events-container min-h-[200px]" id=3D"saturda=
y-events"><div class=3D"text-gray-400 text-sm text-center py-8">No events s=
cheduled</div></div>
            </div>
            <div class=3D"bg-white rounded-xl shadow-lg p-4" data-day=3D"su=
nday">
                <h3 class=3D"font-semibold text-lg text-gray-800 mb-3 text-=
center border-b pb-2">Sunday</h3>
                <div class=3D"events-container min-h-[200px]" id=3D"sunday-=
events"><div class=3D"text-gray-400 text-sm text-center py-8">No events sch=
eduled</div></div>
            </div>
        </div>

        <!-- Clear All Button -->
        <div class=3D"text-center mt-8">
            <button class=3D"bg-red-500 hover:bg-red-600 text-white font-me=
dium py-2 px-6 rounded-lg transition-colors duration-200">
                Clear All Events
            </button>
        </div>
    </div>

   =20
<iframe height=3D"1" width=3D"1" style=3D"position: absolute; top: 0px; lef=
t: 0px; border: none; visibility: hidden;"></iframe>

</body></html>
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-773a6fd3-0bd7-4389-a7a4-b53bd161c526@mhtml.blink

@charset "utf-8";

@import url("https://fonts.googleapis.com/css2?family=3DInter:wght@300;400;=
500;600;700&display=3Dswap");

body { font-family: Inter, sans-serif; }

.event-item { transition: all 0.2s ease 0s; }

.event-item:hover { transform: translateY(-1px); box-shadow: rgba(0, 0, 0, =
0.15) 0px 4px 12px; }
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap

@charset "utf-8";

@font-face { font-family: Inter; font-style: normal; font-weight: 300; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa2JL7SUc.woff2") format("woff2"); unicode-range: U+460-=
52F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: Inter; font-style: normal; font-weight: 300; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa0ZL7SUc.woff2") format("woff2"); unicode-range: U+301,=
 U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: Inter; font-style: normal; font-weight: 300; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa2ZL7SUc.woff2") format("woff2"); unicode-range: U+1F00=
-1FFF; }

@font-face { font-family: Inter; font-style: normal; font-weight: 300; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa1pL7SUc.woff2") format("woff2"); unicode-range: U+370-=
377, U+37A-37F, U+384-38A, U+38C, U+38E-3A1, U+3A3-3FF; }

@font-face { font-family: Inter; font-style: normal; font-weight: 300; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa2pL7SUc.woff2") format("woff2"); unicode-range: U+102-=
103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+300-301, U+30=
3-304, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: Inter; font-style: normal; font-weight: 300; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa25L7SUc.woff2") format("woff2"); unicode-range: U+100-=
2BA, U+2BD-2C5, U+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D0=
0-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113,=
 U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Inter; font-style: normal; font-weight: 300; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa1ZL7.woff2") format("woff2"); unicode-range: U+0-FF, U=
+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+200=
0-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Inter; font-style: normal; font-weight: 400; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa2JL7SUc.woff2") format("woff2"); unicode-range: U+460-=
52F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: Inter; font-style: normal; font-weight: 400; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa0ZL7SUc.woff2") format("woff2"); unicode-range: U+301,=
 U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: Inter; font-style: normal; font-weight: 400; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa2ZL7SUc.woff2") format("woff2"); unicode-range: U+1F00=
-1FFF; }

@font-face { font-family: Inter; font-style: normal; font-weight: 400; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa1pL7SUc.woff2") format("woff2"); unicode-range: U+370-=
377, U+37A-37F, U+384-38A, U+38C, U+38E-3A1, U+3A3-3FF; }

@font-face { font-family: Inter; font-style: normal; font-weight: 400; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa2pL7SUc.woff2") format("woff2"); unicode-range: U+102-=
103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+300-301, U+30=
3-304, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: Inter; font-style: normal; font-weight: 400; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa25L7SUc.woff2") format("woff2"); unicode-range: U+100-=
2BA, U+2BD-2C5, U+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D0=
0-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113,=
 U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Inter; font-style: normal; font-weight: 400; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa1ZL7.woff2") format("woff2"); unicode-range: U+0-FF, U=
+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+200=
0-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Inter; font-style: normal; font-weight: 500; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa2JL7SUc.woff2") format("woff2"); unicode-range: U+460-=
52F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: Inter; font-style: normal; font-weight: 500; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa0ZL7SUc.woff2") format("woff2"); unicode-range: U+301,=
 U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: Inter; font-style: normal; font-weight: 500; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa2ZL7SUc.woff2") format("woff2"); unicode-range: U+1F00=
-1FFF; }

@font-face { font-family: Inter; font-style: normal; font-weight: 500; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa1pL7SUc.woff2") format("woff2"); unicode-range: U+370-=
377, U+37A-37F, U+384-38A, U+38C, U+38E-3A1, U+3A3-3FF; }

@font-face { font-family: Inter; font-style: normal; font-weight: 500; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa2pL7SUc.woff2") format("woff2"); unicode-range: U+102-=
103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+300-301, U+30=
3-304, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: Inter; font-style: normal; font-weight: 500; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa25L7SUc.woff2") format("woff2"); unicode-range: U+100-=
2BA, U+2BD-2C5, U+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D0=
0-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113,=
 U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Inter; font-style: normal; font-weight: 500; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa1ZL7.woff2") format("woff2"); unicode-range: U+0-FF, U=
+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+200=
0-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Inter; font-style: normal; font-weight: 600; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa2JL7SUc.woff2") format("woff2"); unicode-range: U+460-=
52F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: Inter; font-style: normal; font-weight: 600; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa0ZL7SUc.woff2") format("woff2"); unicode-range: U+301,=
 U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: Inter; font-style: normal; font-weight: 600; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa2ZL7SUc.woff2") format("woff2"); unicode-range: U+1F00=
-1FFF; }

@font-face { font-family: Inter; font-style: normal; font-weight: 600; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa1pL7SUc.woff2") format("woff2"); unicode-range: U+370-=
377, U+37A-37F, U+384-38A, U+38C, U+38E-3A1, U+3A3-3FF; }

@font-face { font-family: Inter; font-style: normal; font-weight: 600; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa2pL7SUc.woff2") format("woff2"); unicode-range: U+102-=
103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+300-301, U+30=
3-304, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: Inter; font-style: normal; font-weight: 600; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa25L7SUc.woff2") format("woff2"); unicode-range: U+100-=
2BA, U+2BD-2C5, U+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D0=
0-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113,=
 U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Inter; font-style: normal; font-weight: 600; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa1ZL7.woff2") format("woff2"); unicode-range: U+0-FF, U=
+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+200=
0-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }

@font-face { font-family: Inter; font-style: normal; font-weight: 700; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa2JL7SUc.woff2") format("woff2"); unicode-range: U+460-=
52F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F; }

@font-face { font-family: Inter; font-style: normal; font-weight: 700; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa0ZL7SUc.woff2") format("woff2"); unicode-range: U+301,=
 U+400-45F, U+490-491, U+4B0-4B1, U+2116; }

@font-face { font-family: Inter; font-style: normal; font-weight: 700; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa2ZL7SUc.woff2") format("woff2"); unicode-range: U+1F00=
-1FFF; }

@font-face { font-family: Inter; font-style: normal; font-weight: 700; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa1pL7SUc.woff2") format("woff2"); unicode-range: U+370-=
377, U+37A-37F, U+384-38A, U+38C, U+38E-3A1, U+3A3-3FF; }

@font-face { font-family: Inter; font-style: normal; font-weight: 700; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa2pL7SUc.woff2") format("woff2"); unicode-range: U+102-=
103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+300-301, U+30=
3-304, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB; }

@font-face { font-family: Inter; font-style: normal; font-weight: 700; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa25L7SUc.woff2") format("woff2"); unicode-range: U+100-=
2BA, U+2BD-2C5, U+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D0=
0-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113,=
 U+2C60-2C7F, U+A720-A7FF; }

@font-face { font-family: Inter; font-style: normal; font-weight: 700; font=
-display: swap; src: url("https://fonts.gstatic.com/s/inter/v19/UcC73FwrK3i=
LTeHuS_nVMrMxCp50SjIa1ZL7.woff2") format("woff2"); unicode-range: U+0-FF, U=
+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+200=
0-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD; }
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-ddda8730-b638-4921-8241-08a808838122@mhtml.blink

@charset "utf-8";

*, ::before, ::after { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; =
--tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; -=
-tw-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: =
; --tw-pinch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-gradient-=
from-position: ; --tw-gradient-via-position: ; --tw-gradient-to-position: ;=
 --tw-ordinal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-s=
pacing: ; --tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-widt=
h: 0px; --tw-ring-offset-color: #fff; --tw-ring-color: rgb(59 130 246 / 0.5=
); --tw-ring-offset-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; --tw-sh=
adow: 0 0 #0000; --tw-shadow-colored: 0 0 #0000; --tw-blur: ; --tw-brightne=
ss: ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; =
--tw-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --=
tw-backdrop-brightness: ; --tw-backdrop-contrast: ; --tw-backdrop-grayscale=
: ; --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: ; --tw-backdrop-opaci=
ty: ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ; --tw-contain-size: ;=
 --tw-contain-layout: ; --tw-contain-paint: ; --tw-contain-style: ; }

::backdrop { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; --tw-trans=
late-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --tw-skew-y=
: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: ; --tw-pin=
ch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-gradient-from-posit=
ion: ; --tw-gradient-via-position: ; --tw-gradient-to-position: ; --tw-ordi=
nal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; =
--tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --=
tw-ring-offset-color: #fff; --tw-ring-color: rgb(59 130 246 / 0.5); --tw-ri=
ng-offset-shadow: 0 0 #0000; --tw-ring-shadow: 0 0 #0000; --tw-shadow: 0 0 =
#0000; --tw-shadow-colored: 0 0 #0000; --tw-blur: ; --tw-brightness: ; --tw=
-contrast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-satur=
ate: ; --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdro=
p-brightness: ; --tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-b=
ackdrop-hue-rotate: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw=
-backdrop-saturate: ; --tw-backdrop-sepia: ; --tw-contain-size: ; --tw-cont=
ain-layout: ; --tw-contain-paint: ; --tw-contain-style: ; }

*, ::after, ::before { box-sizing: border-box; border-width: 0px; border-st=
yle: solid; border-color: rgb(229, 231, 235); }

::after, ::before { --tw-content: ''; }

:host, html { line-height: 1.5; text-size-adjust: 100%; tab-size: 4; font-f=
amily: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI=
 Emoji", "Segoe UI Symbol", "Noto Color Emoji"; font-feature-settings: norm=
al; font-variation-settings: normal; -webkit-tap-highlight-color: transpare=
nt; }

body { margin: 0px; line-height: inherit; }

hr { height: 0px; color: inherit; border-top-width: 1px; }

abbr:where([title]) { text-decoration: underline dotted; }

h1, h2, h3, h4, h5, h6 { font-size: inherit; font-weight: inherit; }

a { color: inherit; text-decoration: inherit; }

b, strong { font-weight: bolder; }

code, kbd, pre, samp { font-family: ui-monospace, SFMono-Regular, Menlo, Mo=
naco, Consolas, "Liberation Mono", "Courier New", monospace; font-feature-s=
ettings: normal; font-variation-settings: normal; font-size: 1em; }

small { font-size: 80%; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

table { text-indent: 0px; border-color: inherit; border-collapse: collapse;=
 }

button, input, optgroup, select, textarea { font-family: inherit; font-feat=
ure-settings: inherit; font-variation-settings: inherit; font-size: 100%; f=
ont-weight: inherit; line-height: inherit; letter-spacing: inherit; color: =
inherit; margin: 0px; padding: 0px; }

button, select { text-transform: none; }

button, input:where([type=3D"button"]), input:where([type=3D"reset"]), inpu=
t:where([type=3D"submit"]) { appearance: button; background-color: transpar=
ent; background-image: none; }

progress { vertical-align: baseline; }

::-webkit-inner-spin-button, ::-webkit-outer-spin-button { height: auto; }

[type=3D"search"] { appearance: textfield; outline-offset: -2px; }

::-webkit-search-decoration { appearance: none; }

::-webkit-file-upload-button { appearance: button; font: inherit; }

summary { display: list-item; }

blockquote, dd, dl, figure, h1, h2, h3, h4, h5, h6, hr, p, pre { margin: 0p=
x; }

fieldset { margin: 0px; padding: 0px; }

legend { padding: 0px; }

menu, ol, ul { list-style: none; margin: 0px; padding: 0px; }

dialog { padding: 0px; }

textarea { resize: vertical; }

input::placeholder, textarea::placeholder { opacity: 1; color: rgb(156, 163=
, 175); }

[role=3D"button"], button { cursor: pointer; }

:disabled { cursor: default; }

audio, canvas, embed, iframe, img, object, svg, video { display: block; ver=
tical-align: middle; }

img, video { max-width: 100%; height: auto; }

[hidden]:where(:not([hidden=3D"until-found"])) { display: none; }

.container { width: 100%; }

@media (min-width: 640px) {
  .container { max-width: 640px; }
}

@media (min-width: 768px) {
  .container { max-width: 768px; }
}

@media (min-width: 1024px) {
  .container { max-width: 1024px; }
}

@media (min-width: 1280px) {
  .container { max-width: 1280px; }
}

@media (min-width: 1536px) {
  .container { max-width: 1536px; }
}

.mx-auto { margin-left: auto; margin-right: auto; }

.mb-2 { margin-bottom: 0.5rem; }

.mb-3 { margin-bottom: 0.75rem; }

.mb-4 { margin-bottom: 1rem; }

.mb-8 { margin-bottom: 2rem; }

.mt-1 { margin-top: 0.25rem; }

.mt-4 { margin-top: 1rem; }

.mt-8 { margin-top: 2rem; }

.ml-2 { margin-left: 0.5rem; }

.flex { display: flex; }

.grid { display: grid; }

.min-h-screen { min-height: 100vh; }

.min-h-\[200px\] { min-height: 200px; }

.w-full { width: 100%; }

.max-w-2xl { max-width: 42rem; }

.flex-1 { flex: 1 1 0%; }

.cursor-pointer { cursor: pointer; }

.resize-none { resize: none; }

.grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }

.items-start { align-items: flex-start; }

.justify-between { justify-content: space-between; }

.gap-4 { gap: 1rem; }

.rounded-lg { border-radius: 0.5rem; }

.rounded-xl { border-radius: 0.75rem; }

.rounded-r-lg { border-top-right-radius: 0.5rem; border-bottom-right-radius=
: 0.5rem; }

.border { border-width: 1px; }

.border-b { border-bottom-width: 1px; }

.border-l-4 { border-left-width: 4px; }

.border-gray-300 { --tw-border-opacity: 1; border-color: rgb(209 213 219 / =
var(--tw-border-opacity, 1)); }

.bg-blue-600 { --tw-bg-opacity: 1; background-color: rgb(37 99 235 / var(--=
tw-bg-opacity, 1)); }

.bg-red-500 { --tw-bg-opacity: 1; background-color: rgb(239 68 68 / var(--t=
w-bg-opacity, 1)); }

.bg-white { --tw-bg-opacity: 1; background-color: rgb(255 255 255 / var(--t=
w-bg-opacity, 1)); }

.bg-gray-100 { --tw-bg-opacity: 1; background-color: rgb(243 244 246 / var(=
--tw-bg-opacity, 1)); }

.bg-gradient-to-br { background-image: linear-gradient(to bottom right, var=
(--tw-gradient-stops)); }

.from-blue-50 { --tw-gradient-from: #eff6ff var(--tw-gradient-from-position=
); --tw-gradient-to: rgb(239 246 255 / 0) var(--tw-gradient-to-position); -=
-tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to); }

.to-indigo-100 { --tw-gradient-to: #e0e7ff var(--tw-gradient-to-position); =
}

.p-4 { padding: 1rem; }

.p-6 { padding: 1.5rem; }

.p-3 { padding: 0.75rem; }

.px-4 { padding-left: 1rem; padding-right: 1rem; }

.px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }

.py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; }

.py-3 { padding-top: 0.75rem; padding-bottom: 0.75rem; }

.py-8 { padding-top: 2rem; padding-bottom: 2rem; }

.pb-2 { padding-bottom: 0.5rem; }

.text-center { text-align: center; }

.text-4xl { font-size: 2.25rem; line-height: 2.5rem; }

.text-lg { font-size: 1.125rem; line-height: 1.75rem; }

.text-sm { font-size: 0.875rem; line-height: 1.25rem; }

.text-xl { font-size: 1.25rem; line-height: 1.75rem; }

.text-xs { font-size: 0.75rem; line-height: 1rem; }

.font-bold { font-weight: 700; }

.font-medium { font-weight: 500; }

.font-semibold { font-weight: 600; }

.text-gray-500 { --tw-text-opacity: 1; color: rgb(107 114 128 / var(--tw-te=
xt-opacity, 1)); }

.text-gray-600 { --tw-text-opacity: 1; color: rgb(75 85 99 / var(--tw-text-=
opacity, 1)); }

.text-gray-800 { --tw-text-opacity: 1; color: rgb(31 41 55 / var(--tw-text-=
opacity, 1)); }

.text-white { --tw-text-opacity: 1; color: rgb(255 255 255 / var(--tw-text-=
opacity, 1)); }

.text-gray-400 { --tw-text-opacity: 1; color: rgb(156 163 175 / var(--tw-te=
xt-opacity, 1)); }

.text-red-500 { --tw-text-opacity: 1; color: rgb(239 68 68 / var(--tw-text-=
opacity, 1)); }

.opacity-75 { opacity: 0.75; }

.shadow-lg { --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px=
 rgb(0 0 0 / 0.1); --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-co=
lor), 0 4px 6px -4px var(--tw-shadow-color); box-shadow: var(--tw-ring-offs=
et-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow); =
}

.outline-none { outline: transparent solid 2px; outline-offset: 2px; }

.transition-colors { transition-property: color, background-color, border-c=
olor, text-decoration-color, fill, stroke, -webkit-text-decoration-color; t=
ransition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duratio=
n: 150ms; }

.duration-200 { transition-duration: 200ms; }

.hover\:bg-blue-700:hover { --tw-bg-opacity: 1; background-color: rgb(29 78=
 216 / var(--tw-bg-opacity, 1)); }

.hover\:bg-red-600:hover { --tw-bg-opacity: 1; background-color: rgb(220 38=
 38 / var(--tw-bg-opacity, 1)); }

.hover\:text-red-700:hover { --tw-text-opacity: 1; color: rgb(185 28 28 / v=
ar(--tw-text-opacity, 1)); }

.focus\:border-transparent:focus { border-color: transparent; }

.focus\:ring-2:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 =
var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: =
var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw=
-ring-color); box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shado=
w), var(--tw-shadow, 0 0 #0000); }

.focus\:ring-blue-500:focus { --tw-ring-opacity: 1; --tw-ring-color: rgb(59=
 130 246 / var(--tw-ring-opacity, 1)); }

@media (min-width: 768px) {
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
}

@media (min-width: 1024px) {
  .lg\:grid-cols-7 { grid-template-columns: repeat(7, minmax(0px, 1fr)); }
}
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-8f435706-fb0e-4a17-bbd0-106d4275042e@mhtml.blink

@charset "utf-8";

:root { --transparent: rgba(255, 255, 255, 0); --white: hsl(0, 0%, 100%); -=
-th-white: hsl(0, 0%, 100%); --black: hsl(0, 0%, 0%); --th-black: hsl(0, 0%=
, 0%); --lightGrey: hsl(0, 0%, 94%); --th-grey-white: hsl(210, 10%, 97%); -=
-th-grey-light: hsl(210, 10%, 94.8%); --th-grey-medium: hsl(212, 10%, 94%);=
 --th-grey: hsl(216, 22%, 91%); --th-grey-dark: hsl(221, 20%, 78%); --th-sl=
ate: hsl(221, 20%, 33%); --th-slate-light: hsl(222, 20%, 45%); --th-slate-d=
ark: hsl(222, 22%, 18%); --th-slate-alt: #333F57; --th-slate-hover: #3E4A62=
; --th-slate-dark-hover800: hsl(220, 22%, 24%); --th-slate-dark-active800: =
hsl(219, 24%, 26%); --th-slate-dark-hover600: hsl(222, 22%, 21%); --th-slat=
e-dark-active600: hsl(221, 24%, 23%); --th-cool-grey-600: hsl(203, 16%, 44%=
); --th-cool-grey-700: hsl(204, 18%, 30%); --th-cool-grey-750: hsl(203, 18%=
, 32%); --th-cool-grey-800: hsl(209, 20%, 25%); --th-cool-grey-850: hsl(209=
, 20%, 21%); --th-cool-grey-900: hsl(210, 24%, 16%); --fontColorDark: var( =
--th-slate-dark); --fontColorWhite: hsl(0, 0%, 100%); --list-item-hover: hs=
l(225, 20%, 96%); --list-item-light-hover: hsl(210, 20%, 98%); --list-item-=
hover-dark: hsla(222, 22%, 18%, 0.50); --list-item-light-hover-dark: hsla(2=
22, 20%, 33%, 0.50); --greyTransparent: hsla(222, 22%, 18%, 0.12); --whiteT=
ransparent: hsla(0, 0%, 100%, 0.12); --defaultColor: hsl(220, 20%, 91%); --=
defaultColorHover: hsl(220, 19%, 78%); --defaultColorActive: hsl(220, 19%, =
68%); --defaultColorSelected: hsl(221, 20%, 75%); --buttonBorderColor: 2px =
solid hsl(220, 20%, 91%); --buttonBorderColorHover: 2px solid hsl(220, 19%,=
 78%); --buttonBorderColorActive: 2px solid hsl(220, 19%, 68%); --buttonBor=
derColorSelected: 2px solid hsl(221, 20%, 75%); --iconFillColor: var( --th-=
slate-dark ); --primaryColor: hsl(211, 100%, 45%); --primaryColorHover: hsl=
(211, 100%, 35%); --primaryColorActive: hsl(211, 100%, 25%); --primaryButto=
nBorder: 2px solid hsl(211, 100%, 45%); --primaryButtonBorderHover: 2px sol=
id hsl(211, 100%, 35%); --primaryButtonBorderActive: 2px solid hsl(211, 100=
%, 25%); --secondaryColor: var(--th-slate); --secondaryColorHover: hsl(221,=
 20%, 23%); --secondaryColorActive: hsl(221, 20%, 13%); --secondaryButtonBo=
rderColor: 2px solid var(--th-slate); --secondaryButtonBorderColorHover: 2p=
x solid hsl(221, 20%, 23%); --secondaryButtonBorderColorActive: 2px solid h=
sl(221, 20%, 13%); --disabledColor: hsl(0, 0%, 50%); --disabledBackgroundCo=
lor: hsl(0, 0%, 95%); --brandColorGreen: hsl(76, 60%, 52%); --brandColorGre=
enActive: hsl(76, 62%, 40%); --primaryColorGreen: hsl(79, 100%, 24%); --pri=
maryColorGreenHover: hsl(79, 100%, 14%); --primaryColorGreenActive: hsl(79,=
 100%, 4%); --buttonBorderGreen: 2px solid hsl(79, 100%, 24%); --buttonBord=
erGreenHover: 2px solid hsl(79, 100%, 14%); --buttonBorderGreenActive: 2px =
solid hsl(79, 100%, 4%); --brandColorPink: hsl(344, 98%, 59%); --primaryCol=
orPink: #e12362; --primaryColorPinkHover: hsl(340, 76%, 41%); --primaryColo=
rPinkActive: hsl(340, 76%, 31%); --buttonBorderPink: 2px solid hsl(340, 76%=
, 51%); --buttonBorderPinkHover: 2px solid hsl(340, 76%, 41%); --buttonBord=
erPinkActive: 2px solid hsl(340, 76%, 31%); --brandColorTeal: hsl(180, 85%,=
 34%); --primaryColorTeal: hsl(184, 50%, 35%); --primaryColorTealHover: hsl=
(184, 50%, 25%); --primaryColorTealActive: hsl(184, 50%, 15%); --buttonBord=
erTeal: 2px solid hsl(184, 50%, 35%); --buttonBorderTealHover: 2px solid hs=
l(184, 50%, 25%); --buttonBorderTealActive: 2px solid hsl(184, 50%, 15%); -=
-brandColorPurple: hsl(264, 100%, 68%); --primaryColorPurple: hsl(264, 83%,=
 62%); --primaryColorPurpleHover: hsl(264, 83%, 52%); --primaryColorPurpleA=
ctive: hsl(264, 83%, 42%); --buttonBorderPurple: 2px solid hsl(264, 83%, 62=
%); --buttonBorderPurpleHover: 2px solid hsl(264, 83%, 52%); --buttonBorder=
PurpleActive: 2px solid hsl(264, 83%, 42%); --brandColorOrange: hsl(33, 94%=
, 48%); --primaryColorOrange: hsl(15, 79%, 45%); --primaryColorOrangeHover:=
 hsl(15, 80%, 35%); --primaryColorOrangeActive: hsl(15, 80%, 25%); --button=
BorderOrange: 2px solid hsl(15, 79%, 45%); --buttonBorderOrangeHover: 2px s=
olid hsl(15, 80%, 35%); --buttonBorderOrangeActive: 2px solid hsl(15, 80%, =
25%); --brandColorBlue: hsl(197, 100%, 50%); --brandColorBlueActive: hsl(19=
7, 100%, 39%); --brandColorBlueWCAG: hsl(197, 100%, 42%); --primaryColorBlu=
e: hsl(201, 100%, 37%); --primaryColorBlueHover: hsl(201, 100%, 27%); --pri=
maryColorBlueActive: hsl(201, 100%, 17%); --buttonBorderBlue: 2px solid hsl=
(201, 100%, 37%); --buttonBorderBlueHover: 2px solid hsl(201, 100%, 27%); -=
-buttonBorderBlueActive: 2px solid hsl(201, 100%, 17%); --BrandcolorYellow:=
 hsl(41, 90%, 61%); --primaryColorReachDeck: hsl(209, 100%, 39%); --primary=
ColorReachDeckHover: hsl(209, 100%, 29%); --primaryColorReachDeckActive: hs=
l(209, 100%, 19%); --buttonBorderReachDeck: 2px solid hsl(209, 100%, 39%); =
--buttonBorderReachDeckHover: 2px solid hsl(209, 100%, 29%); --buttonBorder=
ReachDeckActive: 2px solid hsl(209, 100%, 19%); --reachDeckEditorColor: hsl=
(112, 100%, 26%); --launchpadButtonLight: hsl(210, 10%, 96%); --launchpadBu=
ttonLightHover: hsl(220, 8%, 92%); --launchpadButtonLightActive: hsl(0, 0%,=
 90%); --ContrastPinkOrbitNoteHover: hsl(343, 81%, 48%); --ContrastPinkOrbi=
tNoteActive: hsl(345, 96%, 42%); --ContrastButtonBorderPink: hsl(345, 96%, =
42%); --primaryColorClaroNavy: hsl(207, 74%, 27%); --primaryColorClaroNavyH=
over: hsl(206, 83%, 21%); --primaryColorClaroNavyActive: hsl(206, 89%, 17%)=
; --buttonBorderClaro: 2px solid hsl(207, 74%, 27%); --buttonBorderClaroHov=
er: 2px solid hsl(206, 83%, 21%); --buttonBorderClaroActive: 2px solid hsl(=
206, 89%, 17%); --primaryColorClaroBlue: hsl(201, 100%, 37%); --primaryColo=
rClaroBlueHover: hsl(201, 100%, 31%); --primaryColorClaroBlueActive: hsl(20=
1, 100%, 27%); --claroDark: hsl(218, 54%, 20%); --claroGrey: hsl(217, 31%, =
68%); --claroBlue: hsl(191, 88%, 40%); --claroBlueAlt: hsl(188, 78%, 50%); =
--claroGreen: hsl(75, 63%, 51%); --altColor: var(--claroGreen); --altColorH=
over: hsl(75, 70%, 40%); --altColorActive: hsl(75, 77%, 33%); --altButtonBo=
rderColor: 2px solid var(--claroGreen); --altButtonBorderColorHover: 2px so=
lid hsl(75, 70%, 40%); --altButtonBorderColorActive: 2px solid hsl(75, 77%,=
 33%); --brandColorLingdys: hsl(0, 82%, 49%); --primaryColorLingdys: hsl(21=
7, 34%, 38%); --primaryColorLingdysHover: hsl(217, 37%, 24%); --primaryColo=
rLingdysActive: hsl(217, 39%, 18%); --buttonBorderLingdys: 2px solid hsl(21=
7, 34%, 38%); --buttonBorderLingdysHover: 2px solid hsl(217, 37%, 24%); --b=
uttonBorderLingdysActive: 2px solid hsl(217, 39%, 18%); --brandColorAppWrit=
er: #F70790; --primaryColorAppWriter: #D8087F; --primaryColorAppWriterHover=
: #B40669; --primaryColorAppWriterActive: #9F055C; --buttonBorderAppwriter:=
 2px solid #D8087F; --buttonBorderAppwriterHover: 2px solid #B40669; --butt=
onBorderAppWriterActive: 2px solid #9F055C; --iconToggleFillOrbitNote: hsl(=
196, 99%, 50%); --textColor: var( --th-slate-dark ); --textColorLight: var(=
 --th-white ); --border: 1px solid var( --th-grey ); --borderDark: 1px soli=
d var( --th-grey-dark ); --infoColor: hsl(194, 77%, 24%); --successColor: h=
sla(134, 71%, 43%, 0.584); --errorColor: hsl(0, 71%, 51%); --warningColor: =
hsl(45, 97%, 51%); --infoBackgroundColor: hsl(180, 100%, 99%); --successBac=
kgroundColor: hsl(78, 100%, 98%); --errorBackgroundColor: hsl(0, 100%, 98%)=
; --warningBackgroundColor: hsl(35, 100%, 98%); --notificationDarkModeBackg=
round: hsl(218, 22%, 37%); --infoBorderColor: hsl(191, 44%, 82%); --success=
BorderColor: hsl(100, 28%, 69%); --errorBorderColor: hsl(0, 37%, 73%); --wa=
rningBorderColor: hsl(41, 30%, 71%); --notificationDarkModeBorder: hsl(217,=
 19%, 41%); --infoTitleColor: hsl(194, 77%, 24%); --successTitleColor: hsl(=
121, 48%, 23%); --errorTitleColor: hsl(1, 47%, 40%); --warningTitleColor: h=
sl(37, 92%, 25%); --infoWarningColor: hsl(194, 77%, 24%); --successWarningC=
olor: hsla(121, 48%, 23%, 0.8); --errorWarningColor: hsla(1, 47%, 40%, 0.8)=
; --warningWarningColor: hsla(37, 92%, 25%, 0.8); --buttonBorderRadius: 30p=
x; --buttonRoundness: 30px; --buttonNoBackgroundTextColor: var( --th-slate-=
dark); --buttonNoBackgroundIconColor: var( --th-slate-dark); --buttonNoBack=
groundColor: transparent; --buttonNoBackgroundColorHover: var(--icon-button=
-background-hover-color); --buttonNoBackgroundColorActive: var(--icon-butto=
n-background-active-color); --buttonNoBackgroundBorder: 2px solid transpare=
nt; --buttonNoBackgroundBorderHover: 2px solid transparent; --buttonNoBackg=
roundBorderActive: 2px solid transparent; --activeDotColor: inherit; --them=
eColorDefault: var(--defaultColor); --themeColorGroundworks: var(--primaryC=
olor); --themeColorReadWrite: var(--primaryColorPurple); --themeColorEquati=
o: var(--primaryColorBlue); --themeColorBrowsealoud: var(--primaryColorOran=
ge); --themeColorWriq: var(--primaryColorTeal); --themeColorFluencyTutor: v=
ar(--primaryColorGreen); --themeColorSnapVerter: var(--primaryColorGreen); =
--themeColorSpeechStream: var(--primaryColorPink); --themeColorTexthelp: va=
r(--primaryColorTeal); --themeColorReachDeck: var(--primaryColorReachDeck);=
 --themeColorPdfReader: var(--primaryColorBlue); --uniloginBackgroundColor:=
 #F7F7F7; --uniloginWindowBackgroundColor: var(--primaryColorBlue); --line-=
height-base: 1.5; --zindex-modal: 1050; --modal-dialog-margin: 2em; --modal=
-content-border-radius: 1px; --modal-inner-padding: 1.5em; --modal-title-pa=
dding: 1.5em; --modal-title-line-height: var(--line-height-base); --modal-c=
ontent-bg: #fff; --modal-content-border-color: rgba(0, 0, 0, .2); --modal-c=
ontent-fallback-border-color: #999; --modal-backdrop-bg: #000; --modal-back=
drop-opacity: .5; --modal-header-border-color: #e5e5e5; --modal-footer-bord=
er-color: var(--modal-header-border-color); --modal-header-background-color=
: #f5f5f5; --select-border: 1px solid #DADADA; --select-background: hsl(0, =
0%, 100%); --select-background-color: #efefef; --select-background-color-ho=
ver: hsl(0, 0%, 97%); --input-border: 1px solid #DADADA; --input-background=
-color: #ffffff; --settings-title-color: var(--primaryColor); --settings-it=
em-background-color: var(--th-white); --settings-item-background-hover-colo=
r: var(--th-grey-medium); --settings-item-background-active-color: var(--th=
-grey); --list-group-background-color: transparent; --list-group-item-backg=
round-color: var(--th-white); --list-group-item-background-hover-color: var=
(--th-grey-light); --list-group-item-background-active-color: var(--th-grey=
); --list-group-item-icon-color: var(--th-slate-dark); --ListGroupSearchIte=
mColor: var(--th-white); --ListGroupSearchItemColorHover: #f9fafb; --ListGr=
oupSearchItemTextColor: var(--th-slate); --ListGroupSearchItemBorderColor: =
hsla(0, 0%, 0%, 0.15); --ListGroupSearchItemAsideColor: hsl(0, 0%, 95%); --=
ListGroupSearchItemAsideTextColor: #000; --toolbar-button-disabled: hsl(0, =
0%, 96.1%); --toolbar-button-background: hsl(0, 0%, 96.1%); --toolbar-butto=
n-hover-background: hsl(0, 0%, 80%); --toolbar-button-color: hsl(0, 0%, 0%)=
; --toolbar-button-hover-active-background: hsl(0, 0%, 70.2%); --toolbar-bu=
tton-default-size: 43px; --toolbar-button-focus-color: hsl(213, 71.3%, 60.4=
%); --toolbar-button-svg-color: hsl(0, 0%, 29%); --toolbar-button-toggle-co=
lor: hsl(264, 100%, 68%); --panel-inner-padding: .7em; --icon-button-backgr=
ound-default-color: hsla(0, 0%, 0%, 0.077); --icon-button-background-hover-=
color: hsla(0, 0%, 0%, 0.125); --icon-button-background-active-color: hsla(=
0, 0%, 0%, 0.187); --icon-button-background-default-color-dark: rgba(255, 2=
55, 255, 0.077); --icon-button-background-hover-color-dark: rgba(255, 255, =
255, 0.146); --icon-button-background-active-color-dark: rgba(255, 255, 255=
, 0.221); --icon-button-border-color: solid 2px transparent; --menuIconFill=
Color: var(--th-slate); --cardIconFillColor: var(--th-slate); --default-men=
u-notify-background-colour: hsl(264, 100%, 68%); --toolbarButtonBackgroundC=
olor: var( --defaultColor); --toolbarButtonBackgroundHoverColor: var( --ico=
n-button-background-hover-color); --toolbarButtonBackgroundActiveColor: var=
( --icon-button-background-active-color); --toolbarIconHoverFill: var( --th=
-slate); --toolbarIconToggleFill: var( --primaryColor); --dashboardContentB=
ackgroundColor: #fff; --dashboardHeaderBackgroundColor: #fff; --dashboardSi=
debarBorderTopColor: var( --lightGrey); --dashboardTextColor: var(--th-slat=
e); --dashboardTitleTextColor: var(--fontColorDark); --dashboardSubTitleTex=
tColor: var(--th-slate-light); --dashboardCardBackgroundColor: var(--white)=
; --dashboardCardBackgroundHoverColor: var(--th-grey-light); --dashboardCar=
dBackgroundActiveColor: var(--lightGrey); --dashboardCardHighlightColor: va=
r(--primaryColor); --dashboardCardBorderColor: var(--lightGrey); --dashboar=
dCardFooterLinkColor: var(--primaryColor); --dashboardCardAuditorColor: hsl=
(208, 100%, 43%); --dashboardCardAuditorLabelColor: hsl(208, 100%, 43%); --=
dashboardCardEditorLabelColor: var(--reachDeckEditorColor); --dashboardCard=
ToolbarColor: var(--primaryColorOrange); --dashboardCardToolbarLabelColor: =
var(--primaryColorOrange); --dashboardPaneBackgroundColor: #fcfcfc; --dashb=
oardPaneBorderColor: rgba(92, 106, 138, 0.4); --dashboardPaneDashedBorderCo=
lor: var(--dashboardDashedBorderLight); --dashboardDashedBorderLight: url("=
data:image/svg+xml,%3csvg width=3D'100%25' height=3D'100%25' xmlns=3D'http:=
//www.w3.org/2000/svg'%3e%3crect width=3D'100%25' height=3D'100%25' fill=3D=
'none' stroke=3D'%235C6A8ACC' stroke-width=3D'2' stroke-dasharray=3D'4%2c 8=
' stroke-dashoffset=3D'0' stroke-linecap=3D'square'/%3e%3c/svg%3e"); --dash=
boardDashedBorderDark: url("data:image/svg+xml,%3csvg width=3D'100%25' heig=
ht=3D'100%25' xmlns=3D'http://www.w3.org/2000/svg'%3e%3crect width=3D'100%2=
5' height=3D'100%25' fill=3D'none' stroke=3D'%23323E52FF' stroke-width=3D'2=
' stroke-dasharray=3D'4%2c 8' stroke-dashoffset=3D'0' stroke-linecap=3D'squ=
are'/%3e%3c/svg%3e"); --icon-opacity: 1; --accordionBackgroundColor: #fff; =
--accordionTextColor: #484848; --accordionTextBottomColor: #484848; --accor=
dionIconColor: var(--toolbarWhite); --accordionBackgroundColorHover: #f9faf=
b; --tableBackgroundColor: none; --tableBackgroundHeaderColor: #F9FAFB; --t=
ableBackgroundAltColor: #f7f7f7; --tableBackgroundHoverColor: hsl(210, 20%,=
 98%); --tableBorderColor: #E2E2E3; --tableTextColor: #484848; --buttonLink=
TextColor: var( --primaryColor) !important; --buttonLinkIconColor: var( --p=
rimaryColor) !important; }

.th-wq, .th-th { --toolbarBackgroundColor: var(--defaultColor); --themeColo=
rDefault: var(--defaultColor); --themeColorPrimary: var(--themeColorWriq); =
--themeColorSecondary: var(--secondaryColor); --dashboardTopColor: var(--br=
andColorTeal); --dashboardTitleColor: var(--themeColorWriq); --iconFillColo=
r: var(--white); --buttonBackgroundColor: var(--defaultColor); --buttonBack=
groundHoverColor: var(--defaultColorHover); --buttonBackgroundActiveColor: =
var(--defaultColorActive); --buttonTextColor: var(--fontColorDark); --butto=
nTextHoverColor: var(--fontColorDark); --buttonTextActiveColor: var(--fontC=
olorDark); --buttonTextVisitedColor: var(--fontColorDark); --buttonBorder: =
var(--buttonBorder); --buttonBorderHover: var(--buttonBorderColorHover); --=
buttonBorderRadius: var(--buttonRoundness); --buttonIconFillColor: var(--bl=
ack); --primaryButtonBackgroundColor: var(--primaryColorTeal); --primaryBut=
tonBackgroundHoverColor: var(--primaryColorTealHover); --primaryButtonBackg=
roundActiveColor: var(--primaryColorTealActive); --primaryButtonBorderActiv=
e: var(--buttonBorderTealActive); --primaryButtonTextColor: var(--fontColor=
White); --primaryButtonTextHoverColor: var(--fontColorWhite); --primaryButt=
onTextActiveColor: var(--fontColorWhite); --primaryButtonTextVisitedColor: =
var(--fontColorWhite); --primaryButtonBorder: var(--buttonBorderTeal); --pr=
imaryButtonBorderHover: var(--buttonBorderTealHover); --primaryButtonBorder=
Radius: var(--buttonRoundness); --primaryButtonIconFillColor: var(--white);=
 --secondaryButtonBackgroundColor: var(--secondaryColor); --secondaryButton=
BackgroundHoverColor: var(--secondaryColorHover); --secondaryButtonBackgrou=
ndActiveColor: var(--secondaryColorActive); --secondaryButtonTextColor: var=
(--fontColorWhite); --secondaryButtonTextHoverColor: var(--fontColorWhite);=
 --secondaryButtonTextActiveColor: var(--fontColorWhite); --secondaryButton=
TextVisitedColor: var(--fontColorWhite); --secondaryButtonBorder: var(--sec=
ondaryButtonBorder); --secondaryButtonBorderHover: var(--secondaryButtonBor=
derColorHover); --secondaryButtonBorderRadius: var(--buttonRoundness); --se=
condaryButtonIconFillColor: var(--white); --table-hover-item: var(--list-it=
em-light-hover); --settingsTitleColor: var(--themeColorPrimary); }

.th-rw, .th-wa { --themeColorDefault: var(--defaultColor); --themeColorPrim=
ary: var(--themeColorReadWrite); --themeColorSecondary: var(--secondaryColo=
r); --toolbarBackgroundColor: var(--defaultColor); --toolbarIconFill: var(-=
-th-slate); --toolbarIconHoverFill: var(--th-slate); --toolbarIconActiveFil=
l: var(--th-slate); --toolbarIconToggledHoverFill: var(--primaryColorPurple=
); --toolbarIconToggleFill: var(--primaryColorPurple); --toolbarIconToggleH=
overFill: var(--primaryColorPurple); --dashboardTopColor: var(--brandColorP=
urple); --dashboardTitleColor: var(--themeColorReadWrite); --iconFillColor:=
 var(--th-slate-dark); --buttonBackgroundColor: var(--defaultColor); --butt=
onBackgroundHoverColor: var(--defaultColorHover); --buttonBackgroundActiveC=
olor: var(--defaultColorActive); --buttonTextColor: var(--fontColorDark); -=
-buttonTextHoverColor: var(--fontColorDark); --buttonTextActiveColor: var(-=
-fontColorDark); --buttonTextVisitedColor: var(--fontColorDark); --buttonBo=
rder: var(--buttonBorder); --buttonBorderHover: var(--buttonBorderColorHove=
r); --buttonBorderActive: var(--buttonBorderColorActive); --buttonBorderRad=
ius: var(--buttonRoundness); --buttonIconFillColor: var(--black); --primary=
ButtonBackgroundColor: var(--primaryColorPurple); --primaryButtonBackground=
HoverColor: var(--primaryColorPurpleHover); --primaryButtonBackgroundActive=
Color: var(--primaryColorPurpleActive); --primaryButtonBorderActive: var(--=
buttonBorderPurpleActive); --primaryButtonTextColor: var(--fontColorWhite);=
 --primaryButtonTextHoverColor: var(--fontColorWhite); --primaryButtonTextA=
ctiveColor: var(--fontColorWhite); --primaryButtonTextVisitedColor: var(--f=
ontColorWhite); --primaryButtonBorder: var(--buttonBorderPurple); --primary=
ButtonBorderHover: var(--buttonBorderPurpleHover); --primaryButtonBorderRad=
ius: var(--buttonRoundness); --primaryButtonIconFillColor: var(--white); --=
secondaryButtonBackgroundColor: var(--secondaryColor); --secondaryButtonBac=
kgroundHoverColor: var(--secondaryColorHover); --secondaryButtonBackgroundA=
ctiveColor: var(--secondaryColorActive); --secondaryButtonTextColor: var(--=
fontColorWhite); --secondaryButtonTextHoverColor: var(--fontColorWhite); --=
secondaryButtonTextActiveColor: var(--fontColorWhite); --secondaryButtonTex=
tVisitedColor: var(--fontColorWhite); --secondaryButtonBorder: var(--second=
aryButtonBorder); --secondaryButtonBorderHover: var(--secondaryButtonBorder=
ColorHover); --secondaryButtonBorderRadius: var(--buttonRoundness); --secon=
daryButtonIconFillColor: var(--white); --table-hover-item: var(--list-item-=
light-hover); --settingsTitleColor: var(--themeColorPrimary); --menuNotifyB=
ackgroundColour: var(--brandColorPurple); --uniloginBackgroundColor: #FAF7F=
F; --uniloginWindowBackgroundColor: var(--primaryColorPurple); }

.th-pr { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--themeColorPdfReader); --themeColorSecondary: var(--secondaryColor); --pr=
imaryButtonBackgroundColor: var(--primaryColorBlue); --primaryButtonBackgro=
undHoverColor: var(--primaryColorBlueHover); --primaryButtonBackgroundActiv=
eColor: var(--primaryColorBlueActive); --primaryButtonBorderActive: var(--b=
uttonBorderBlueActive); --primaryButtonTextColor: var(--fontColorWhite); --=
primaryButtonTextHoverColor: var(--fontColorWhite); --primaryButtonTextActi=
veColor: var(--fontColorWhite); --primaryButtonTextVisitedColor: var(--font=
ColorWhite); --primaryButtonBorder: var(--buttonBorderBlue); --primaryButto=
nBorderHover: var(--buttonBorderBlueHover); --primaryButtonBorderRadius: va=
r(--buttonRoundness); --primaryButtonIconFillColor: var(--white); --toolbar=
BackgroundColor: var(--th-grey); --toolbarButtonBackgroundColor: var(--th-g=
rey); --toolbarButtonBackgroundHoverColor: var(--ContrastPinkOrbitNoteHover=
); --toolbarButtonBackgroundActiveColor: var(--ContrastPinkOrbitNoteActive)=
; --toolbarButtonBorderActive: var(--ContrastButtonBorderPink); --toolbarIc=
onFill: var(--th-slate); --toolbarIconHoverFill: var(--white); --toolbarIco=
nActiveFill: var(--white); --toolbarIconToggleFill: var(--ContrastPinkOrbit=
NoteActive); --toolbarIconToggleHoverFill: var(--white); --toolbarIconToggl=
edHoverFill: var(--white); --iconButtonBackgroundDefaultColor: var(--icon-b=
utton-background-default-color); --iconButtonBackgroundHoverColor: var(--ic=
on-button-background-hover-color); --iconButtonBackgroundActiveColor: var(-=
-icon-button-background-active-color); --iconButtonBorderColor: 2px solid t=
ransparent; --iconFillColor: var(--th-slate); --panelBackgroundColor: var(-=
-th-grey-light); --panelBackgroundColorLight: var(--white); --panelBackgrou=
ndColorDark: var(--th-grey); --fontColor: var(--th-slate-dark); --borderCol=
or: 1px solid var(--th-grey-dark); --settingsTitleColor: var(--themeColorPr=
imary); --menuNotifyBackgroundColour: var(--brandColorPink); --dashboardTop=
Color: var(--primaryColorBlue); --dashboardTitleColor: var(--themeColorEqua=
tio); --cardIconFillColor: var(--primaryColorBlue); }

.th-eq { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--themeColorEquatio); --themeColorSecondary: var(--secondaryColor); --dash=
boardTopColor: var(--brandColorBlue); --dashboardTitleColor: var(--themeCol=
orEquatio); --iconFillColor: var(--th-slate-dark); --buttonBackgroundColor:=
 var(--defaultColor); --buttonBackgroundHoverColor: var(--defaultColorHover=
); --buttonBackgroundActiveColor: var(--defaultColorActive); --buttonTextCo=
lor: var(--fontColorDark); --buttonTextHoverColor: var(--fontColorDark); --=
buttonTextActiveColor: var(--fontColorDark); --buttonTextVisitedColor: var(=
--fontColorDark); --buttonBorder: var(--buttonBorder); --buttonBorderHover:=
 var(--buttonBorderColorHover); --buttonBorderRadius: var(--buttonRoundness=
); --buttonIconFillColor: var(--black); --primaryButtonBackgroundColor: var=
(--primaryColorBlue); --primaryButtonBackgroundHoverColor: var(--primaryCol=
orBlueHover); --primaryButtonBackgroundActiveColor: var(--primaryColorBlueA=
ctive); --primaryButtonBorderActive: var(--buttonBorderBlueActive); --prima=
ryButtonTextColor: var(--fontColorWhite); --primaryButtonTextHoverColor: va=
r(--fontColorWhite); --primaryButtonTextActiveColor: var(--fontColorWhite);=
 --primaryButtonTextVisitedColor: var(--fontColorWhite); --primaryButtonBor=
der: var(--buttonBorderBlue); --primaryButtonBorderHover: var(--buttonBorde=
rBlueHover); --primaryButtonBorderRadius: var(--buttonRoundness); --primary=
ButtonIconFillColor: var(--white); --secondaryButtonBackgroundColor: var(--=
secondaryColor); --secondaryButtonBackgroundHoverColor: var(--secondaryColo=
rHover); --secondaryButtonBackgroundActiveColor: var(--secondaryColorActive=
); --secondaryButtonTextColor: var(--fontColorWhite); --secondaryButtonText=
HoverColor: var(--fontColorWhite); --secondaryButtonTextActiveColor: var(--=
fontColorWhite); --secondaryButtonTextVisitedColor: var(--fontColorWhite); =
--secondaryButtonBorder: var(--secondaryButtonBorder); --secondaryButtonBor=
derHover: var(--secondaryButtonBorderColorHover); --secondaryButtonBorderRa=
dius: var(--buttonRoundness); --secondaryButtonIconFillColor: var(--white);=
 --table-hover-item: var(--list-item-light-hover); --settingsTitleColor: va=
r(--themeColorPrimary); --uniloginBackgroundColor: #F2F9FF; --uniloginWindo=
wBackgroundColor: var(--brandColorBlueWCAG); }

.th-ba { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--themeColorBrowsealoud); --themeColorSecondary: var(--secondaryColor); --=
toolbarBackgroundColor: var(--th-grey); --toolbarIconButtonFillColor: var(-=
-th-slate); --toolbarButtonBackgroundColor: var(--th-grey); --toolbarButton=
BackgroundHoverColor: var(--primaryColorOrangeHover); --toolbarButtonBackgr=
oundActiveColor: var(--primaryColorOrangeActive); --toolbarButtonBorderActi=
ve: var(--buttonBorderOrange); --toolbarIconFill: var(--th-slate); --toolba=
rIconHoverFill: var(--th-slate); --toolbarIconActiveFill: var(--primaryColo=
rBlue); --toolbarIconToggleFill: var(--primaryColorBlue); --toolbarIconTogg=
leHoverFill: var(--white); --dashboardTopColor: var(--brandColorOrange); --=
dashboardTitleColor: var(--themeColorBrowsealoud); --iconFillColor: var(--w=
hite); --buttonBackgroundColor: var(--defaultColor); --buttonBackgroundHove=
rColor: var(--defaultColorHover); --buttonBackgroundActiveColor: var(--defa=
ultColorActive); --buttonTextColor: var(--fontColorDark); --buttonTextHover=
Color: var(--fontColorDark); --buttonTextActiveColor: var(--fontColorDark);=
 --buttonTextVisitedColor: var(--fontColorDark); --buttonBorder: var(--butt=
onBorder); --buttonBorderHover: var(--buttonBorderColorHover); --buttonBord=
erRadius: var(--buttonRoundness); --buttonBorderIconFillColor: var(--black)=
; --primaryButtonBackgroundColor: var(--primaryColorOrange); --primaryButto=
nBackgroundHoverColor: var(--primaryColorOrangeHover); --primaryButtonBackg=
roundActiveColor: var(--primaryColorOrangeActive); --primaryButtonBorderAct=
ive: var(--buttonBorderOrangeActive); --primaryButtonTextColor: var(--fontC=
olorWhite); --primaryButtonTextHoverColor: var(--fontColorWhite); --primary=
ButtonTextActiveColor: var(--fontColorWhite); --primaryButtonTextVisitedCol=
or: var(--fontColorWhite); --primaryButtonBorder: var(--buttonBorderOrange)=
; --primaryButtonBorderHover: var(--buttonBorderOrangeHover); --primaryButt=
onBorderRadius: var(--buttonRoundness); --primaryButtonIconFillColor: var(-=
-white); --secondaryButtonBackgroundColor: var(--secondaryColor); --seconda=
ryButtonBackgroundHoverColor: var(--secondaryColorHover); --secondaryButton=
BackgroundActiveColor: var(--secondaryColorActive); --secondaryButtonTextCo=
lor: var(--fontColorWhite); --secondaryButtonTextHoverColor: var(--fontColo=
rWhite); --secondaryButtonTextActiveColor: var(--fontColorWhite); --seconda=
ryButtonTextVisitedColor: var(--fontColorWhite); --secondaryButtonBorder: v=
ar(--secondaryButtonBorder); --secondaryButtonBorderHover: var(--secondaryB=
uttonBorderColorHover); --secondaryButtonBorderRadius: var(--buttonRoundnes=
s); --secondaryButtonIconFillColor: var(--white); --table-hover-item: var(-=
-list-item-light-hover); --settingsTitleColor: var(--themeColorPrimary); --=
menuNotifyBackgroundColour: var(--white); }

.th-ba .gw-menu-notification--inline { --menuNotifyBackgroundColour: var(--=
themeColorBrowsealoud); }

.th-at { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--themeColorReachDeck); --themeColorSecondary: var(--secondaryColor); --to=
olbarBackgroundColor: var(--defaultColor); --toolbarIconFill: var(--th-slat=
e); --toolbarIconHoverFill: var(--th-slate); --toolbarIconActiveFill: var(-=
-th-slate); --toolbarIconToggledHoverFill: var(--primaryColorBlue); --toolb=
arIconToggleFill: var(--primaryColorBlue); --toolbarIconToggleHoverFill: va=
r(--primaryColorBlue); --dashboardTitleColor: var(--th-slate-dark); --iconF=
illColor: var(--th-slate-dark); --buttonBackgroundColor: var(--defaultColor=
); --buttonBackgroundHoverColor: var(--defaultColorHover); --buttonBackgrou=
ndActiveColor: var(--defaultColorActive); --buttonTextColor: var(--fontColo=
rDark); --buttonTextHoverColor: var(--fontColorDark); --buttonTextActiveCol=
or: var(--fontColorDark); --buttonTextVisitedColor: var(--fontColorDark); -=
-buttonBorder: var(--buttonBorder); --buttonBorderHover: var(--buttonBorder=
ColorHover); --buttonBorderRadius: var(--buttonRoundness); --buttonBorderIc=
onFillColor: var(--black); --primaryButtonBackgroundColor: var(--primaryCol=
orReachDeck); --primaryButtonBackgroundHoverColor: var(--primaryColorReachD=
eckHover); --primaryButtonBackgroundActiveColor: var(--primaryColorReachDec=
kActive); --primaryButtonBorderActive: var(--buttonBorderReachDeckActive); =
--primaryButtonTextColor: var(--fontColorWhite); --primaryButtonTextHoverCo=
lor: var(--fontColorWhite); --primaryButtonTextActiveColor: var(--fontColor=
White); --primaryButtonTextVisitedColor: var(--fontColorWhite); --primaryBu=
ttonBorder: var(--buttonBorderReachDeck); --primaryButtonBorderHover: var(-=
-buttonBorderReachDeckHover); --primaryButtonBorderRadius: var(--buttonRoun=
dness); --primaryButtonIconFillColor: var(--white); --secondaryButtonBackgr=
oundColor: var(--secondaryColor); --secondaryButtonBackgroundHoverColor: va=
r(--secondaryColorHover); --secondaryButtonBackgroundActiveColor: var(--sec=
ondaryColorActive); --secondaryButtonTextColor: var(--fontColorWhite); --se=
condaryButtonTextHoverColor: var(--fontColorWhite); --secondaryButtonTextAc=
tiveColor: var(--fontColorWhite); --secondaryButtonTextVisitedColor: var(--=
fontColorWhite); --secondaryButtonBorder: var(--secondaryButtonBorder); --s=
econdaryButtonBorderHover: var(--secondaryButtonBorderColorHover); --second=
aryButtonBorderRadius: var(--buttonRoundness); --secondaryButtonIconFillCol=
or: var(--white); --dashboardTopColor: #E12362; --dashboardContentBackgroun=
dColor: #F2F5F9; --tableBackgroundHeaderColor: #DFE1E5; --table-hover-item:=
 var(--list-item-light-hover); --settingsTitleColor: var(--themeColorPrimar=
y); }

.th-rd { font-size: 10px; --themeColorDefault: var(--defaultColor); --theme=
ColorPrimary: var(--themeColorReachDeck); --themeColorSecondary: var(--seco=
ndaryColor); --toolbarBackgroundColor: var(--defaultColor); --toolbarIconFi=
ll: var(--th-slate); --toolbarIconHoverFill: var(--th-slate); --toolbarIcon=
ActiveFill: var(--th-slate); --toolbarIconToggledHoverFill: var(--primaryCo=
lorBlue); --toolbarIconToggleFill: var(--primaryColorBlue); --toolbarIconTo=
ggleHoverFill: var(--primaryColorBlue); --dashboardTopColor: var(--th-grey)=
; --dashboardTitleColor: var(--th-slate-dark); --iconFillColor: var(--th-sl=
ate-dark); --buttonBackgroundColor: var(--defaultColor); --buttonBackground=
HoverColor: var(--defaultColorHover); --buttonBackgroundActiveColor: var(--=
defaultColorActive); --buttonTextColor: var(--fontColorDark); --buttonTextH=
overColor: var(--fontColorDark); --buttonTextActiveColor: var(--fontColorDa=
rk); --buttonTextVisitedColor: var(--fontColorDark); --buttonBorder: var(--=
buttonBorder); --buttonBorderHover: var(--buttonBorderColorHover); --button=
BorderRadius: var(--buttonRoundness); --buttonBorderIconFillColor: var(--bl=
ack); --primaryButtonBackgroundColor: var(--primaryColorReachDeck); --prima=
ryButtonBackgroundHoverColor: var(--primaryColorReachDeckHover); --primaryB=
uttonBackgroundActiveColor: var(--primaryColorReachDeckActive); --primaryBu=
ttonBorderActive: var(--buttonBorderReachDeckActive); --primaryButtonTextCo=
lor: var(--fontColorWhite); --primaryButtonTextHoverColor: var(--fontColorW=
hite); --primaryButtonTextActiveColor: var(--fontColorWhite); --primaryButt=
onTextVisitedColor: var(--fontColorWhite); --primaryButtonBorder: var(--but=
tonBorderReachDeck); --primaryButtonBorderHover: var(--buttonBorderReachDec=
kHover); --primaryButtonBorderRadius: var(--buttonRoundness); --primaryButt=
onIconFillColor: var(--white); --secondaryButtonBackgroundColor: var(--seco=
ndaryColor); --secondaryButtonBackgroundHoverColor: var(--secondaryColorHov=
er); --secondaryButtonBackgroundActiveColor: var(--secondaryColorActive); -=
-secondaryButtonTextColor: var(--fontColorWhite); --secondaryButtonTextHove=
rColor: var(--fontColorWhite); --secondaryButtonTextActiveColor: var(--font=
ColorWhite); --secondaryButtonTextVisitedColor: var(--fontColorWhite); --se=
condaryButtonBorder: var(--secondaryButtonBorder); --secondaryButtonBorderH=
over: var(--secondaryButtonBorderColorHover); --secondaryButtonBorderRadius=
: var(--buttonRoundness); --secondaryButtonIconFillColor: var(--white); --t=
able-hover-item: var(--list-item-light-hover); --settingsTitleColor: var(--=
themeColorPrimary); }

.th-ss { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--themeColorSpeechStream); --themeColorSecondary: var(--secondaryColor); -=
-dashboardTopColor: var(--brandColorPink); --dashboardTitleColor: var(--the=
meColorSpeechStream); --iconFillColor: var(--th-slate-dark); --buttonBackgr=
oundColor: var(--defaultColor); --buttonBackgroundHoverColor: var(--default=
ColorHover); --buttonBackgroundActiveColor: var(--defaultColorActive); --bu=
ttonTextColor: var(--fontColorDark); --buttonTextHoverColor: var(--fontColo=
rDark); --buttonTextActiveColor: var(--fontColorDark); --buttonTextVisitedC=
olor: var(--fontColorDark); --buttonBorder: var(--buttonBorder); --buttonBo=
rderHover: var(--buttonBorderColorHover); --buttonBorderRadius: var(--butto=
nRoundness); --buttonBorderIconFillColor: var(--black); --primaryButtonBack=
groundColor: var(--themeColorSpeechStream); --primaryButtonBackgroundHoverC=
olor: var(--primaryColorPinkHover); --primaryButtonBackgroundActiveColor: v=
ar(--primaryColorPinkActive); --primaryButtonBorderActive: var(--buttonBord=
erPinkActive); --primaryButtonTextColor: var(--fontColorWhite); --primaryBu=
ttonTextHoverColor: var(--fontColorWhite); --primaryButtonTextActiveColor: =
var(--fontColorWhite); --primaryButtonTextVisitedColor: var(--fontColorWhit=
e); --primaryButtonBorder: var(--buttonBorderPink); --primaryButtonBorderHo=
ver: var(--buttonBorderPinkHover); --primaryButtonBorderRadius: var(--butto=
nRoundness); --primaryButtonIconFillColor: var(--white); --secondaryButtonB=
ackgroundColor: var(--secondaryColor); --secondaryButtonBackgroundHoverColo=
r: var(--secondaryColorHover); --secondaryButtonBackgroundActiveColor: var(=
--secondaryColorActive); --secondaryButtonTextColor: var(--fontColorWhite);=
 --secondaryButtonTextHoverColor: var(--fontColorWhite); --secondaryButtonT=
extActiveColor: var(--fontColorWhite); --secondaryButtonTextVisitedColor: v=
ar(--fontColorWhite); --secondaryButtonBorder: var(--secondaryButtonBorder)=
; --secondaryButtonBorderHover: var(--secondaryButtonBorderColorHover); --s=
econdaryButtonBorderRadius: var(--buttonRoundness); --secondaryButtonIconFi=
llColor: var(--white); --table-hover-item: var(--list-item-light-hover); --=
settingsTitleColor: var(--themeColorPrimary); }

.th-st { --uniloginBackgroundColor: #F2F9FF; --uniloginWindowBackgroundColo=
r: #2A3953; }

.th-sv, .th-ft { --themeColorDefault: var(--defaultColor); --themeColorPrim=
ary: var(--themeColorFluencyTutor); --themeColorSecondary: var(--secondaryC=
olor); --dashboardTopColor: var(--brandColorGreen); --dashboardTitleColor: =
var(--themeColorFluencyTutor); --iconFillColor: var(--th-slate-dark); --but=
tonBackgroundColor: var(--defaultColor); --buttonBackgroundHoverColor: var(=
--defaultColorHover); --buttonBackgroundActiveColor: var(--defaultColorActi=
ve); --buttonTextColor: var(--fontColorDark); --buttonTextHoverColor: var(-=
-fontColorDark); --buttonTextActiveColor: var(--fontColorDark); --buttonTex=
tVisitedColor: var(--fontColorDark); --buttonBorder: var(--buttonBorder); -=
-buttonBorderHover: var(--buttonBorderColorHover); --buttonBorderRadius: va=
r(--buttonRoundness); --buttonBorderIconFillColor: var(--black); --primaryB=
uttonBackgroundColor: var(--themeColorFluencyTutor); --primaryButtonBackgro=
undHoverColor: var(--primaryColorGreenHover); --primaryButtonBackgroundActi=
veColor: var(--primaryColorGreenActive); --primaryButtonBorderActive: var(-=
-buttonBorderGreenActive); --primaryButtonTextColor: var(--fontColorWhite);=
 --primaryButtonTextHoverColor: var(--fontColorWhite); --primaryButtonTextA=
ctiveColor: var(--fontColorWhite); --primaryButtonTextVisitedColor: var(--f=
ontColorWhite); --primaryButtonBorder: var(--buttonBorderGreen); --primaryB=
uttonBorderHover: var(--buttonBorderGreenHover); --primaryButtonBorderRadiu=
s: var(--buttonRoundness); --primaryButtonIconFillColor: var(--white); --se=
condaryButtonBackgroundColor: var(--secondaryColor); --secondaryButtonBackg=
roundHoverColor: var(--secondaryColorHover); --secondaryButtonBackgroundAct=
iveColor: var(--secondaryColorActive); --secondaryButtonTextColor: var(--fo=
ntColorWhite); --secondaryButtonTextHoverColor: var(--fontColorWhite); --se=
condaryButtonTextActiveColor: var(--fontColorWhite); --secondaryButtonTextV=
isitedColor: var(--fontColorWhite); --secondaryButtonBorder: var(--secondar=
yButtonBorder); --secondaryButtonBorderHover: var(--secondaryButtonBorderCo=
lorHover); --secondaryButtonBorderRadius: var(--buttonRoundness); --seconda=
ryButtonIconFillColor: var(--white); --table-hover-item: var(--list-item-li=
ght-hover); --settingsTitleColor: var(--themeColorPrimary); }

.th-cr { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--primaryColorClaroNavy); --themeColorSecondary: var(--secondaryColor); --=
buttonBackgroundColor: var(--defaultColor); --buttonBackgroundHoverColor: v=
ar(--defaultColorHover); --buttonBackgroundActiveColor: var(--defaultColorA=
ctive); --buttonTextColor: var(--fontColorDark); --buttonTextHoverColor: va=
r(--fontColorDark); --buttonTextActiveColor: var(--fontColorDark); --button=
TextVisitedColor: var(--fontColorDark); --buttonBorder: var(--buttonBorder)=
; --buttonBorderHover: var(--buttonBorderColorHover); --buttonBorderRadius:=
 var(--buttonRoundness); --buttonBorderIconFillColor: var(--black); --prima=
ryButtonBackgroundColor: var(--primaryColorClaroNavy); --primaryButtonBackg=
roundHoverColor: var(--primaryColorClaroNavyHover); --primaryButtonBackgrou=
ndActiveColor: var(--primaryColorClaroNavyActive); --primaryButtonBorderAct=
ive: var(--buttonBorderClaroActive); --primaryButtonTextColor: var(--fontCo=
lorWhite); --primaryButtonTextHoverColor: var(--fontColorWhite); --primaryB=
uttonTextActiveColor: var(--fontColorWhite); --primaryButtonTextVisitedColo=
r: var(--fontColorWhite); --primaryButtonBorder: var(--buttonBorderClaro); =
--primaryButtonBorderHover: var(--buttonBorderClaroHover); --primaryButtonB=
orderRadius: var(--buttonRoundness); --primaryButtonIconFillColor: var(--wh=
ite); --altButtonBackgroundColor: var(--altColor); --altButtonBackgroundHov=
erColor: var(--altColorHover); --altButtonBackgroundActiveColor: var(--altC=
olorActive); --altButtonTextColor: var(--fontColorWhite); --altButtonTextHo=
verColor: var(--fontColorWhite); --altButtonTextActiveColor: var(--fontColo=
rWhite); --altButtonTextVisitedColor: var(--fontColorWhite); --altButtonBor=
der: var(--altButtonBorder); --altButtonBorderHover: var(--altButtonBorderC=
olorHover); --altButtonBorderRadius: var(--buttonRoundness); --altButtonIco=
nFillColor: var(--white); --uniloginBackgroundColor: #F2F9FF; --uniloginWin=
dowBackgroundColor: var(--themeColorPrimary); }

.th-wh { background: rgb(246, 246, 246); --themeColorDefault: var(--default=
Color); --themeColorPrimary: var(--primaryColorClaroNavy); --themeColorSeco=
ndary: var(--secondaryColor); --buttonBackgroundColor: var(--defaultColor);=
 --buttonBackgroundHoverColor: var(--defaultColorHover); --buttonBackground=
ActiveColor: var(--defaultColorActive); --buttonTextColor: var(--fontColorD=
ark); --buttonTextHoverColor: var(--fontColorDark); --buttonTextActiveColor=
: var(--fontColorDark); --buttonTextVisitedColor: var(--fontColorDark); --b=
uttonBorder: var(--buttonBorder); --buttonBorderHover: var(--buttonBorderCo=
lorHover); --buttonBorderRadius: var(--buttonRoundness); --buttonBorderIcon=
FillColor: var(--black); --primaryButtonBackgroundColor: var(--primaryColor=
ClaroBlue); --primaryButtonBackgroundHoverColor: var(--primaryColorClaroBlu=
eHover); --primaryButtonBackgroundActiveColor: var(--primaryColorClaroBlueA=
ctive); --primaryButtonBorderActive: var(--buttonBorderClaroActive); --prim=
aryButtonTextColor: var(--fontColorWhite); --primaryButtonTextHoverColor: v=
ar(--fontColorWhite); --primaryButtonTextActiveColor: var(--fontColorWhite)=
; --primaryButtonTextVisitedColor: var(--fontColorWhite); --primaryButtonBo=
rder: var(--primaryColorClaroBlue); --primaryButtonBorderHover: var(--prima=
ryColorClaroBlueHover); --primaryButtonBorderRadius: var(--buttonRoundness)=
; --primaryButtonIconFillColor: var(--white); --altButtonBackgroundColor: v=
ar(--altColor); --altButtonBackgroundHoverColor: var(--altColorHover); --al=
tButtonBackgroundActiveColor: var(--altColorActive); --altButtonTextColor: =
var(--fontColorWhite); --altButtonTextHoverColor: var(--fontColorWhite); --=
altButtonTextActiveColor: var(--fontColorWhite); --altButtonTextVisitedColo=
r: var(--fontColorWhite); --altButtonBorder: var(--altButtonBorder); --altB=
uttonBorderHover: var(--altButtonBorderColorHover); --altButtonBorderRadius=
: var(--buttonRoundness); --altButtonIconFillColor: var(--white); --unilogi=
nBackgroundColor: #F2F9FF; --uniloginWindowBackgroundColor: var(--primaryCo=
lorClaroNavy); }

.th-lds { --themeColorDefault: var(--defaultColor); --themeColorPrimary: va=
r(--primaryColorLingdys); --themeColorSecondary: var(--secondaryColor); --b=
uttonBackgroundColor: var(--defaultColor); --buttonBackgroundHoverColor: va=
r(--defaultColorHover); --buttonBackgroundActiveColor: var(--defaultColorAc=
tive); --buttonTextColor: var(--fontColorDark); --buttonTextHoverColor: var=
(--fontColorDark); --buttonTextActiveColor: var(--fontColorDark); --buttonT=
extVisitedColor: var(--fontColorDark); --buttonBorder: var(--buttonBorder);=
 --buttonBorderHover: var(--buttonBorderColorHover); --buttonBorderRadius: =
var(--buttonRoundness); --buttonBorderIconFillColor: var(--black); --primar=
yButtonBackgroundColor: var(--primaryColorLingdys); --primaryButtonBackgrou=
ndHoverColor: var(--primaryColorLingdysHover); --primaryButtonBackgroundAct=
iveColor: var(--primaryColorLingdysActive); --primaryButtonBorderActive: va=
r(--buttonBorderLingdysActive); --primaryButtonTextColor: var(--fontColorWh=
ite); --primaryButtonTextHoverColor: var(--fontColorWhite); --primaryButton=
TextActiveColor: var(--fontColorWhite); --primaryButtonTextVisitedColor: va=
r(--fontColorWhite); --primaryButtonBorder: var(--buttonBorderLingdys); --p=
rimaryButtonBorderHover: var(--buttonBorderLingdysHover); --primaryButtonBo=
rderRadius: var(--buttonRoundness); --primaryButtonIconFillColor: var(--whi=
te); --altButtonBackgroundColor: var(--altColor); --altButtonBackgroundHove=
rColor: var(--altColorHover); --altButtonBackgroundActiveColor: var(--altCo=
lorActive); --altButtonTextColor: var(--fontColorWhite); --altButtonTextHov=
erColor: var(--fontColorWhite); --altButtonTextActiveColor: var(--fontColor=
White); --altButtonTextVisitedColor: var(--fontColorWhite); --altButtonBord=
er: var(--altButtonBorder); --altButtonBorderHover: var(--altButtonBorderCo=
lorHover); --altButtonBorderRadius: var(--buttonRoundness); --altButtonIcon=
FillColor: var(--white); --uniloginBackgroundColor: #F2F9FF; --uniloginWind=
owBackgroundColor: var(--themeColorPrimary); }

.th-aw { --themeColorDefault: var(--defaultColor); --themeColorPrimary: var=
(--primaryColorClaroNavy); --themeColorSecondary: var(--secondaryColor); --=
buttonBackgroundColor: var(--defaultColor); --buttonBackgroundHoverColor: v=
ar(--defaultColorHover); --buttonBackgroundActiveColor: var(--defaultColorA=
ctive); --buttonTextColor: var(--fontColorDark); --buttonTextHoverColor: va=
r(--fontColorDark); --buttonTextActiveColor: var(--fontColorDark); --button=
TextVisitedColor: var(--fontColorDark); --buttonBorder: var(--buttonBorder)=
; --buttonBorderHover: var(--buttonBorderColorHover); --buttonBorderRadius:=
 var(--buttonRoundness); --buttonBorderIconFillColor: var(--black); --prima=
ryButtonBackgroundColor: var(--primaryColorAppWriter); --primaryButtonBackg=
roundHoverColor: var(--primaryColorAppWriterHover); --primaryButtonBackgrou=
ndActiveColor: var(--primaryColorAppWriterActive); --primaryButtonBorderAct=
ive: var(--buttonBorderAppWriterActive); --primaryButtonTextColor: var(--fo=
ntColorWhite); --primaryButtonTextHoverColor: var(--fontColorWhite); --prim=
aryButtonTextActiveColor: var(--fontColorWhite); --primaryButtonTextVisited=
Color: var(--fontColorWhite); --primaryButtonBorder: var(--buttonBorderAppW=
riter); --primaryButtonBorderHover: var(--buttonBorderAppWriterHover); --pr=
imaryButtonBorderRadius: var(--buttonRoundness); --primaryButtonIconFillCol=
or: var(--white); --altButtonBackgroundColor: var(--altColor); --altButtonB=
ackgroundHoverColor: var(--altColorHover); --altButtonBackgroundActiveColor=
: var(--altColorActive); --altButtonTextColor: var(--fontColorWhite); --alt=
ButtonTextHoverColor: var(--fontColorWhite); --altButtonTextActiveColor: va=
r(--fontColorWhite); --altButtonTextVisitedColor: var(--fontColorWhite); --=
altButtonBorder: var(--altButtonBorder); --altButtonBorderHover: var(--altB=
uttonBorderColorHover); --altButtonBorderRadius: var(--buttonRoundness); --=
altButtonIconFillColor: var(--white); --uniloginBackgroundColor: #F7F7F7; -=
-uniloginWindowBackgroundColor: var(--primaryColorAppWriter); }

.dark-mode { --toolbarBackgroundColor: var(--th-slate-dark); --toolbarButto=
nBackgroundColor: var(--th-slate-dark); --toolbarButtonBackgroundHoverColor=
: var(--icon-button-background-hover-color-dark); --toolbarButtonBackground=
ActiveColor: var(--icon-button-background-active-color-dark); --toolbarButt=
onBorderActive: var(--buttonBorderPink); --toolbarIconFill: var(--white); -=
-toolbarIconHoverFill: var(--white); --toolbarIconActiveFill: var(--white);=
 --dashboardHeaderBackgroundColor: var(--th-slate-dark); --dashboardSidebar=
BorderTopColor: var(--th-slate); --dashboardSidebarBackgroundColor: var(--t=
h-slate-dark); --dashboardContentBackgroundColor: var(--th-slate); --dashbo=
ardCardBackgroundColor: var(--th-slate-dark); --dashboardCardBackgroundHove=
rColor: var(--th-slate-dark-hover600); --dashboardCardBackgroundActiveColor=
: var(--th-slate-dark-active600); --dashboardCardHighlightColor: var(--bran=
dColorBlue); --dashboardTextColor: var(--th-white); --dashboardTitleTextCol=
or: var(--th-white); --dashboardSubTitleTextColor: var(--th-white); --menuI=
conFillColor: var(--white); --iconButtonBackgroundDefaultColor: var(--icon-=
button-background-default-color-dark); --iconButtonBackgroundHoverColor: va=
r(--icon-button-background-hover-color-dark); --iconButtonBackgroundActiveC=
olor: var(--icon-button-background-active-color-dark); --iconButtonBorderCo=
lor: 2px solid transparent; --iconFillColor: var(--white); --buttonLinkText=
Color: var(--white); --buttonLinkIconColor: var(--white); --buttonNoBackgro=
undTextColor: var(--white); --buttonNoBackgroundIconColor: var(--white); --=
buttonNoBackgroundColor: transparent; --buttonNoBackgroundColorHover: var(-=
-icon-button-background-hover-color-dark); --buttonNoBackgroundColorActive:=
 var(--icon-button-background-active-color-dark); --buttonNoBackgroundBorde=
r: 2px solid transparent; --buttonNoBackgroundBorderHover: 2px solid transp=
arent; --buttonNoBackgroundBorderActive: 2px solid transparent; --panelBack=
groundColor: var(--th-slate); --panelBackgroundColorLight: var(--th-slate-l=
ight); --panelBackgroundColorDark: var(--th-slate-dark); --fontColor: var(-=
-textColorLight); --borderColor: 1px solid var(--th-slate-light); --infoBac=
kgroundColor: var(--notificationDarkModeBackground); --successBackgroundCol=
or: var(--notificationDarkModeBackground); --errorBackgroundColor: var(--no=
tificationDarkModeBackground); --warningBackgroundColor: var(--notification=
DarkModeBackground); --infoBorderColor: var(--notificationDarkModeBorder); =
--successBorderColor: var(--notificationDarkModeBorder); --errorBorderColor=
: var(--notificationDarkModeBorder); --warningBorderColor: var(--notificati=
onDarkModeBorder); --infoWarningColor: #fff; --successWarningColor: #fff; -=
-errorWarningColor: #fff; --warningWarningColor: #fff; --infoTitleColor: #f=
ff; --successTitleColor: #fff; --errorTitleColor: #fff; --warningTitleColor=
: #fff; --accordionBackgroundColor: var(--th-slate-dark); --accordionTextCo=
lor: #fff; --accordionTextBottomColor: #f5f5f5; --accordionIconColor: var(-=
-toolbarWhite); --accordionBackgroundColorHover: var(--th-slate-dark-hover6=
00); --tableBackgroundColor: var(--th-slate); --tableBackgroundHeaderColor:=
 var(--th-slate-alt); --tableBackgroundAltColor: var(--th-slate-alt); --tab=
leBackgroundHoverColor: var(--th-slate-hover); --tableBorderColor: var(--th=
-slate-dark); --tableTextColor: #fff; --ListGroupSearchItemColor: var(--th-=
slate-dark); --ListGroupSearchItemColorHover: var(--th-slate-dark-hover800)=
; --ListGroupSearchItemTextColor: var(--th-white); --ListGroupSearchItemBor=
derColor: rgba(0, 0, 0, 0.225); --ListGroupSearchItemAsideColor: var(--th-s=
late-dark); --ListGroupSearchItemAsideTextColor: #fff; --inputBorder: 1px s=
olid var(--th-slate); --inputTextColor: var( --th-white); --inputBackground=
Color: var(--th-cool-grey-800); --modalHeaderBackgroundColor: var(--th-cool=
-grey-800); --modalContentBackgroundColor: var(--th-cool-grey-700); --modal=
ContentBorderColorHeader: var(--th-cool-grey-700); --modalContentBorderColo=
rFooter: var(--th-cool-grey-700); --modalTextColor: var(--th-white); --sett=
ingsDialogBackgroundColor: var(--th-cool-grey-700); --settingsDialogMenuBac=
kgroundColor: var(--th-cool-grey-800); --settingsDialogItemSelectedBackgrou=
ndColor: var(--th-slate-dark); --settingsDialogItemBackgroundColorHover: va=
r(--th-cool-grey-700); --settingsDialogItemBackgroundColorActive: var(--th-=
cool-grey-600); --settingsTitleColor: #fff; --selectBorder: 1px solid var( =
--slate-light); --selectBackgroundColor: var( --th-slate); --selectBackgrou=
ndColorHover: rgba(255, 255, 255, 0.146); --selectBackgroundColorActive: rg=
ba(255, 255, 255, 0.221); --listGroupBackgroundColor: transparent; --listGr=
oupItemTextColor: var(--th-white); --listGroupItemBackgroundColor: var(--th=
-cool-grey-800); --listGroupItemActionsBackgroundColor: var(--th-cool-grey-=
850); --listGroupItemBackgroundColorHover: var(--th-cool-grey-700); --listG=
roupItemBackgroundColorActive: var(--th-cool-grey-600); --listGroupItemIcon=
Color: var(--th-white); --listGroupItemArrowColor: var(--th-cool-grey-800);=
 }

.dark-mode.th-rw { --toolbarIconActiveFill: var(--white); --toolbarIconTogg=
ledHoverFill: var(--brandColorPurple); --toolbarIconToggleFill: var(--brand=
ColorPurple); --toolbarIconToggleHoverFill: var(--brandColorPurple); }

.dark-mode.th-pr { --toolbarButtonBackgroundHoverColor: var(--primaryColorB=
lue); --toolbarButtonBackgroundActiveColor: var(--primaryColorBlueHover); -=
-toolbarButtonBorderActive: var(--buttonBorderBlueActive); --toolbarIconTog=
gleFill: var(--iconToggleFillOrbitNote); --textColor: var(--textColorLight)=
; --cardIconFillColor: var(--brandColorBlue); --primaryButtonBackgroundColo=
r: var(--primaryColor); --primaryButtonBackgroundHoverColor: var(--primaryC=
olorHover); --primaryButtonBackgroundActiveColor: var(--primaryColorActive)=
; --primaryButtonBorderActive: var(--primaryButtonBorderActive); --primaryB=
uttonBorder: var(--primaryButtonBorder); --primaryButtonBorderHover: var(--=
primaryButtonBorderHover); --dashboardTopColor: var(--primaryColorBlue); --=
dashboardTitleColor: var(--themeColorEquatio); --dashboardPaneBackgroundCol=
or: var(--th-slate-dark); --dashboardPaneBorderColor: var(--th-slate-dark);=
 --dashboardPaneDashedBorderColor: var(--dashboardDashedBorderDark); --list=
GroupItemBackgroundColor: var(--th-slate-dark); --listGroupItemBackgroundCo=
lorHover: var(--th-slate-dark-hover800); --listGroupItemBackgroundColorActi=
ve: var(--th-slate-dark-active800); --listGroupTileBackgroundColorActive: v=
ar(--th-slate-dark-active800); --list-item-hover: var(--listGroupItemBackgr=
oundColorHover); }

.dark-mode.th-rd { --toolbarIconToggledHoverFill: var(--brandColorBlue); --=
toolbarIconToggleFill: var(--brandColorBlue); --toolbarIconToggleHoverFill:=
 var(--brandColorBlue); --dashboardTopColor: var(--th-slate); --dashboardCa=
rdAuditorColor: var(--primaryColorBlue); --dashboardCardAuditorLabelColor: =
var(--th-grey); --dashboardCardEditorColor: var(--reachDeckEditorColor); --=
dashboardCardEditorLabelColor: var(--th-grey); --dashboardCardToolbarColor:=
 var(--primaryColorOrange); --dashboardCardToolbarLabelColor: var(--th-grey=
); --dashboardCardBorderColor: var(--th-slate-light); --dashboardCardFooter=
LinkColor: hsl(197, 100%, 50%); --icon-opacity: .9; --cardIconFillColor: va=
r(--th-white); --listGroupItemBackgroundColor: var(--th-slate-dark); --list=
GroupItemBackgroundColorHover: var(--th-slate-dark-hover800); --listGroupIt=
emBackgroundColorActive: var(--th-slate-dark-active800); --listGroupTileBac=
kgroundColorActive: var(--th-slate-dark-active800); --list-item-hover: var(=
--listGroupItemBackgroundColorHover); }

.dark-mode .gw-select { background: url("data:image/svg+xml,<svg xmlns=3D'h=
ttp://www.w3.org/2000/svg' xmlns:xlink=3D'http://www.w3.org/1999/xlink' hei=
ght=3D'22px' width=3D'22px' viewBox=3D'0 0 18 18'>%3Cpath d=3D'M7.41 7.84L1=
2 12.42l4.59-4.58L18 9.25l-6 6-6-6z' fill=3D'%23fff'/%3E%3Cpath d=3D'M0-.75=
h24v24H0z' fill=3D'none'/%3E</svg>") right 0.9em top 40% / 1.3em no-repeat,=
 0px 0px / 100% repeat transparent; border: 1px solid rgb(255, 255, 255); c=
olor: rgb(255, 255, 255); }

.dark-mode .gw-select > option { background: rgb(67, 78, 101); }

@media (prefers-color-scheme: dark) {
  :root .day.dark-scheme { background: rgb(51, 51, 51); color: white; }
  :root .night.dark-scheme { background: black; color: rgb(221, 221, 221); =
}
}

@media (prefers-color-scheme: light) {
  :root .day.light-scheme { background: white; color: rgb(85, 85, 85); }
  :root .night.light-scheme { background: rgb(238, 238, 238); color: black;=
 }
}

.th-rw { --listGroupItemBackgroundColorActive: white; --squareButtonBackgro=
undHover: #f5f5f5; --squareButtonIconFillColor: rgb(36, 42, 56); --squareBu=
ttonActiveBackGroundColor: #EFEFEF; --squareButtonIconTickColor: #506C7E; }

.dark-mode { --listGroupItemBackgroundColorFocus: rgb(63, 79, 90); --modalT=
extColorFocus: white; --listGroupItemBackgroundColorActive: rgb(36, 45, 51)=
; --modalTextColorActive: white; --squareButtonBackgroundHover: rgb(56, 71,=
 81); --squareButtonIconFillColor: white; --squareButtonActiveBackGroundCol=
or: #24323E; --squareButtonIconTickColor: #FFF; }

.dark-mode.th-rw { --toolbarIconButtonFillColor: var(--white); }

.gw-toolbar--s1 { --fontSize: 5px; }

.gw-toolbar--s2 { --fontSize: 10px; }

.gw-toolbar--s3 { --fontSize: 15px; }

.gw-toolbar--s4 { --fontSize: 20px; }

.gw-listitem-fontsize-s10 { --gw-listitem-fontsize: 10px !important; }

.gw-listitem-fontsize-s11 { --gw-listitem-fontsize: 11px !important; }

.gw-listitem-fontsize-s12 { --gw-listitem-fontsize: 12px !important; }

.gw-listitem-fontsize-s13 { --gw-listitem-fontsize: 13px !important; }

.gw-listitem-fontsize-s14 { --gw-listitem-fontsize: 14px !important; }

.gw-listitem-fontsize-s15 { --gw-listitem-fontsize: 15px !important; }

.gw-listitem-fontsize-s16 { --gw-listitem-fontsize: 16px !important; }

.gw-listitem-fontsize-s17 { --gw-listitem-fontsize: 17px !important; }

.gw-listitem-fontsize-s18 { --gw-listitem-fontsize: 18px !important; }

.gw-listitem-fontsize-s19 { --gw-listitem-fontsize: 19px !important; }

.gw-listitem-fontsize-s20 { --gw-listitem-fontsize: 20px !important; }

.gw-listitem-fontsize-s21 { --gw-listitem-fontsize: 21px !important; }

.gw-listitem-fontsize-s22 { --gw-listitem-fontsize: 22px !important; }

.gw-listitem-fontsize-s23 { --gw-listitem-fontsize: 23px !important; }

.gw-listitem-fontsize-s24 { --gw-listitem-fontsize: 24px !important; }

:root { --fontSize: 10px; }

.gw-info { --notification-bg-color: var(--infoBackgroundColor); --notificat=
ion-border-color: var(--infoBorderColor); --notification-color: var(--infoT=
itleColor); }

.gw-success { --notification-bg-color: var(--successBackgroundColor); --not=
ification-border-color: var(--successBorderColor); --notification-color: va=
r(--successTitleColor); }

.gw-error { --notification-bg-color: var(--errorBackgroundColor); --notific=
ation-border-color: var(--errorBorderColor); --notification-color: var(--er=
rorTitleColor); }

.gw-warning { --notification-bg-color: var(--warningBackgroundColor); --not=
ification-border-color: var(--warningBorderColor); --notification-color: va=
r(--warningTitleColor); }

.th-rw { --toolbarIconToggleFill: var(--primaryColorPurple); --toolbarIconT=
oggleHoverFill: var(--primaryColorPurple); }

.gw-toolbar--undocked { --toolbarWidth: fit-content; --toolbarDisplay: bloc=
k; --toolbarPosition: fixed; }

.gw-ul--small { --liWidth: 150px; }

.gw-ul--medium { --liWidth: 300px; }

.gw-ul--large { --liWidth: 450px; }
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-0887d447-0d58-415e-83bb-a18cfed7afe0@mhtml.blink

@charset "utf-8";
=0A
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM----
Content-Type: text/html
Content-ID: <frame-E13BECF4C13A56B7D60D18EA8E38AA96@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"></head><body></body></html>
------MultipartBoundary--dASSqKb0jALrzKwQ1VL2mYUn43pkhkjc4m6WN2r4iM------
